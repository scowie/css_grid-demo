/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';

	var _vue = __webpack_require__(1);

	var _vue2 = _interopRequireDefault(_vue);

	var _vueResource = __webpack_require__(5);

	var _vueResource2 = _interopRequireDefault(_vueResource);

	var _vueRouter = __webpack_require__(7);

	var _vueRouter2 = _interopRequireDefault(_vueRouter);

	var _appContainer = __webpack_require__(8);

	var _appContainer2 = _interopRequireDefault(_appContainer);

	var _demoPage = __webpack_require__(15);

	var _demoPage2 = _interopRequireDefault(_demoPage);

	var _vueMaterial = __webpack_require__(20);

	var _vueMaterial2 = _interopRequireDefault(_vueMaterial);

	__webpack_require__(21);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	_vue2.default.use(_vueMaterial2.default);
	_vue2.default.use(_vueResource2.default);
	_vue2.default.use(_vueRouter2.default);
	_vue2.default.config.devtools = false;

	{
	  window.cssGridManager = {
	    bootstrap: function bootstrap() {
	      var _this = this;

	      if (!this.isLoading) {
	        this.isLoading = true;

	        document.addEventListener("DOMContentLoaded", function () {

	          _this.isLoading = false;

	          var router = new _vueRouter2.default({
	            base: __dirname,
	            routes: [{
	              path: '/',
	              name: 'demo',
	              component: _demoPage2.default
	            }, { path: '*', redirect: { path: '/' } }]
	          });

	          new _vue2.default({
	            el: '#app',
	            components: {
	              appContainer: _appContainer2.default,
	              demoPage: _demoPage2.default
	            },
	            router: router
	          });
	        });
	      }
	    }
	  };

	  window.cssGridManager.bootstrap();
	}
	/* WEBPACK VAR INJECTION */}.call(exports, "/"))

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!
	 * Vue.js v2.5.13
	 * (c) 2014-2017 Evan You
	 * Released under the MIT License.
	 */
	(function (global, factory) {
		 true ? module.exports = factory() :
		typeof define === 'function' && define.amd ? define(factory) :
		(global.Vue = factory());
	}(this, (function () { 'use strict';

	/*  */

	var emptyObject = Object.freeze({});

	// these helpers produces better vm code in JS engines due to their
	// explicitness and function inlining
	function isUndef (v) {
	  return v === undefined || v === null
	}

	function isDef (v) {
	  return v !== undefined && v !== null
	}

	function isTrue (v) {
	  return v === true
	}

	function isFalse (v) {
	  return v === false
	}

	/**
	 * Check if value is primitive
	 */
	function isPrimitive (value) {
	  return (
	    typeof value === 'string' ||
	    typeof value === 'number' ||
	    // $flow-disable-line
	    typeof value === 'symbol' ||
	    typeof value === 'boolean'
	  )
	}

	/**
	 * Quick object check - this is primarily used to tell
	 * Objects from primitive values when we know the value
	 * is a JSON-compliant type.
	 */
	function isObject (obj) {
	  return obj !== null && typeof obj === 'object'
	}

	/**
	 * Get the raw type string of a value e.g. [object Object]
	 */
	var _toString = Object.prototype.toString;

	function toRawType (value) {
	  return _toString.call(value).slice(8, -1)
	}

	/**
	 * Strict object type check. Only returns true
	 * for plain JavaScript objects.
	 */
	function isPlainObject (obj) {
	  return _toString.call(obj) === '[object Object]'
	}

	function isRegExp (v) {
	  return _toString.call(v) === '[object RegExp]'
	}

	/**
	 * Check if val is a valid array index.
	 */
	function isValidArrayIndex (val) {
	  var n = parseFloat(String(val));
	  return n >= 0 && Math.floor(n) === n && isFinite(val)
	}

	/**
	 * Convert a value to a string that is actually rendered.
	 */
	function toString (val) {
	  return val == null
	    ? ''
	    : typeof val === 'object'
	      ? JSON.stringify(val, null, 2)
	      : String(val)
	}

	/**
	 * Convert a input value to a number for persistence.
	 * If the conversion fails, return original string.
	 */
	function toNumber (val) {
	  var n = parseFloat(val);
	  return isNaN(n) ? val : n
	}

	/**
	 * Make a map and return a function for checking if a key
	 * is in that map.
	 */
	function makeMap (
	  str,
	  expectsLowerCase
	) {
	  var map = Object.create(null);
	  var list = str.split(',');
	  for (var i = 0; i < list.length; i++) {
	    map[list[i]] = true;
	  }
	  return expectsLowerCase
	    ? function (val) { return map[val.toLowerCase()]; }
	    : function (val) { return map[val]; }
	}

	/**
	 * Check if a tag is a built-in tag.
	 */
	var isBuiltInTag = makeMap('slot,component', true);

	/**
	 * Check if a attribute is a reserved attribute.
	 */
	var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

	/**
	 * Remove an item from an array
	 */
	function remove (arr, item) {
	  if (arr.length) {
	    var index = arr.indexOf(item);
	    if (index > -1) {
	      return arr.splice(index, 1)
	    }
	  }
	}

	/**
	 * Check whether the object has the property.
	 */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	function hasOwn (obj, key) {
	  return hasOwnProperty.call(obj, key)
	}

	/**
	 * Create a cached version of a pure function.
	 */
	function cached (fn) {
	  var cache = Object.create(null);
	  return (function cachedFn (str) {
	    var hit = cache[str];
	    return hit || (cache[str] = fn(str))
	  })
	}

	/**
	 * Camelize a hyphen-delimited string.
	 */
	var camelizeRE = /-(\w)/g;
	var camelize = cached(function (str) {
	  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
	});

	/**
	 * Capitalize a string.
	 */
	var capitalize = cached(function (str) {
	  return str.charAt(0).toUpperCase() + str.slice(1)
	});

	/**
	 * Hyphenate a camelCase string.
	 */
	var hyphenateRE = /\B([A-Z])/g;
	var hyphenate = cached(function (str) {
	  return str.replace(hyphenateRE, '-$1').toLowerCase()
	});

	/**
	 * Simple bind, faster than native
	 */
	function bind (fn, ctx) {
	  function boundFn (a) {
	    var l = arguments.length;
	    return l
	      ? l > 1
	        ? fn.apply(ctx, arguments)
	        : fn.call(ctx, a)
	      : fn.call(ctx)
	  }
	  // record original fn length
	  boundFn._length = fn.length;
	  return boundFn
	}

	/**
	 * Convert an Array-like object to a real Array.
	 */
	function toArray (list, start) {
	  start = start || 0;
	  var i = list.length - start;
	  var ret = new Array(i);
	  while (i--) {
	    ret[i] = list[i + start];
	  }
	  return ret
	}

	/**
	 * Mix properties into target object.
	 */
	function extend (to, _from) {
	  for (var key in _from) {
	    to[key] = _from[key];
	  }
	  return to
	}

	/**
	 * Merge an Array of Objects into a single Object.
	 */
	function toObject (arr) {
	  var res = {};
	  for (var i = 0; i < arr.length; i++) {
	    if (arr[i]) {
	      extend(res, arr[i]);
	    }
	  }
	  return res
	}

	/**
	 * Perform no operation.
	 * Stubbing args to make Flow happy without leaving useless transpiled code
	 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
	 */
	function noop (a, b, c) {}

	/**
	 * Always return false.
	 */
	var no = function (a, b, c) { return false; };

	/**
	 * Return same value
	 */
	var identity = function (_) { return _; };

	/**
	 * Generate a static keys string from compiler modules.
	 */
	function genStaticKeys (modules) {
	  return modules.reduce(function (keys, m) {
	    return keys.concat(m.staticKeys || [])
	  }, []).join(',')
	}

	/**
	 * Check if two values are loosely equal - that is,
	 * if they are plain objects, do they have the same shape?
	 */
	function looseEqual (a, b) {
	  if (a === b) { return true }
	  var isObjectA = isObject(a);
	  var isObjectB = isObject(b);
	  if (isObjectA && isObjectB) {
	    try {
	      var isArrayA = Array.isArray(a);
	      var isArrayB = Array.isArray(b);
	      if (isArrayA && isArrayB) {
	        return a.length === b.length && a.every(function (e, i) {
	          return looseEqual(e, b[i])
	        })
	      } else if (!isArrayA && !isArrayB) {
	        var keysA = Object.keys(a);
	        var keysB = Object.keys(b);
	        return keysA.length === keysB.length && keysA.every(function (key) {
	          return looseEqual(a[key], b[key])
	        })
	      } else {
	        /* istanbul ignore next */
	        return false
	      }
	    } catch (e) {
	      /* istanbul ignore next */
	      return false
	    }
	  } else if (!isObjectA && !isObjectB) {
	    return String(a) === String(b)
	  } else {
	    return false
	  }
	}

	function looseIndexOf (arr, val) {
	  for (var i = 0; i < arr.length; i++) {
	    if (looseEqual(arr[i], val)) { return i }
	  }
	  return -1
	}

	/**
	 * Ensure a function is called only once.
	 */
	function once (fn) {
	  var called = false;
	  return function () {
	    if (!called) {
	      called = true;
	      fn.apply(this, arguments);
	    }
	  }
	}

	var SSR_ATTR = 'data-server-rendered';

	var ASSET_TYPES = [
	  'component',
	  'directive',
	  'filter'
	];

	var LIFECYCLE_HOOKS = [
	  'beforeCreate',
	  'created',
	  'beforeMount',
	  'mounted',
	  'beforeUpdate',
	  'updated',
	  'beforeDestroy',
	  'destroyed',
	  'activated',
	  'deactivated',
	  'errorCaptured'
	];

	/*  */

	var config = ({
	  /**
	   * Option merge strategies (used in core/util/options)
	   */
	  // $flow-disable-line
	  optionMergeStrategies: Object.create(null),

	  /**
	   * Whether to suppress warnings.
	   */
	  silent: false,

	  /**
	   * Show production mode tip message on boot?
	   */
	  productionTip: "development" !== 'production',

	  /**
	   * Whether to enable devtools
	   */
	  devtools: "development" !== 'production',

	  /**
	   * Whether to record perf
	   */
	  performance: false,

	  /**
	   * Error handler for watcher errors
	   */
	  errorHandler: null,

	  /**
	   * Warn handler for watcher warns
	   */
	  warnHandler: null,

	  /**
	   * Ignore certain custom elements
	   */
	  ignoredElements: [],

	  /**
	   * Custom user key aliases for v-on
	   */
	  // $flow-disable-line
	  keyCodes: Object.create(null),

	  /**
	   * Check if a tag is reserved so that it cannot be registered as a
	   * component. This is platform-dependent and may be overwritten.
	   */
	  isReservedTag: no,

	  /**
	   * Check if an attribute is reserved so that it cannot be used as a component
	   * prop. This is platform-dependent and may be overwritten.
	   */
	  isReservedAttr: no,

	  /**
	   * Check if a tag is an unknown element.
	   * Platform-dependent.
	   */
	  isUnknownElement: no,

	  /**
	   * Get the namespace of an element
	   */
	  getTagNamespace: noop,

	  /**
	   * Parse the real tag name for the specific platform.
	   */
	  parsePlatformTagName: identity,

	  /**
	   * Check if an attribute must be bound using property, e.g. value
	   * Platform-dependent.
	   */
	  mustUseProp: no,

	  /**
	   * Exposed for legacy reasons
	   */
	  _lifecycleHooks: LIFECYCLE_HOOKS
	});

	/*  */

	/**
	 * Check if a string starts with $ or _
	 */
	function isReserved (str) {
	  var c = (str + '').charCodeAt(0);
	  return c === 0x24 || c === 0x5F
	}

	/**
	 * Define a property.
	 */
	function def (obj, key, val, enumerable) {
	  Object.defineProperty(obj, key, {
	    value: val,
	    enumerable: !!enumerable,
	    writable: true,
	    configurable: true
	  });
	}

	/**
	 * Parse simple path.
	 */
	var bailRE = /[^\w.$]/;
	function parsePath (path) {
	  if (bailRE.test(path)) {
	    return
	  }
	  var segments = path.split('.');
	  return function (obj) {
	    for (var i = 0; i < segments.length; i++) {
	      if (!obj) { return }
	      obj = obj[segments[i]];
	    }
	    return obj
	  }
	}

	/*  */


	// can we use __proto__?
	var hasProto = '__proto__' in {};

	// Browser environment sniffing
	var inBrowser = typeof window !== 'undefined';
	var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
	var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
	var UA = inBrowser && window.navigator.userAgent.toLowerCase();
	var isIE = UA && /msie|trident/.test(UA);
	var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
	var isEdge = UA && UA.indexOf('edge/') > 0;
	var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
	var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
	var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

	// Firefox has a "watch" function on Object.prototype...
	var nativeWatch = ({}).watch;

	var supportsPassive = false;
	if (inBrowser) {
	  try {
	    var opts = {};
	    Object.defineProperty(opts, 'passive', ({
	      get: function get () {
	        /* istanbul ignore next */
	        supportsPassive = true;
	      }
	    })); // https://github.com/facebook/flow/issues/285
	    window.addEventListener('test-passive', null, opts);
	  } catch (e) {}
	}

	// this needs to be lazy-evaled because vue may be required before
	// vue-server-renderer can set VUE_ENV
	var _isServer;
	var isServerRendering = function () {
	  if (_isServer === undefined) {
	    /* istanbul ignore if */
	    if (!inBrowser && typeof global !== 'undefined') {
	      // detect presence of vue-server-renderer and avoid
	      // Webpack shimming the process
	      _isServer = global['process'].env.VUE_ENV === 'server';
	    } else {
	      _isServer = false;
	    }
	  }
	  return _isServer
	};

	// detect devtools
	var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

	/* istanbul ignore next */
	function isNative (Ctor) {
	  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
	}

	var hasSymbol =
	  typeof Symbol !== 'undefined' && isNative(Symbol) &&
	  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

	var _Set;
	/* istanbul ignore if */ // $flow-disable-line
	if (typeof Set !== 'undefined' && isNative(Set)) {
	  // use native Set when available.
	  _Set = Set;
	} else {
	  // a non-standard Set polyfill that only works with primitive keys.
	  _Set = (function () {
	    function Set () {
	      this.set = Object.create(null);
	    }
	    Set.prototype.has = function has (key) {
	      return this.set[key] === true
	    };
	    Set.prototype.add = function add (key) {
	      this.set[key] = true;
	    };
	    Set.prototype.clear = function clear () {
	      this.set = Object.create(null);
	    };

	    return Set;
	  }());
	}

	/*  */

	var warn = noop;
	var tip = noop;
	var generateComponentTrace = (noop); // work around flow check
	var formatComponentName = (noop);

	{
	  var hasConsole = typeof console !== 'undefined';
	  var classifyRE = /(?:^|[-_])(\w)/g;
	  var classify = function (str) { return str
	    .replace(classifyRE, function (c) { return c.toUpperCase(); })
	    .replace(/[-_]/g, ''); };

	  warn = function (msg, vm) {
	    var trace = vm ? generateComponentTrace(vm) : '';

	    if (config.warnHandler) {
	      config.warnHandler.call(null, msg, vm, trace);
	    } else if (hasConsole && (!config.silent)) {
	      console.error(("[Vue warn]: " + msg + trace));
	    }
	  };

	  tip = function (msg, vm) {
	    if (hasConsole && (!config.silent)) {
	      console.warn("[Vue tip]: " + msg + (
	        vm ? generateComponentTrace(vm) : ''
	      ));
	    }
	  };

	  formatComponentName = function (vm, includeFile) {
	    if (vm.$root === vm) {
	      return '<Root>'
	    }
	    var options = typeof vm === 'function' && vm.cid != null
	      ? vm.options
	      : vm._isVue
	        ? vm.$options || vm.constructor.options
	        : vm || {};
	    var name = options.name || options._componentTag;
	    var file = options.__file;
	    if (!name && file) {
	      var match = file.match(/([^/\\]+)\.vue$/);
	      name = match && match[1];
	    }

	    return (
	      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
	      (file && includeFile !== false ? (" at " + file) : '')
	    )
	  };

	  var repeat = function (str, n) {
	    var res = '';
	    while (n) {
	      if (n % 2 === 1) { res += str; }
	      if (n > 1) { str += str; }
	      n >>= 1;
	    }
	    return res
	  };

	  generateComponentTrace = function (vm) {
	    if (vm._isVue && vm.$parent) {
	      var tree = [];
	      var currentRecursiveSequence = 0;
	      while (vm) {
	        if (tree.length > 0) {
	          var last = tree[tree.length - 1];
	          if (last.constructor === vm.constructor) {
	            currentRecursiveSequence++;
	            vm = vm.$parent;
	            continue
	          } else if (currentRecursiveSequence > 0) {
	            tree[tree.length - 1] = [last, currentRecursiveSequence];
	            currentRecursiveSequence = 0;
	          }
	        }
	        tree.push(vm);
	        vm = vm.$parent;
	      }
	      return '\n\nfound in\n\n' + tree
	        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
	            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
	            : formatComponentName(vm))); })
	        .join('\n')
	    } else {
	      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
	    }
	  };
	}

	/*  */


	var uid = 0;

	/**
	 * A dep is an observable that can have multiple
	 * directives subscribing to it.
	 */
	var Dep = function Dep () {
	  this.id = uid++;
	  this.subs = [];
	};

	Dep.prototype.addSub = function addSub (sub) {
	  this.subs.push(sub);
	};

	Dep.prototype.removeSub = function removeSub (sub) {
	  remove(this.subs, sub);
	};

	Dep.prototype.depend = function depend () {
	  if (Dep.target) {
	    Dep.target.addDep(this);
	  }
	};

	Dep.prototype.notify = function notify () {
	  // stabilize the subscriber list first
	  var subs = this.subs.slice();
	  for (var i = 0, l = subs.length; i < l; i++) {
	    subs[i].update();
	  }
	};

	// the current target watcher being evaluated.
	// this is globally unique because there could be only one
	// watcher being evaluated at any time.
	Dep.target = null;
	var targetStack = [];

	function pushTarget (_target) {
	  if (Dep.target) { targetStack.push(Dep.target); }
	  Dep.target = _target;
	}

	function popTarget () {
	  Dep.target = targetStack.pop();
	}

	/*  */

	var VNode = function VNode (
	  tag,
	  data,
	  children,
	  text,
	  elm,
	  context,
	  componentOptions,
	  asyncFactory
	) {
	  this.tag = tag;
	  this.data = data;
	  this.children = children;
	  this.text = text;
	  this.elm = elm;
	  this.ns = undefined;
	  this.context = context;
	  this.fnContext = undefined;
	  this.fnOptions = undefined;
	  this.fnScopeId = undefined;
	  this.key = data && data.key;
	  this.componentOptions = componentOptions;
	  this.componentInstance = undefined;
	  this.parent = undefined;
	  this.raw = false;
	  this.isStatic = false;
	  this.isRootInsert = true;
	  this.isComment = false;
	  this.isCloned = false;
	  this.isOnce = false;
	  this.asyncFactory = asyncFactory;
	  this.asyncMeta = undefined;
	  this.isAsyncPlaceholder = false;
	};

	var prototypeAccessors = { child: { configurable: true } };

	// DEPRECATED: alias for componentInstance for backwards compat.
	/* istanbul ignore next */
	prototypeAccessors.child.get = function () {
	  return this.componentInstance
	};

	Object.defineProperties( VNode.prototype, prototypeAccessors );

	var createEmptyVNode = function (text) {
	  if ( text === void 0 ) text = '';

	  var node = new VNode();
	  node.text = text;
	  node.isComment = true;
	  return node
	};

	function createTextVNode (val) {
	  return new VNode(undefined, undefined, undefined, String(val))
	}

	// optimized shallow clone
	// used for static nodes and slot nodes because they may be reused across
	// multiple renders, cloning them avoids errors when DOM manipulations rely
	// on their elm reference.
	function cloneVNode (vnode, deep) {
	  var componentOptions = vnode.componentOptions;
	  var cloned = new VNode(
	    vnode.tag,
	    vnode.data,
	    vnode.children,
	    vnode.text,
	    vnode.elm,
	    vnode.context,
	    componentOptions,
	    vnode.asyncFactory
	  );
	  cloned.ns = vnode.ns;
	  cloned.isStatic = vnode.isStatic;
	  cloned.key = vnode.key;
	  cloned.isComment = vnode.isComment;
	  cloned.fnContext = vnode.fnContext;
	  cloned.fnOptions = vnode.fnOptions;
	  cloned.fnScopeId = vnode.fnScopeId;
	  cloned.isCloned = true;
	  if (deep) {
	    if (vnode.children) {
	      cloned.children = cloneVNodes(vnode.children, true);
	    }
	    if (componentOptions && componentOptions.children) {
	      componentOptions.children = cloneVNodes(componentOptions.children, true);
	    }
	  }
	  return cloned
	}

	function cloneVNodes (vnodes, deep) {
	  var len = vnodes.length;
	  var res = new Array(len);
	  for (var i = 0; i < len; i++) {
	    res[i] = cloneVNode(vnodes[i], deep);
	  }
	  return res
	}

	/*
	 * not type checking this file because flow doesn't play well with
	 * dynamically accessing methods on Array prototype
	 */

	var arrayProto = Array.prototype;
	var arrayMethods = Object.create(arrayProto);[
	  'push',
	  'pop',
	  'shift',
	  'unshift',
	  'splice',
	  'sort',
	  'reverse'
	].forEach(function (method) {
	  // cache original method
	  var original = arrayProto[method];
	  def(arrayMethods, method, function mutator () {
	    var args = [], len = arguments.length;
	    while ( len-- ) args[ len ] = arguments[ len ];

	    var result = original.apply(this, args);
	    var ob = this.__ob__;
	    var inserted;
	    switch (method) {
	      case 'push':
	      case 'unshift':
	        inserted = args;
	        break
	      case 'splice':
	        inserted = args.slice(2);
	        break
	    }
	    if (inserted) { ob.observeArray(inserted); }
	    // notify change
	    ob.dep.notify();
	    return result
	  });
	});

	/*  */

	var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

	/**
	 * By default, when a reactive property is set, the new value is
	 * also converted to become reactive. However when passing down props,
	 * we don't want to force conversion because the value may be a nested value
	 * under a frozen data structure. Converting it would defeat the optimization.
	 */
	var observerState = {
	  shouldConvert: true
	};

	/**
	 * Observer class that are attached to each observed
	 * object. Once attached, the observer converts target
	 * object's property keys into getter/setters that
	 * collect dependencies and dispatches updates.
	 */
	var Observer = function Observer (value) {
	  this.value = value;
	  this.dep = new Dep();
	  this.vmCount = 0;
	  def(value, '__ob__', this);
	  if (Array.isArray(value)) {
	    var augment = hasProto
	      ? protoAugment
	      : copyAugment;
	    augment(value, arrayMethods, arrayKeys);
	    this.observeArray(value);
	  } else {
	    this.walk(value);
	  }
	};

	/**
	 * Walk through each property and convert them into
	 * getter/setters. This method should only be called when
	 * value type is Object.
	 */
	Observer.prototype.walk = function walk (obj) {
	  var keys = Object.keys(obj);
	  for (var i = 0; i < keys.length; i++) {
	    defineReactive(obj, keys[i], obj[keys[i]]);
	  }
	};

	/**
	 * Observe a list of Array items.
	 */
	Observer.prototype.observeArray = function observeArray (items) {
	  for (var i = 0, l = items.length; i < l; i++) {
	    observe(items[i]);
	  }
	};

	// helpers

	/**
	 * Augment an target Object or Array by intercepting
	 * the prototype chain using __proto__
	 */
	function protoAugment (target, src, keys) {
	  /* eslint-disable no-proto */
	  target.__proto__ = src;
	  /* eslint-enable no-proto */
	}

	/**
	 * Augment an target Object or Array by defining
	 * hidden properties.
	 */
	/* istanbul ignore next */
	function copyAugment (target, src, keys) {
	  for (var i = 0, l = keys.length; i < l; i++) {
	    var key = keys[i];
	    def(target, key, src[key]);
	  }
	}

	/**
	 * Attempt to create an observer instance for a value,
	 * returns the new observer if successfully observed,
	 * or the existing observer if the value already has one.
	 */
	function observe (value, asRootData) {
	  if (!isObject(value) || value instanceof VNode) {
	    return
	  }
	  var ob;
	  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
	    ob = value.__ob__;
	  } else if (
	    observerState.shouldConvert &&
	    !isServerRendering() &&
	    (Array.isArray(value) || isPlainObject(value)) &&
	    Object.isExtensible(value) &&
	    !value._isVue
	  ) {
	    ob = new Observer(value);
	  }
	  if (asRootData && ob) {
	    ob.vmCount++;
	  }
	  return ob
	}

	/**
	 * Define a reactive property on an Object.
	 */
	function defineReactive (
	  obj,
	  key,
	  val,
	  customSetter,
	  shallow
	) {
	  var dep = new Dep();

	  var property = Object.getOwnPropertyDescriptor(obj, key);
	  if (property && property.configurable === false) {
	    return
	  }

	  // cater for pre-defined getter/setters
	  var getter = property && property.get;
	  var setter = property && property.set;

	  var childOb = !shallow && observe(val);
	  Object.defineProperty(obj, key, {
	    enumerable: true,
	    configurable: true,
	    get: function reactiveGetter () {
	      var value = getter ? getter.call(obj) : val;
	      if (Dep.target) {
	        dep.depend();
	        if (childOb) {
	          childOb.dep.depend();
	          if (Array.isArray(value)) {
	            dependArray(value);
	          }
	        }
	      }
	      return value
	    },
	    set: function reactiveSetter (newVal) {
	      var value = getter ? getter.call(obj) : val;
	      /* eslint-disable no-self-compare */
	      if (newVal === value || (newVal !== newVal && value !== value)) {
	        return
	      }
	      /* eslint-enable no-self-compare */
	      if ("development" !== 'production' && customSetter) {
	        customSetter();
	      }
	      if (setter) {
	        setter.call(obj, newVal);
	      } else {
	        val = newVal;
	      }
	      childOb = !shallow && observe(newVal);
	      dep.notify();
	    }
	  });
	}

	/**
	 * Set a property on an object. Adds the new property and
	 * triggers change notification if the property doesn't
	 * already exist.
	 */
	function set (target, key, val) {
	  if (Array.isArray(target) && isValidArrayIndex(key)) {
	    target.length = Math.max(target.length, key);
	    target.splice(key, 1, val);
	    return val
	  }
	  if (key in target && !(key in Object.prototype)) {
	    target[key] = val;
	    return val
	  }
	  var ob = (target).__ob__;
	  if (target._isVue || (ob && ob.vmCount)) {
	    "development" !== 'production' && warn(
	      'Avoid adding reactive properties to a Vue instance or its root $data ' +
	      'at runtime - declare it upfront in the data option.'
	    );
	    return val
	  }
	  if (!ob) {
	    target[key] = val;
	    return val
	  }
	  defineReactive(ob.value, key, val);
	  ob.dep.notify();
	  return val
	}

	/**
	 * Delete a property and trigger change if necessary.
	 */
	function del (target, key) {
	  if (Array.isArray(target) && isValidArrayIndex(key)) {
	    target.splice(key, 1);
	    return
	  }
	  var ob = (target).__ob__;
	  if (target._isVue || (ob && ob.vmCount)) {
	    "development" !== 'production' && warn(
	      'Avoid deleting properties on a Vue instance or its root $data ' +
	      '- just set it to null.'
	    );
	    return
	  }
	  if (!hasOwn(target, key)) {
	    return
	  }
	  delete target[key];
	  if (!ob) {
	    return
	  }
	  ob.dep.notify();
	}

	/**
	 * Collect dependencies on array elements when the array is touched, since
	 * we cannot intercept array element access like property getters.
	 */
	function dependArray (value) {
	  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
	    e = value[i];
	    e && e.__ob__ && e.__ob__.dep.depend();
	    if (Array.isArray(e)) {
	      dependArray(e);
	    }
	  }
	}

	/*  */

	/**
	 * Option overwriting strategies are functions that handle
	 * how to merge a parent option value and a child option
	 * value into the final value.
	 */
	var strats = config.optionMergeStrategies;

	/**
	 * Options with restrictions
	 */
	{
	  strats.el = strats.propsData = function (parent, child, vm, key) {
	    if (!vm) {
	      warn(
	        "option \"" + key + "\" can only be used during instance " +
	        'creation with the `new` keyword.'
	      );
	    }
	    return defaultStrat(parent, child)
	  };
	}

	/**
	 * Helper that recursively merges two data objects together.
	 */
	function mergeData (to, from) {
	  if (!from) { return to }
	  var key, toVal, fromVal;
	  var keys = Object.keys(from);
	  for (var i = 0; i < keys.length; i++) {
	    key = keys[i];
	    toVal = to[key];
	    fromVal = from[key];
	    if (!hasOwn(to, key)) {
	      set(to, key, fromVal);
	    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
	      mergeData(toVal, fromVal);
	    }
	  }
	  return to
	}

	/**
	 * Data
	 */
	function mergeDataOrFn (
	  parentVal,
	  childVal,
	  vm
	) {
	  if (!vm) {
	    // in a Vue.extend merge, both should be functions
	    if (!childVal) {
	      return parentVal
	    }
	    if (!parentVal) {
	      return childVal
	    }
	    // when parentVal & childVal are both present,
	    // we need to return a function that returns the
	    // merged result of both functions... no need to
	    // check if parentVal is a function here because
	    // it has to be a function to pass previous merges.
	    return function mergedDataFn () {
	      return mergeData(
	        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
	        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
	      )
	    }
	  } else {
	    return function mergedInstanceDataFn () {
	      // instance merge
	      var instanceData = typeof childVal === 'function'
	        ? childVal.call(vm, vm)
	        : childVal;
	      var defaultData = typeof parentVal === 'function'
	        ? parentVal.call(vm, vm)
	        : parentVal;
	      if (instanceData) {
	        return mergeData(instanceData, defaultData)
	      } else {
	        return defaultData
	      }
	    }
	  }
	}

	strats.data = function (
	  parentVal,
	  childVal,
	  vm
	) {
	  if (!vm) {
	    if (childVal && typeof childVal !== 'function') {
	      "development" !== 'production' && warn(
	        'The "data" option should be a function ' +
	        'that returns a per-instance value in component ' +
	        'definitions.',
	        vm
	      );

	      return parentVal
	    }
	    return mergeDataOrFn(parentVal, childVal)
	  }

	  return mergeDataOrFn(parentVal, childVal, vm)
	};

	/**
	 * Hooks and props are merged as arrays.
	 */
	function mergeHook (
	  parentVal,
	  childVal
	) {
	  return childVal
	    ? parentVal
	      ? parentVal.concat(childVal)
	      : Array.isArray(childVal)
	        ? childVal
	        : [childVal]
	    : parentVal
	}

	LIFECYCLE_HOOKS.forEach(function (hook) {
	  strats[hook] = mergeHook;
	});

	/**
	 * Assets
	 *
	 * When a vm is present (instance creation), we need to do
	 * a three-way merge between constructor options, instance
	 * options and parent options.
	 */
	function mergeAssets (
	  parentVal,
	  childVal,
	  vm,
	  key
	) {
	  var res = Object.create(parentVal || null);
	  if (childVal) {
	    "development" !== 'production' && assertObjectType(key, childVal, vm);
	    return extend(res, childVal)
	  } else {
	    return res
	  }
	}

	ASSET_TYPES.forEach(function (type) {
	  strats[type + 's'] = mergeAssets;
	});

	/**
	 * Watchers.
	 *
	 * Watchers hashes should not overwrite one
	 * another, so we merge them as arrays.
	 */
	strats.watch = function (
	  parentVal,
	  childVal,
	  vm,
	  key
	) {
	  // work around Firefox's Object.prototype.watch...
	  if (parentVal === nativeWatch) { parentVal = undefined; }
	  if (childVal === nativeWatch) { childVal = undefined; }
	  /* istanbul ignore if */
	  if (!childVal) { return Object.create(parentVal || null) }
	  {
	    assertObjectType(key, childVal, vm);
	  }
	  if (!parentVal) { return childVal }
	  var ret = {};
	  extend(ret, parentVal);
	  for (var key$1 in childVal) {
	    var parent = ret[key$1];
	    var child = childVal[key$1];
	    if (parent && !Array.isArray(parent)) {
	      parent = [parent];
	    }
	    ret[key$1] = parent
	      ? parent.concat(child)
	      : Array.isArray(child) ? child : [child];
	  }
	  return ret
	};

	/**
	 * Other object hashes.
	 */
	strats.props =
	strats.methods =
	strats.inject =
	strats.computed = function (
	  parentVal,
	  childVal,
	  vm,
	  key
	) {
	  if (childVal && "development" !== 'production') {
	    assertObjectType(key, childVal, vm);
	  }
	  if (!parentVal) { return childVal }
	  var ret = Object.create(null);
	  extend(ret, parentVal);
	  if (childVal) { extend(ret, childVal); }
	  return ret
	};
	strats.provide = mergeDataOrFn;

	/**
	 * Default strategy.
	 */
	var defaultStrat = function (parentVal, childVal) {
	  return childVal === undefined
	    ? parentVal
	    : childVal
	};

	/**
	 * Validate component names
	 */
	function checkComponents (options) {
	  for (var key in options.components) {
	    validateComponentName(key);
	  }
	}

	function validateComponentName (name) {
	  if (!/^[a-zA-Z][\w-]*$/.test(name)) {
	    warn(
	      'Invalid component name: "' + name + '". Component names ' +
	      'can only contain alphanumeric characters and the hyphen, ' +
	      'and must start with a letter.'
	    );
	  }
	  if (isBuiltInTag(name) || config.isReservedTag(name)) {
	    warn(
	      'Do not use built-in or reserved HTML elements as component ' +
	      'id: ' + name
	    );
	  }
	}

	/**
	 * Ensure all props option syntax are normalized into the
	 * Object-based format.
	 */
	function normalizeProps (options, vm) {
	  var props = options.props;
	  if (!props) { return }
	  var res = {};
	  var i, val, name;
	  if (Array.isArray(props)) {
	    i = props.length;
	    while (i--) {
	      val = props[i];
	      if (typeof val === 'string') {
	        name = camelize(val);
	        res[name] = { type: null };
	      } else {
	        warn('props must be strings when using array syntax.');
	      }
	    }
	  } else if (isPlainObject(props)) {
	    for (var key in props) {
	      val = props[key];
	      name = camelize(key);
	      res[name] = isPlainObject(val)
	        ? val
	        : { type: val };
	    }
	  } else {
	    warn(
	      "Invalid value for option \"props\": expected an Array or an Object, " +
	      "but got " + (toRawType(props)) + ".",
	      vm
	    );
	  }
	  options.props = res;
	}

	/**
	 * Normalize all injections into Object-based format
	 */
	function normalizeInject (options, vm) {
	  var inject = options.inject;
	  if (!inject) { return }
	  var normalized = options.inject = {};
	  if (Array.isArray(inject)) {
	    for (var i = 0; i < inject.length; i++) {
	      normalized[inject[i]] = { from: inject[i] };
	    }
	  } else if (isPlainObject(inject)) {
	    for (var key in inject) {
	      var val = inject[key];
	      normalized[key] = isPlainObject(val)
	        ? extend({ from: key }, val)
	        : { from: val };
	    }
	  } else {
	    warn(
	      "Invalid value for option \"inject\": expected an Array or an Object, " +
	      "but got " + (toRawType(inject)) + ".",
	      vm
	    );
	  }
	}

	/**
	 * Normalize raw function directives into object format.
	 */
	function normalizeDirectives (options) {
	  var dirs = options.directives;
	  if (dirs) {
	    for (var key in dirs) {
	      var def = dirs[key];
	      if (typeof def === 'function') {
	        dirs[key] = { bind: def, update: def };
	      }
	    }
	  }
	}

	function assertObjectType (name, value, vm) {
	  if (!isPlainObject(value)) {
	    warn(
	      "Invalid value for option \"" + name + "\": expected an Object, " +
	      "but got " + (toRawType(value)) + ".",
	      vm
	    );
	  }
	}

	/**
	 * Merge two option objects into a new one.
	 * Core utility used in both instantiation and inheritance.
	 */
	function mergeOptions (
	  parent,
	  child,
	  vm
	) {
	  {
	    checkComponents(child);
	  }

	  if (typeof child === 'function') {
	    child = child.options;
	  }

	  normalizeProps(child, vm);
	  normalizeInject(child, vm);
	  normalizeDirectives(child);
	  var extendsFrom = child.extends;
	  if (extendsFrom) {
	    parent = mergeOptions(parent, extendsFrom, vm);
	  }
	  if (child.mixins) {
	    for (var i = 0, l = child.mixins.length; i < l; i++) {
	      parent = mergeOptions(parent, child.mixins[i], vm);
	    }
	  }
	  var options = {};
	  var key;
	  for (key in parent) {
	    mergeField(key);
	  }
	  for (key in child) {
	    if (!hasOwn(parent, key)) {
	      mergeField(key);
	    }
	  }
	  function mergeField (key) {
	    var strat = strats[key] || defaultStrat;
	    options[key] = strat(parent[key], child[key], vm, key);
	  }
	  return options
	}

	/**
	 * Resolve an asset.
	 * This function is used because child instances need access
	 * to assets defined in its ancestor chain.
	 */
	function resolveAsset (
	  options,
	  type,
	  id,
	  warnMissing
	) {
	  /* istanbul ignore if */
	  if (typeof id !== 'string') {
	    return
	  }
	  var assets = options[type];
	  // check local registration variations first
	  if (hasOwn(assets, id)) { return assets[id] }
	  var camelizedId = camelize(id);
	  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
	  var PascalCaseId = capitalize(camelizedId);
	  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
	  // fallback to prototype chain
	  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
	  if ("development" !== 'production' && warnMissing && !res) {
	    warn(
	      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
	      options
	    );
	  }
	  return res
	}

	/*  */

	function validateProp (
	  key,
	  propOptions,
	  propsData,
	  vm
	) {
	  var prop = propOptions[key];
	  var absent = !hasOwn(propsData, key);
	  var value = propsData[key];
	  // handle boolean props
	  if (isType(Boolean, prop.type)) {
	    if (absent && !hasOwn(prop, 'default')) {
	      value = false;
	    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {
	      value = true;
	    }
	  }
	  // check default value
	  if (value === undefined) {
	    value = getPropDefaultValue(vm, prop, key);
	    // since the default value is a fresh copy,
	    // make sure to observe it.
	    var prevShouldConvert = observerState.shouldConvert;
	    observerState.shouldConvert = true;
	    observe(value);
	    observerState.shouldConvert = prevShouldConvert;
	  }
	  {
	    assertProp(prop, key, value, vm, absent);
	  }
	  return value
	}

	/**
	 * Get the default value of a prop.
	 */
	function getPropDefaultValue (vm, prop, key) {
	  // no default, return undefined
	  if (!hasOwn(prop, 'default')) {
	    return undefined
	  }
	  var def = prop.default;
	  // warn against non-factory defaults for Object & Array
	  if ("development" !== 'production' && isObject(def)) {
	    warn(
	      'Invalid default value for prop "' + key + '": ' +
	      'Props with type Object/Array must use a factory function ' +
	      'to return the default value.',
	      vm
	    );
	  }
	  // the raw prop value was also undefined from previous render,
	  // return previous default value to avoid unnecessary watcher trigger
	  if (vm && vm.$options.propsData &&
	    vm.$options.propsData[key] === undefined &&
	    vm._props[key] !== undefined
	  ) {
	    return vm._props[key]
	  }
	  // call factory function for non-Function types
	  // a value is Function if its prototype is function even across different execution context
	  return typeof def === 'function' && getType(prop.type) !== 'Function'
	    ? def.call(vm)
	    : def
	}

	/**
	 * Assert whether a prop is valid.
	 */
	function assertProp (
	  prop,
	  name,
	  value,
	  vm,
	  absent
	) {
	  if (prop.required && absent) {
	    warn(
	      'Missing required prop: "' + name + '"',
	      vm
	    );
	    return
	  }
	  if (value == null && !prop.required) {
	    return
	  }
	  var type = prop.type;
	  var valid = !type || type === true;
	  var expectedTypes = [];
	  if (type) {
	    if (!Array.isArray(type)) {
	      type = [type];
	    }
	    for (var i = 0; i < type.length && !valid; i++) {
	      var assertedType = assertType(value, type[i]);
	      expectedTypes.push(assertedType.expectedType || '');
	      valid = assertedType.valid;
	    }
	  }
	  if (!valid) {
	    warn(
	      "Invalid prop: type check failed for prop \"" + name + "\"." +
	      " Expected " + (expectedTypes.map(capitalize).join(', ')) +
	      ", got " + (toRawType(value)) + ".",
	      vm
	    );
	    return
	  }
	  var validator = prop.validator;
	  if (validator) {
	    if (!validator(value)) {
	      warn(
	        'Invalid prop: custom validator check failed for prop "' + name + '".',
	        vm
	      );
	    }
	  }
	}

	var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

	function assertType (value, type) {
	  var valid;
	  var expectedType = getType(type);
	  if (simpleCheckRE.test(expectedType)) {
	    var t = typeof value;
	    valid = t === expectedType.toLowerCase();
	    // for primitive wrapper objects
	    if (!valid && t === 'object') {
	      valid = value instanceof type;
	    }
	  } else if (expectedType === 'Object') {
	    valid = isPlainObject(value);
	  } else if (expectedType === 'Array') {
	    valid = Array.isArray(value);
	  } else {
	    valid = value instanceof type;
	  }
	  return {
	    valid: valid,
	    expectedType: expectedType
	  }
	}

	/**
	 * Use function string name to check built-in types,
	 * because a simple equality check will fail when running
	 * across different vms / iframes.
	 */
	function getType (fn) {
	  var match = fn && fn.toString().match(/^\s*function (\w+)/);
	  return match ? match[1] : ''
	}

	function isType (type, fn) {
	  if (!Array.isArray(fn)) {
	    return getType(fn) === getType(type)
	  }
	  for (var i = 0, len = fn.length; i < len; i++) {
	    if (getType(fn[i]) === getType(type)) {
	      return true
	    }
	  }
	  /* istanbul ignore next */
	  return false
	}

	/*  */

	function handleError (err, vm, info) {
	  if (vm) {
	    var cur = vm;
	    while ((cur = cur.$parent)) {
	      var hooks = cur.$options.errorCaptured;
	      if (hooks) {
	        for (var i = 0; i < hooks.length; i++) {
	          try {
	            var capture = hooks[i].call(cur, err, vm, info) === false;
	            if (capture) { return }
	          } catch (e) {
	            globalHandleError(e, cur, 'errorCaptured hook');
	          }
	        }
	      }
	    }
	  }
	  globalHandleError(err, vm, info);
	}

	function globalHandleError (err, vm, info) {
	  if (config.errorHandler) {
	    try {
	      return config.errorHandler.call(null, err, vm, info)
	    } catch (e) {
	      logError(e, null, 'config.errorHandler');
	    }
	  }
	  logError(err, vm, info);
	}

	function logError (err, vm, info) {
	  {
	    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
	  }
	  /* istanbul ignore else */
	  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
	    console.error(err);
	  } else {
	    throw err
	  }
	}

	/*  */
	/* globals MessageChannel */

	var callbacks = [];
	var pending = false;

	function flushCallbacks () {
	  pending = false;
	  var copies = callbacks.slice(0);
	  callbacks.length = 0;
	  for (var i = 0; i < copies.length; i++) {
	    copies[i]();
	  }
	}

	// Here we have async deferring wrappers using both micro and macro tasks.
	// In < 2.4 we used micro tasks everywhere, but there are some scenarios where
	// micro tasks have too high a priority and fires in between supposedly
	// sequential events (e.g. #4521, #6690) or even between bubbling of the same
	// event (#6566). However, using macro tasks everywhere also has subtle problems
	// when state is changed right before repaint (e.g. #6813, out-in transitions).
	// Here we use micro task by default, but expose a way to force macro task when
	// needed (e.g. in event handlers attached by v-on).
	var microTimerFunc;
	var macroTimerFunc;
	var useMacroTask = false;

	// Determine (macro) Task defer implementation.
	// Technically setImmediate should be the ideal choice, but it's only available
	// in IE. The only polyfill that consistently queues the callback after all DOM
	// events triggered in the same loop is by using MessageChannel.
	/* istanbul ignore if */
	if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
	  macroTimerFunc = function () {
	    setImmediate(flushCallbacks);
	  };
	} else if (typeof MessageChannel !== 'undefined' && (
	  isNative(MessageChannel) ||
	  // PhantomJS
	  MessageChannel.toString() === '[object MessageChannelConstructor]'
	)) {
	  var channel = new MessageChannel();
	  var port = channel.port2;
	  channel.port1.onmessage = flushCallbacks;
	  macroTimerFunc = function () {
	    port.postMessage(1);
	  };
	} else {
	  /* istanbul ignore next */
	  macroTimerFunc = function () {
	    setTimeout(flushCallbacks, 0);
	  };
	}

	// Determine MicroTask defer implementation.
	/* istanbul ignore next, $flow-disable-line */
	if (typeof Promise !== 'undefined' && isNative(Promise)) {
	  var p = Promise.resolve();
	  microTimerFunc = function () {
	    p.then(flushCallbacks);
	    // in problematic UIWebViews, Promise.then doesn't completely break, but
	    // it can get stuck in a weird state where callbacks are pushed into the
	    // microtask queue but the queue isn't being flushed, until the browser
	    // needs to do some other work, e.g. handle a timer. Therefore we can
	    // "force" the microtask queue to be flushed by adding an empty timer.
	    if (isIOS) { setTimeout(noop); }
	  };
	} else {
	  // fallback to macro
	  microTimerFunc = macroTimerFunc;
	}

	/**
	 * Wrap a function so that if any code inside triggers state change,
	 * the changes are queued using a Task instead of a MicroTask.
	 */
	function withMacroTask (fn) {
	  return fn._withTask || (fn._withTask = function () {
	    useMacroTask = true;
	    var res = fn.apply(null, arguments);
	    useMacroTask = false;
	    return res
	  })
	}

	function nextTick (cb, ctx) {
	  var _resolve;
	  callbacks.push(function () {
	    if (cb) {
	      try {
	        cb.call(ctx);
	      } catch (e) {
	        handleError(e, ctx, 'nextTick');
	      }
	    } else if (_resolve) {
	      _resolve(ctx);
	    }
	  });
	  if (!pending) {
	    pending = true;
	    if (useMacroTask) {
	      macroTimerFunc();
	    } else {
	      microTimerFunc();
	    }
	  }
	  // $flow-disable-line
	  if (!cb && typeof Promise !== 'undefined') {
	    return new Promise(function (resolve) {
	      _resolve = resolve;
	    })
	  }
	}

	/*  */

	var mark;
	var measure;

	{
	  var perf = inBrowser && window.performance;
	  /* istanbul ignore if */
	  if (
	    perf &&
	    perf.mark &&
	    perf.measure &&
	    perf.clearMarks &&
	    perf.clearMeasures
	  ) {
	    mark = function (tag) { return perf.mark(tag); };
	    measure = function (name, startTag, endTag) {
	      perf.measure(name, startTag, endTag);
	      perf.clearMarks(startTag);
	      perf.clearMarks(endTag);
	      perf.clearMeasures(name);
	    };
	  }
	}

	/* not type checking this file because flow doesn't play well with Proxy */

	var initProxy;

	{
	  var allowedGlobals = makeMap(
	    'Infinity,undefined,NaN,isFinite,isNaN,' +
	    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
	    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
	    'require' // for Webpack/Browserify
	  );

	  var warnNonPresent = function (target, key) {
	    warn(
	      "Property or method \"" + key + "\" is not defined on the instance but " +
	      'referenced during render. Make sure that this property is reactive, ' +
	      'either in the data option, or for class-based components, by ' +
	      'initializing the property. ' +
	      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
	      target
	    );
	  };

	  var hasProxy =
	    typeof Proxy !== 'undefined' &&
	    Proxy.toString().match(/native code/);

	  if (hasProxy) {
	    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
	    config.keyCodes = new Proxy(config.keyCodes, {
	      set: function set (target, key, value) {
	        if (isBuiltInModifier(key)) {
	          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
	          return false
	        } else {
	          target[key] = value;
	          return true
	        }
	      }
	    });
	  }

	  var hasHandler = {
	    has: function has (target, key) {
	      var has = key in target;
	      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
	      if (!has && !isAllowed) {
	        warnNonPresent(target, key);
	      }
	      return has || !isAllowed
	    }
	  };

	  var getHandler = {
	    get: function get (target, key) {
	      if (typeof key === 'string' && !(key in target)) {
	        warnNonPresent(target, key);
	      }
	      return target[key]
	    }
	  };

	  initProxy = function initProxy (vm) {
	    if (hasProxy) {
	      // determine which proxy handler to use
	      var options = vm.$options;
	      var handlers = options.render && options.render._withStripped
	        ? getHandler
	        : hasHandler;
	      vm._renderProxy = new Proxy(vm, handlers);
	    } else {
	      vm._renderProxy = vm;
	    }
	  };
	}

	/*  */

	var seenObjects = new _Set();

	/**
	 * Recursively traverse an object to evoke all converted
	 * getters, so that every nested property inside the object
	 * is collected as a "deep" dependency.
	 */
	function traverse (val) {
	  _traverse(val, seenObjects);
	  seenObjects.clear();
	}

	function _traverse (val, seen) {
	  var i, keys;
	  var isA = Array.isArray(val);
	  if ((!isA && !isObject(val)) || Object.isFrozen(val)) {
	    return
	  }
	  if (val.__ob__) {
	    var depId = val.__ob__.dep.id;
	    if (seen.has(depId)) {
	      return
	    }
	    seen.add(depId);
	  }
	  if (isA) {
	    i = val.length;
	    while (i--) { _traverse(val[i], seen); }
	  } else {
	    keys = Object.keys(val);
	    i = keys.length;
	    while (i--) { _traverse(val[keys[i]], seen); }
	  }
	}

	/*  */

	var normalizeEvent = cached(function (name) {
	  var passive = name.charAt(0) === '&';
	  name = passive ? name.slice(1) : name;
	  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
	  name = once$$1 ? name.slice(1) : name;
	  var capture = name.charAt(0) === '!';
	  name = capture ? name.slice(1) : name;
	  return {
	    name: name,
	    once: once$$1,
	    capture: capture,
	    passive: passive
	  }
	});

	function createFnInvoker (fns) {
	  function invoker () {
	    var arguments$1 = arguments;

	    var fns = invoker.fns;
	    if (Array.isArray(fns)) {
	      var cloned = fns.slice();
	      for (var i = 0; i < cloned.length; i++) {
	        cloned[i].apply(null, arguments$1);
	      }
	    } else {
	      // return handler return value for single handlers
	      return fns.apply(null, arguments)
	    }
	  }
	  invoker.fns = fns;
	  return invoker
	}

	function updateListeners (
	  on,
	  oldOn,
	  add,
	  remove$$1,
	  vm
	) {
	  var name, def, cur, old, event;
	  for (name in on) {
	    def = cur = on[name];
	    old = oldOn[name];
	    event = normalizeEvent(name);
	    /* istanbul ignore if */
	    if (isUndef(cur)) {
	      "development" !== 'production' && warn(
	        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
	        vm
	      );
	    } else if (isUndef(old)) {
	      if (isUndef(cur.fns)) {
	        cur = on[name] = createFnInvoker(cur);
	      }
	      add(event.name, cur, event.once, event.capture, event.passive, event.params);
	    } else if (cur !== old) {
	      old.fns = cur;
	      on[name] = old;
	    }
	  }
	  for (name in oldOn) {
	    if (isUndef(on[name])) {
	      event = normalizeEvent(name);
	      remove$$1(event.name, oldOn[name], event.capture);
	    }
	  }
	}

	/*  */

	function mergeVNodeHook (def, hookKey, hook) {
	  if (def instanceof VNode) {
	    def = def.data.hook || (def.data.hook = {});
	  }
	  var invoker;
	  var oldHook = def[hookKey];

	  function wrappedHook () {
	    hook.apply(this, arguments);
	    // important: remove merged hook to ensure it's called only once
	    // and prevent memory leak
	    remove(invoker.fns, wrappedHook);
	  }

	  if (isUndef(oldHook)) {
	    // no existing hook
	    invoker = createFnInvoker([wrappedHook]);
	  } else {
	    /* istanbul ignore if */
	    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
	      // already a merged invoker
	      invoker = oldHook;
	      invoker.fns.push(wrappedHook);
	    } else {
	      // existing plain hook
	      invoker = createFnInvoker([oldHook, wrappedHook]);
	    }
	  }

	  invoker.merged = true;
	  def[hookKey] = invoker;
	}

	/*  */

	function extractPropsFromVNodeData (
	  data,
	  Ctor,
	  tag
	) {
	  // we are only extracting raw values here.
	  // validation and default values are handled in the child
	  // component itself.
	  var propOptions = Ctor.options.props;
	  if (isUndef(propOptions)) {
	    return
	  }
	  var res = {};
	  var attrs = data.attrs;
	  var props = data.props;
	  if (isDef(attrs) || isDef(props)) {
	    for (var key in propOptions) {
	      var altKey = hyphenate(key);
	      {
	        var keyInLowerCase = key.toLowerCase();
	        if (
	          key !== keyInLowerCase &&
	          attrs && hasOwn(attrs, keyInLowerCase)
	        ) {
	          tip(
	            "Prop \"" + keyInLowerCase + "\" is passed to component " +
	            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
	            " \"" + key + "\". " +
	            "Note that HTML attributes are case-insensitive and camelCased " +
	            "props need to use their kebab-case equivalents when using in-DOM " +
	            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
	          );
	        }
	      }
	      checkProp(res, props, key, altKey, true) ||
	      checkProp(res, attrs, key, altKey, false);
	    }
	  }
	  return res
	}

	function checkProp (
	  res,
	  hash,
	  key,
	  altKey,
	  preserve
	) {
	  if (isDef(hash)) {
	    if (hasOwn(hash, key)) {
	      res[key] = hash[key];
	      if (!preserve) {
	        delete hash[key];
	      }
	      return true
	    } else if (hasOwn(hash, altKey)) {
	      res[key] = hash[altKey];
	      if (!preserve) {
	        delete hash[altKey];
	      }
	      return true
	    }
	  }
	  return false
	}

	/*  */

	// The template compiler attempts to minimize the need for normalization by
	// statically analyzing the template at compile time.
	//
	// For plain HTML markup, normalization can be completely skipped because the
	// generated render function is guaranteed to return Array<VNode>. There are
	// two cases where extra normalization is needed:

	// 1. When the children contains components - because a functional component
	// may return an Array instead of a single root. In this case, just a simple
	// normalization is needed - if any child is an Array, we flatten the whole
	// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
	// because functional components already normalize their own children.
	function simpleNormalizeChildren (children) {
	  for (var i = 0; i < children.length; i++) {
	    if (Array.isArray(children[i])) {
	      return Array.prototype.concat.apply([], children)
	    }
	  }
	  return children
	}

	// 2. When the children contains constructs that always generated nested Arrays,
	// e.g. <template>, <slot>, v-for, or when the children is provided by user
	// with hand-written render functions / JSX. In such cases a full normalization
	// is needed to cater to all possible types of children values.
	function normalizeChildren (children) {
	  return isPrimitive(children)
	    ? [createTextVNode(children)]
	    : Array.isArray(children)
	      ? normalizeArrayChildren(children)
	      : undefined
	}

	function isTextNode (node) {
	  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
	}

	function normalizeArrayChildren (children, nestedIndex) {
	  var res = [];
	  var i, c, lastIndex, last;
	  for (i = 0; i < children.length; i++) {
	    c = children[i];
	    if (isUndef(c) || typeof c === 'boolean') { continue }
	    lastIndex = res.length - 1;
	    last = res[lastIndex];
	    //  nested
	    if (Array.isArray(c)) {
	      if (c.length > 0) {
	        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
	        // merge adjacent text nodes
	        if (isTextNode(c[0]) && isTextNode(last)) {
	          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
	          c.shift();
	        }
	        res.push.apply(res, c);
	      }
	    } else if (isPrimitive(c)) {
	      if (isTextNode(last)) {
	        // merge adjacent text nodes
	        // this is necessary for SSR hydration because text nodes are
	        // essentially merged when rendered to HTML strings
	        res[lastIndex] = createTextVNode(last.text + c);
	      } else if (c !== '') {
	        // convert primitive to vnode
	        res.push(createTextVNode(c));
	      }
	    } else {
	      if (isTextNode(c) && isTextNode(last)) {
	        // merge adjacent text nodes
	        res[lastIndex] = createTextVNode(last.text + c.text);
	      } else {
	        // default key for nested array children (likely generated by v-for)
	        if (isTrue(children._isVList) &&
	          isDef(c.tag) &&
	          isUndef(c.key) &&
	          isDef(nestedIndex)) {
	          c.key = "__vlist" + nestedIndex + "_" + i + "__";
	        }
	        res.push(c);
	      }
	    }
	  }
	  return res
	}

	/*  */

	function ensureCtor (comp, base) {
	  if (
	    comp.__esModule ||
	    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
	  ) {
	    comp = comp.default;
	  }
	  return isObject(comp)
	    ? base.extend(comp)
	    : comp
	}

	function createAsyncPlaceholder (
	  factory,
	  data,
	  context,
	  children,
	  tag
	) {
	  var node = createEmptyVNode();
	  node.asyncFactory = factory;
	  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
	  return node
	}

	function resolveAsyncComponent (
	  factory,
	  baseCtor,
	  context
	) {
	  if (isTrue(factory.error) && isDef(factory.errorComp)) {
	    return factory.errorComp
	  }

	  if (isDef(factory.resolved)) {
	    return factory.resolved
	  }

	  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
	    return factory.loadingComp
	  }

	  if (isDef(factory.contexts)) {
	    // already pending
	    factory.contexts.push(context);
	  } else {
	    var contexts = factory.contexts = [context];
	    var sync = true;

	    var forceRender = function () {
	      for (var i = 0, l = contexts.length; i < l; i++) {
	        contexts[i].$forceUpdate();
	      }
	    };

	    var resolve = once(function (res) {
	      // cache resolved
	      factory.resolved = ensureCtor(res, baseCtor);
	      // invoke callbacks only if this is not a synchronous resolve
	      // (async resolves are shimmed as synchronous during SSR)
	      if (!sync) {
	        forceRender();
	      }
	    });

	    var reject = once(function (reason) {
	      "development" !== 'production' && warn(
	        "Failed to resolve async component: " + (String(factory)) +
	        (reason ? ("\nReason: " + reason) : '')
	      );
	      if (isDef(factory.errorComp)) {
	        factory.error = true;
	        forceRender();
	      }
	    });

	    var res = factory(resolve, reject);

	    if (isObject(res)) {
	      if (typeof res.then === 'function') {
	        // () => Promise
	        if (isUndef(factory.resolved)) {
	          res.then(resolve, reject);
	        }
	      } else if (isDef(res.component) && typeof res.component.then === 'function') {
	        res.component.then(resolve, reject);

	        if (isDef(res.error)) {
	          factory.errorComp = ensureCtor(res.error, baseCtor);
	        }

	        if (isDef(res.loading)) {
	          factory.loadingComp = ensureCtor(res.loading, baseCtor);
	          if (res.delay === 0) {
	            factory.loading = true;
	          } else {
	            setTimeout(function () {
	              if (isUndef(factory.resolved) && isUndef(factory.error)) {
	                factory.loading = true;
	                forceRender();
	              }
	            }, res.delay || 200);
	          }
	        }

	        if (isDef(res.timeout)) {
	          setTimeout(function () {
	            if (isUndef(factory.resolved)) {
	              reject(
	                "timeout (" + (res.timeout) + "ms)"
	              );
	            }
	          }, res.timeout);
	        }
	      }
	    }

	    sync = false;
	    // return in case resolved synchronously
	    return factory.loading
	      ? factory.loadingComp
	      : factory.resolved
	  }
	}

	/*  */

	function isAsyncPlaceholder (node) {
	  return node.isComment && node.asyncFactory
	}

	/*  */

	function getFirstComponentChild (children) {
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      var c = children[i];
	      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
	        return c
	      }
	    }
	  }
	}

	/*  */

	/*  */

	function initEvents (vm) {
	  vm._events = Object.create(null);
	  vm._hasHookEvent = false;
	  // init parent attached events
	  var listeners = vm.$options._parentListeners;
	  if (listeners) {
	    updateComponentListeners(vm, listeners);
	  }
	}

	var target;

	function add (event, fn, once) {
	  if (once) {
	    target.$once(event, fn);
	  } else {
	    target.$on(event, fn);
	  }
	}

	function remove$1 (event, fn) {
	  target.$off(event, fn);
	}

	function updateComponentListeners (
	  vm,
	  listeners,
	  oldListeners
	) {
	  target = vm;
	  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
	  target = undefined;
	}

	function eventsMixin (Vue) {
	  var hookRE = /^hook:/;
	  Vue.prototype.$on = function (event, fn) {
	    var this$1 = this;

	    var vm = this;
	    if (Array.isArray(event)) {
	      for (var i = 0, l = event.length; i < l; i++) {
	        this$1.$on(event[i], fn);
	      }
	    } else {
	      (vm._events[event] || (vm._events[event] = [])).push(fn);
	      // optimize hook:event cost by using a boolean flag marked at registration
	      // instead of a hash lookup
	      if (hookRE.test(event)) {
	        vm._hasHookEvent = true;
	      }
	    }
	    return vm
	  };

	  Vue.prototype.$once = function (event, fn) {
	    var vm = this;
	    function on () {
	      vm.$off(event, on);
	      fn.apply(vm, arguments);
	    }
	    on.fn = fn;
	    vm.$on(event, on);
	    return vm
	  };

	  Vue.prototype.$off = function (event, fn) {
	    var this$1 = this;

	    var vm = this;
	    // all
	    if (!arguments.length) {
	      vm._events = Object.create(null);
	      return vm
	    }
	    // array of events
	    if (Array.isArray(event)) {
	      for (var i = 0, l = event.length; i < l; i++) {
	        this$1.$off(event[i], fn);
	      }
	      return vm
	    }
	    // specific event
	    var cbs = vm._events[event];
	    if (!cbs) {
	      return vm
	    }
	    if (!fn) {
	      vm._events[event] = null;
	      return vm
	    }
	    if (fn) {
	      // specific handler
	      var cb;
	      var i$1 = cbs.length;
	      while (i$1--) {
	        cb = cbs[i$1];
	        if (cb === fn || cb.fn === fn) {
	          cbs.splice(i$1, 1);
	          break
	        }
	      }
	    }
	    return vm
	  };

	  Vue.prototype.$emit = function (event) {
	    var vm = this;
	    {
	      var lowerCaseEvent = event.toLowerCase();
	      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
	        tip(
	          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
	          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
	          "Note that HTML attributes are case-insensitive and you cannot use " +
	          "v-on to listen to camelCase events when using in-DOM templates. " +
	          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
	        );
	      }
	    }
	    var cbs = vm._events[event];
	    if (cbs) {
	      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
	      var args = toArray(arguments, 1);
	      for (var i = 0, l = cbs.length; i < l; i++) {
	        try {
	          cbs[i].apply(vm, args);
	        } catch (e) {
	          handleError(e, vm, ("event handler for \"" + event + "\""));
	        }
	      }
	    }
	    return vm
	  };
	}

	/*  */



	/**
	 * Runtime helper for resolving raw children VNodes into a slot object.
	 */
	function resolveSlots (
	  children,
	  context
	) {
	  var slots = {};
	  if (!children) {
	    return slots
	  }
	  for (var i = 0, l = children.length; i < l; i++) {
	    var child = children[i];
	    var data = child.data;
	    // remove slot attribute if the node is resolved as a Vue slot node
	    if (data && data.attrs && data.attrs.slot) {
	      delete data.attrs.slot;
	    }
	    // named slots should only be respected if the vnode was rendered in the
	    // same context.
	    if ((child.context === context || child.fnContext === context) &&
	      data && data.slot != null
	    ) {
	      var name = data.slot;
	      var slot = (slots[name] || (slots[name] = []));
	      if (child.tag === 'template') {
	        slot.push.apply(slot, child.children || []);
	      } else {
	        slot.push(child);
	      }
	    } else {
	      (slots.default || (slots.default = [])).push(child);
	    }
	  }
	  // ignore slots that contains only whitespace
	  for (var name$1 in slots) {
	    if (slots[name$1].every(isWhitespace)) {
	      delete slots[name$1];
	    }
	  }
	  return slots
	}

	function isWhitespace (node) {
	  return (node.isComment && !node.asyncFactory) || node.text === ' '
	}

	function resolveScopedSlots (
	  fns, // see flow/vnode
	  res
	) {
	  res = res || {};
	  for (var i = 0; i < fns.length; i++) {
	    if (Array.isArray(fns[i])) {
	      resolveScopedSlots(fns[i], res);
	    } else {
	      res[fns[i].key] = fns[i].fn;
	    }
	  }
	  return res
	}

	/*  */

	var activeInstance = null;
	var isUpdatingChildComponent = false;

	function initLifecycle (vm) {
	  var options = vm.$options;

	  // locate first non-abstract parent
	  var parent = options.parent;
	  if (parent && !options.abstract) {
	    while (parent.$options.abstract && parent.$parent) {
	      parent = parent.$parent;
	    }
	    parent.$children.push(vm);
	  }

	  vm.$parent = parent;
	  vm.$root = parent ? parent.$root : vm;

	  vm.$children = [];
	  vm.$refs = {};

	  vm._watcher = null;
	  vm._inactive = null;
	  vm._directInactive = false;
	  vm._isMounted = false;
	  vm._isDestroyed = false;
	  vm._isBeingDestroyed = false;
	}

	function lifecycleMixin (Vue) {
	  Vue.prototype._update = function (vnode, hydrating) {
	    var vm = this;
	    if (vm._isMounted) {
	      callHook(vm, 'beforeUpdate');
	    }
	    var prevEl = vm.$el;
	    var prevVnode = vm._vnode;
	    var prevActiveInstance = activeInstance;
	    activeInstance = vm;
	    vm._vnode = vnode;
	    // Vue.prototype.__patch__ is injected in entry points
	    // based on the rendering backend used.
	    if (!prevVnode) {
	      // initial render
	      vm.$el = vm.__patch__(
	        vm.$el, vnode, hydrating, false /* removeOnly */,
	        vm.$options._parentElm,
	        vm.$options._refElm
	      );
	      // no need for the ref nodes after initial patch
	      // this prevents keeping a detached DOM tree in memory (#5851)
	      vm.$options._parentElm = vm.$options._refElm = null;
	    } else {
	      // updates
	      vm.$el = vm.__patch__(prevVnode, vnode);
	    }
	    activeInstance = prevActiveInstance;
	    // update __vue__ reference
	    if (prevEl) {
	      prevEl.__vue__ = null;
	    }
	    if (vm.$el) {
	      vm.$el.__vue__ = vm;
	    }
	    // if parent is an HOC, update its $el as well
	    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
	      vm.$parent.$el = vm.$el;
	    }
	    // updated hook is called by the scheduler to ensure that children are
	    // updated in a parent's updated hook.
	  };

	  Vue.prototype.$forceUpdate = function () {
	    var vm = this;
	    if (vm._watcher) {
	      vm._watcher.update();
	    }
	  };

	  Vue.prototype.$destroy = function () {
	    var vm = this;
	    if (vm._isBeingDestroyed) {
	      return
	    }
	    callHook(vm, 'beforeDestroy');
	    vm._isBeingDestroyed = true;
	    // remove self from parent
	    var parent = vm.$parent;
	    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
	      remove(parent.$children, vm);
	    }
	    // teardown watchers
	    if (vm._watcher) {
	      vm._watcher.teardown();
	    }
	    var i = vm._watchers.length;
	    while (i--) {
	      vm._watchers[i].teardown();
	    }
	    // remove reference from data ob
	    // frozen object may not have observer.
	    if (vm._data.__ob__) {
	      vm._data.__ob__.vmCount--;
	    }
	    // call the last hook...
	    vm._isDestroyed = true;
	    // invoke destroy hooks on current rendered tree
	    vm.__patch__(vm._vnode, null);
	    // fire destroyed hook
	    callHook(vm, 'destroyed');
	    // turn off all instance listeners.
	    vm.$off();
	    // remove __vue__ reference
	    if (vm.$el) {
	      vm.$el.__vue__ = null;
	    }
	    // release circular reference (#6759)
	    if (vm.$vnode) {
	      vm.$vnode.parent = null;
	    }
	  };
	}

	function mountComponent (
	  vm,
	  el,
	  hydrating
	) {
	  vm.$el = el;
	  if (!vm.$options.render) {
	    vm.$options.render = createEmptyVNode;
	    {
	      /* istanbul ignore if */
	      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
	        vm.$options.el || el) {
	        warn(
	          'You are using the runtime-only build of Vue where the template ' +
	          'compiler is not available. Either pre-compile the templates into ' +
	          'render functions, or use the compiler-included build.',
	          vm
	        );
	      } else {
	        warn(
	          'Failed to mount component: template or render function not defined.',
	          vm
	        );
	      }
	    }
	  }
	  callHook(vm, 'beforeMount');

	  var updateComponent;
	  /* istanbul ignore if */
	  if ("development" !== 'production' && config.performance && mark) {
	    updateComponent = function () {
	      var name = vm._name;
	      var id = vm._uid;
	      var startTag = "vue-perf-start:" + id;
	      var endTag = "vue-perf-end:" + id;

	      mark(startTag);
	      var vnode = vm._render();
	      mark(endTag);
	      measure(("vue " + name + " render"), startTag, endTag);

	      mark(startTag);
	      vm._update(vnode, hydrating);
	      mark(endTag);
	      measure(("vue " + name + " patch"), startTag, endTag);
	    };
	  } else {
	    updateComponent = function () {
	      vm._update(vm._render(), hydrating);
	    };
	  }

	  // we set this to vm._watcher inside the watcher's constructor
	  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
	  // component's mounted hook), which relies on vm._watcher being already defined
	  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);
	  hydrating = false;

	  // manually mounted instance, call mounted on self
	  // mounted is called for render-created child components in its inserted hook
	  if (vm.$vnode == null) {
	    vm._isMounted = true;
	    callHook(vm, 'mounted');
	  }
	  return vm
	}

	function updateChildComponent (
	  vm,
	  propsData,
	  listeners,
	  parentVnode,
	  renderChildren
	) {
	  {
	    isUpdatingChildComponent = true;
	  }

	  // determine whether component has slot children
	  // we need to do this before overwriting $options._renderChildren
	  var hasChildren = !!(
	    renderChildren ||               // has new static slots
	    vm.$options._renderChildren ||  // has old static slots
	    parentVnode.data.scopedSlots || // has new scoped slots
	    vm.$scopedSlots !== emptyObject // has old scoped slots
	  );

	  vm.$options._parentVnode = parentVnode;
	  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

	  if (vm._vnode) { // update child tree's parent
	    vm._vnode.parent = parentVnode;
	  }
	  vm.$options._renderChildren = renderChildren;

	  // update $attrs and $listeners hash
	  // these are also reactive so they may trigger child update if the child
	  // used them during render
	  vm.$attrs = (parentVnode.data && parentVnode.data.attrs) || emptyObject;
	  vm.$listeners = listeners || emptyObject;

	  // update props
	  if (propsData && vm.$options.props) {
	    observerState.shouldConvert = false;
	    var props = vm._props;
	    var propKeys = vm.$options._propKeys || [];
	    for (var i = 0; i < propKeys.length; i++) {
	      var key = propKeys[i];
	      props[key] = validateProp(key, vm.$options.props, propsData, vm);
	    }
	    observerState.shouldConvert = true;
	    // keep a copy of raw propsData
	    vm.$options.propsData = propsData;
	  }

	  // update listeners
	  if (listeners) {
	    var oldListeners = vm.$options._parentListeners;
	    vm.$options._parentListeners = listeners;
	    updateComponentListeners(vm, listeners, oldListeners);
	  }
	  // resolve slots + force update if has children
	  if (hasChildren) {
	    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
	    vm.$forceUpdate();
	  }

	  {
	    isUpdatingChildComponent = false;
	  }
	}

	function isInInactiveTree (vm) {
	  while (vm && (vm = vm.$parent)) {
	    if (vm._inactive) { return true }
	  }
	  return false
	}

	function activateChildComponent (vm, direct) {
	  if (direct) {
	    vm._directInactive = false;
	    if (isInInactiveTree(vm)) {
	      return
	    }
	  } else if (vm._directInactive) {
	    return
	  }
	  if (vm._inactive || vm._inactive === null) {
	    vm._inactive = false;
	    for (var i = 0; i < vm.$children.length; i++) {
	      activateChildComponent(vm.$children[i]);
	    }
	    callHook(vm, 'activated');
	  }
	}

	function deactivateChildComponent (vm, direct) {
	  if (direct) {
	    vm._directInactive = true;
	    if (isInInactiveTree(vm)) {
	      return
	    }
	  }
	  if (!vm._inactive) {
	    vm._inactive = true;
	    for (var i = 0; i < vm.$children.length; i++) {
	      deactivateChildComponent(vm.$children[i]);
	    }
	    callHook(vm, 'deactivated');
	  }
	}

	function callHook (vm, hook) {
	  var handlers = vm.$options[hook];
	  if (handlers) {
	    for (var i = 0, j = handlers.length; i < j; i++) {
	      try {
	        handlers[i].call(vm);
	      } catch (e) {
	        handleError(e, vm, (hook + " hook"));
	      }
	    }
	  }
	  if (vm._hasHookEvent) {
	    vm.$emit('hook:' + hook);
	  }
	}

	/*  */


	var MAX_UPDATE_COUNT = 100;

	var queue = [];
	var activatedChildren = [];
	var has = {};
	var circular = {};
	var waiting = false;
	var flushing = false;
	var index = 0;

	/**
	 * Reset the scheduler's state.
	 */
	function resetSchedulerState () {
	  index = queue.length = activatedChildren.length = 0;
	  has = {};
	  {
	    circular = {};
	  }
	  waiting = flushing = false;
	}

	/**
	 * Flush both queues and run the watchers.
	 */
	function flushSchedulerQueue () {
	  flushing = true;
	  var watcher, id;

	  // Sort queue before flush.
	  // This ensures that:
	  // 1. Components are updated from parent to child. (because parent is always
	  //    created before the child)
	  // 2. A component's user watchers are run before its render watcher (because
	  //    user watchers are created before the render watcher)
	  // 3. If a component is destroyed during a parent component's watcher run,
	  //    its watchers can be skipped.
	  queue.sort(function (a, b) { return a.id - b.id; });

	  // do not cache length because more watchers might be pushed
	  // as we run existing watchers
	  for (index = 0; index < queue.length; index++) {
	    watcher = queue[index];
	    id = watcher.id;
	    has[id] = null;
	    watcher.run();
	    // in dev build, check and stop circular updates.
	    if ("development" !== 'production' && has[id] != null) {
	      circular[id] = (circular[id] || 0) + 1;
	      if (circular[id] > MAX_UPDATE_COUNT) {
	        warn(
	          'You may have an infinite update loop ' + (
	            watcher.user
	              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
	              : "in a component render function."
	          ),
	          watcher.vm
	        );
	        break
	      }
	    }
	  }

	  // keep copies of post queues before resetting state
	  var activatedQueue = activatedChildren.slice();
	  var updatedQueue = queue.slice();

	  resetSchedulerState();

	  // call component updated and activated hooks
	  callActivatedHooks(activatedQueue);
	  callUpdatedHooks(updatedQueue);

	  // devtool hook
	  /* istanbul ignore if */
	  if (devtools && config.devtools) {
	    devtools.emit('flush');
	  }
	}

	function callUpdatedHooks (queue) {
	  var i = queue.length;
	  while (i--) {
	    var watcher = queue[i];
	    var vm = watcher.vm;
	    if (vm._watcher === watcher && vm._isMounted) {
	      callHook(vm, 'updated');
	    }
	  }
	}

	/**
	 * Queue a kept-alive component that was activated during patch.
	 * The queue will be processed after the entire tree has been patched.
	 */
	function queueActivatedComponent (vm) {
	  // setting _inactive to false here so that a render function can
	  // rely on checking whether it's in an inactive tree (e.g. router-view)
	  vm._inactive = false;
	  activatedChildren.push(vm);
	}

	function callActivatedHooks (queue) {
	  for (var i = 0; i < queue.length; i++) {
	    queue[i]._inactive = true;
	    activateChildComponent(queue[i], true /* true */);
	  }
	}

	/**
	 * Push a watcher into the watcher queue.
	 * Jobs with duplicate IDs will be skipped unless it's
	 * pushed when the queue is being flushed.
	 */
	function queueWatcher (watcher) {
	  var id = watcher.id;
	  if (has[id] == null) {
	    has[id] = true;
	    if (!flushing) {
	      queue.push(watcher);
	    } else {
	      // if already flushing, splice the watcher based on its id
	      // if already past its id, it will be run next immediately.
	      var i = queue.length - 1;
	      while (i > index && queue[i].id > watcher.id) {
	        i--;
	      }
	      queue.splice(i + 1, 0, watcher);
	    }
	    // queue the flush
	    if (!waiting) {
	      waiting = true;
	      nextTick(flushSchedulerQueue);
	    }
	  }
	}

	/*  */

	var uid$2 = 0;

	/**
	 * A watcher parses an expression, collects dependencies,
	 * and fires callback when the expression value changes.
	 * This is used for both the $watch() api and directives.
	 */
	var Watcher = function Watcher (
	  vm,
	  expOrFn,
	  cb,
	  options,
	  isRenderWatcher
	) {
	  this.vm = vm;
	  if (isRenderWatcher) {
	    vm._watcher = this;
	  }
	  vm._watchers.push(this);
	  // options
	  if (options) {
	    this.deep = !!options.deep;
	    this.user = !!options.user;
	    this.lazy = !!options.lazy;
	    this.sync = !!options.sync;
	  } else {
	    this.deep = this.user = this.lazy = this.sync = false;
	  }
	  this.cb = cb;
	  this.id = ++uid$2; // uid for batching
	  this.active = true;
	  this.dirty = this.lazy; // for lazy watchers
	  this.deps = [];
	  this.newDeps = [];
	  this.depIds = new _Set();
	  this.newDepIds = new _Set();
	  this.expression = expOrFn.toString();
	  // parse expression for getter
	  if (typeof expOrFn === 'function') {
	    this.getter = expOrFn;
	  } else {
	    this.getter = parsePath(expOrFn);
	    if (!this.getter) {
	      this.getter = function () {};
	      "development" !== 'production' && warn(
	        "Failed watching path: \"" + expOrFn + "\" " +
	        'Watcher only accepts simple dot-delimited paths. ' +
	        'For full control, use a function instead.',
	        vm
	      );
	    }
	  }
	  this.value = this.lazy
	    ? undefined
	    : this.get();
	};

	/**
	 * Evaluate the getter, and re-collect dependencies.
	 */
	Watcher.prototype.get = function get () {
	  pushTarget(this);
	  var value;
	  var vm = this.vm;
	  try {
	    value = this.getter.call(vm, vm);
	  } catch (e) {
	    if (this.user) {
	      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
	    } else {
	      throw e
	    }
	  } finally {
	    // "touch" every property so they are all tracked as
	    // dependencies for deep watching
	    if (this.deep) {
	      traverse(value);
	    }
	    popTarget();
	    this.cleanupDeps();
	  }
	  return value
	};

	/**
	 * Add a dependency to this directive.
	 */
	Watcher.prototype.addDep = function addDep (dep) {
	  var id = dep.id;
	  if (!this.newDepIds.has(id)) {
	    this.newDepIds.add(id);
	    this.newDeps.push(dep);
	    if (!this.depIds.has(id)) {
	      dep.addSub(this);
	    }
	  }
	};

	/**
	 * Clean up for dependency collection.
	 */
	Watcher.prototype.cleanupDeps = function cleanupDeps () {
	    var this$1 = this;

	  var i = this.deps.length;
	  while (i--) {
	    var dep = this$1.deps[i];
	    if (!this$1.newDepIds.has(dep.id)) {
	      dep.removeSub(this$1);
	    }
	  }
	  var tmp = this.depIds;
	  this.depIds = this.newDepIds;
	  this.newDepIds = tmp;
	  this.newDepIds.clear();
	  tmp = this.deps;
	  this.deps = this.newDeps;
	  this.newDeps = tmp;
	  this.newDeps.length = 0;
	};

	/**
	 * Subscriber interface.
	 * Will be called when a dependency changes.
	 */
	Watcher.prototype.update = function update () {
	  /* istanbul ignore else */
	  if (this.lazy) {
	    this.dirty = true;
	  } else if (this.sync) {
	    this.run();
	  } else {
	    queueWatcher(this);
	  }
	};

	/**
	 * Scheduler job interface.
	 * Will be called by the scheduler.
	 */
	Watcher.prototype.run = function run () {
	  if (this.active) {
	    var value = this.get();
	    if (
	      value !== this.value ||
	      // Deep watchers and watchers on Object/Arrays should fire even
	      // when the value is the same, because the value may
	      // have mutated.
	      isObject(value) ||
	      this.deep
	    ) {
	      // set new value
	      var oldValue = this.value;
	      this.value = value;
	      if (this.user) {
	        try {
	          this.cb.call(this.vm, value, oldValue);
	        } catch (e) {
	          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
	        }
	      } else {
	        this.cb.call(this.vm, value, oldValue);
	      }
	    }
	  }
	};

	/**
	 * Evaluate the value of the watcher.
	 * This only gets called for lazy watchers.
	 */
	Watcher.prototype.evaluate = function evaluate () {
	  this.value = this.get();
	  this.dirty = false;
	};

	/**
	 * Depend on all deps collected by this watcher.
	 */
	Watcher.prototype.depend = function depend () {
	    var this$1 = this;

	  var i = this.deps.length;
	  while (i--) {
	    this$1.deps[i].depend();
	  }
	};

	/**
	 * Remove self from all dependencies' subscriber list.
	 */
	Watcher.prototype.teardown = function teardown () {
	    var this$1 = this;

	  if (this.active) {
	    // remove self from vm's watcher list
	    // this is a somewhat expensive operation so we skip it
	    // if the vm is being destroyed.
	    if (!this.vm._isBeingDestroyed) {
	      remove(this.vm._watchers, this);
	    }
	    var i = this.deps.length;
	    while (i--) {
	      this$1.deps[i].removeSub(this$1);
	    }
	    this.active = false;
	  }
	};

	/*  */

	var sharedPropertyDefinition = {
	  enumerable: true,
	  configurable: true,
	  get: noop,
	  set: noop
	};

	function proxy (target, sourceKey, key) {
	  sharedPropertyDefinition.get = function proxyGetter () {
	    return this[sourceKey][key]
	  };
	  sharedPropertyDefinition.set = function proxySetter (val) {
	    this[sourceKey][key] = val;
	  };
	  Object.defineProperty(target, key, sharedPropertyDefinition);
	}

	function initState (vm) {
	  vm._watchers = [];
	  var opts = vm.$options;
	  if (opts.props) { initProps(vm, opts.props); }
	  if (opts.methods) { initMethods(vm, opts.methods); }
	  if (opts.data) {
	    initData(vm);
	  } else {
	    observe(vm._data = {}, true /* asRootData */);
	  }
	  if (opts.computed) { initComputed(vm, opts.computed); }
	  if (opts.watch && opts.watch !== nativeWatch) {
	    initWatch(vm, opts.watch);
	  }
	}

	function initProps (vm, propsOptions) {
	  var propsData = vm.$options.propsData || {};
	  var props = vm._props = {};
	  // cache prop keys so that future props updates can iterate using Array
	  // instead of dynamic object key enumeration.
	  var keys = vm.$options._propKeys = [];
	  var isRoot = !vm.$parent;
	  // root instance props should be converted
	  observerState.shouldConvert = isRoot;
	  var loop = function ( key ) {
	    keys.push(key);
	    var value = validateProp(key, propsOptions, propsData, vm);
	    /* istanbul ignore else */
	    {
	      var hyphenatedKey = hyphenate(key);
	      if (isReservedAttribute(hyphenatedKey) ||
	          config.isReservedAttr(hyphenatedKey)) {
	        warn(
	          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
	          vm
	        );
	      }
	      defineReactive(props, key, value, function () {
	        if (vm.$parent && !isUpdatingChildComponent) {
	          warn(
	            "Avoid mutating a prop directly since the value will be " +
	            "overwritten whenever the parent component re-renders. " +
	            "Instead, use a data or computed property based on the prop's " +
	            "value. Prop being mutated: \"" + key + "\"",
	            vm
	          );
	        }
	      });
	    }
	    // static props are already proxied on the component's prototype
	    // during Vue.extend(). We only need to proxy props defined at
	    // instantiation here.
	    if (!(key in vm)) {
	      proxy(vm, "_props", key);
	    }
	  };

	  for (var key in propsOptions) loop( key );
	  observerState.shouldConvert = true;
	}

	function initData (vm) {
	  var data = vm.$options.data;
	  data = vm._data = typeof data === 'function'
	    ? getData(data, vm)
	    : data || {};
	  if (!isPlainObject(data)) {
	    data = {};
	    "development" !== 'production' && warn(
	      'data functions should return an object:\n' +
	      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
	      vm
	    );
	  }
	  // proxy data on instance
	  var keys = Object.keys(data);
	  var props = vm.$options.props;
	  var methods = vm.$options.methods;
	  var i = keys.length;
	  while (i--) {
	    var key = keys[i];
	    {
	      if (methods && hasOwn(methods, key)) {
	        warn(
	          ("Method \"" + key + "\" has already been defined as a data property."),
	          vm
	        );
	      }
	    }
	    if (props && hasOwn(props, key)) {
	      "development" !== 'production' && warn(
	        "The data property \"" + key + "\" is already declared as a prop. " +
	        "Use prop default value instead.",
	        vm
	      );
	    } else if (!isReserved(key)) {
	      proxy(vm, "_data", key);
	    }
	  }
	  // observe data
	  observe(data, true /* asRootData */);
	}

	function getData (data, vm) {
	  try {
	    return data.call(vm, vm)
	  } catch (e) {
	    handleError(e, vm, "data()");
	    return {}
	  }
	}

	var computedWatcherOptions = { lazy: true };

	function initComputed (vm, computed) {
	  // $flow-disable-line
	  var watchers = vm._computedWatchers = Object.create(null);
	  // computed properties are just getters during SSR
	  var isSSR = isServerRendering();

	  for (var key in computed) {
	    var userDef = computed[key];
	    var getter = typeof userDef === 'function' ? userDef : userDef.get;
	    if ("development" !== 'production' && getter == null) {
	      warn(
	        ("Getter is missing for computed property \"" + key + "\"."),
	        vm
	      );
	    }

	    if (!isSSR) {
	      // create internal watcher for the computed property.
	      watchers[key] = new Watcher(
	        vm,
	        getter || noop,
	        noop,
	        computedWatcherOptions
	      );
	    }

	    // component-defined computed properties are already defined on the
	    // component prototype. We only need to define computed properties defined
	    // at instantiation here.
	    if (!(key in vm)) {
	      defineComputed(vm, key, userDef);
	    } else {
	      if (key in vm.$data) {
	        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
	      } else if (vm.$options.props && key in vm.$options.props) {
	        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
	      }
	    }
	  }
	}

	function defineComputed (
	  target,
	  key,
	  userDef
	) {
	  var shouldCache = !isServerRendering();
	  if (typeof userDef === 'function') {
	    sharedPropertyDefinition.get = shouldCache
	      ? createComputedGetter(key)
	      : userDef;
	    sharedPropertyDefinition.set = noop;
	  } else {
	    sharedPropertyDefinition.get = userDef.get
	      ? shouldCache && userDef.cache !== false
	        ? createComputedGetter(key)
	        : userDef.get
	      : noop;
	    sharedPropertyDefinition.set = userDef.set
	      ? userDef.set
	      : noop;
	  }
	  if ("development" !== 'production' &&
	      sharedPropertyDefinition.set === noop) {
	    sharedPropertyDefinition.set = function () {
	      warn(
	        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
	        this
	      );
	    };
	  }
	  Object.defineProperty(target, key, sharedPropertyDefinition);
	}

	function createComputedGetter (key) {
	  return function computedGetter () {
	    var watcher = this._computedWatchers && this._computedWatchers[key];
	    if (watcher) {
	      if (watcher.dirty) {
	        watcher.evaluate();
	      }
	      if (Dep.target) {
	        watcher.depend();
	      }
	      return watcher.value
	    }
	  }
	}

	function initMethods (vm, methods) {
	  var props = vm.$options.props;
	  for (var key in methods) {
	    {
	      if (methods[key] == null) {
	        warn(
	          "Method \"" + key + "\" has an undefined value in the component definition. " +
	          "Did you reference the function correctly?",
	          vm
	        );
	      }
	      if (props && hasOwn(props, key)) {
	        warn(
	          ("Method \"" + key + "\" has already been defined as a prop."),
	          vm
	        );
	      }
	      if ((key in vm) && isReserved(key)) {
	        warn(
	          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
	          "Avoid defining component methods that start with _ or $."
	        );
	      }
	    }
	    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
	  }
	}

	function initWatch (vm, watch) {
	  for (var key in watch) {
	    var handler = watch[key];
	    if (Array.isArray(handler)) {
	      for (var i = 0; i < handler.length; i++) {
	        createWatcher(vm, key, handler[i]);
	      }
	    } else {
	      createWatcher(vm, key, handler);
	    }
	  }
	}

	function createWatcher (
	  vm,
	  keyOrFn,
	  handler,
	  options
	) {
	  if (isPlainObject(handler)) {
	    options = handler;
	    handler = handler.handler;
	  }
	  if (typeof handler === 'string') {
	    handler = vm[handler];
	  }
	  return vm.$watch(keyOrFn, handler, options)
	}

	function stateMixin (Vue) {
	  // flow somehow has problems with directly declared definition object
	  // when using Object.defineProperty, so we have to procedurally build up
	  // the object here.
	  var dataDef = {};
	  dataDef.get = function () { return this._data };
	  var propsDef = {};
	  propsDef.get = function () { return this._props };
	  {
	    dataDef.set = function (newData) {
	      warn(
	        'Avoid replacing instance root $data. ' +
	        'Use nested data properties instead.',
	        this
	      );
	    };
	    propsDef.set = function () {
	      warn("$props is readonly.", this);
	    };
	  }
	  Object.defineProperty(Vue.prototype, '$data', dataDef);
	  Object.defineProperty(Vue.prototype, '$props', propsDef);

	  Vue.prototype.$set = set;
	  Vue.prototype.$delete = del;

	  Vue.prototype.$watch = function (
	    expOrFn,
	    cb,
	    options
	  ) {
	    var vm = this;
	    if (isPlainObject(cb)) {
	      return createWatcher(vm, expOrFn, cb, options)
	    }
	    options = options || {};
	    options.user = true;
	    var watcher = new Watcher(vm, expOrFn, cb, options);
	    if (options.immediate) {
	      cb.call(vm, watcher.value);
	    }
	    return function unwatchFn () {
	      watcher.teardown();
	    }
	  };
	}

	/*  */

	function initProvide (vm) {
	  var provide = vm.$options.provide;
	  if (provide) {
	    vm._provided = typeof provide === 'function'
	      ? provide.call(vm)
	      : provide;
	  }
	}

	function initInjections (vm) {
	  var result = resolveInject(vm.$options.inject, vm);
	  if (result) {
	    observerState.shouldConvert = false;
	    Object.keys(result).forEach(function (key) {
	      /* istanbul ignore else */
	      {
	        defineReactive(vm, key, result[key], function () {
	          warn(
	            "Avoid mutating an injected value directly since the changes will be " +
	            "overwritten whenever the provided component re-renders. " +
	            "injection being mutated: \"" + key + "\"",
	            vm
	          );
	        });
	      }
	    });
	    observerState.shouldConvert = true;
	  }
	}

	function resolveInject (inject, vm) {
	  if (inject) {
	    // inject is :any because flow is not smart enough to figure out cached
	    var result = Object.create(null);
	    var keys = hasSymbol
	      ? Reflect.ownKeys(inject).filter(function (key) {
	        /* istanbul ignore next */
	        return Object.getOwnPropertyDescriptor(inject, key).enumerable
	      })
	      : Object.keys(inject);

	    for (var i = 0; i < keys.length; i++) {
	      var key = keys[i];
	      var provideKey = inject[key].from;
	      var source = vm;
	      while (source) {
	        if (source._provided && provideKey in source._provided) {
	          result[key] = source._provided[provideKey];
	          break
	        }
	        source = source.$parent;
	      }
	      if (!source) {
	        if ('default' in inject[key]) {
	          var provideDefault = inject[key].default;
	          result[key] = typeof provideDefault === 'function'
	            ? provideDefault.call(vm)
	            : provideDefault;
	        } else {
	          warn(("Injection \"" + key + "\" not found"), vm);
	        }
	      }
	    }
	    return result
	  }
	}

	/*  */

	/**
	 * Runtime helper for rendering v-for lists.
	 */
	function renderList (
	  val,
	  render
	) {
	  var ret, i, l, keys, key;
	  if (Array.isArray(val) || typeof val === 'string') {
	    ret = new Array(val.length);
	    for (i = 0, l = val.length; i < l; i++) {
	      ret[i] = render(val[i], i);
	    }
	  } else if (typeof val === 'number') {
	    ret = new Array(val);
	    for (i = 0; i < val; i++) {
	      ret[i] = render(i + 1, i);
	    }
	  } else if (isObject(val)) {
	    keys = Object.keys(val);
	    ret = new Array(keys.length);
	    for (i = 0, l = keys.length; i < l; i++) {
	      key = keys[i];
	      ret[i] = render(val[key], key, i);
	    }
	  }
	  if (isDef(ret)) {
	    (ret)._isVList = true;
	  }
	  return ret
	}

	/*  */

	/**
	 * Runtime helper for rendering <slot>
	 */
	function renderSlot (
	  name,
	  fallback,
	  props,
	  bindObject
	) {
	  var scopedSlotFn = this.$scopedSlots[name];
	  var nodes;
	  if (scopedSlotFn) { // scoped slot
	    props = props || {};
	    if (bindObject) {
	      if ("development" !== 'production' && !isObject(bindObject)) {
	        warn(
	          'slot v-bind without argument expects an Object',
	          this
	        );
	      }
	      props = extend(extend({}, bindObject), props);
	    }
	    nodes = scopedSlotFn(props) || fallback;
	  } else {
	    var slotNodes = this.$slots[name];
	    // warn duplicate slot usage
	    if (slotNodes) {
	      if ("development" !== 'production' && slotNodes._rendered) {
	        warn(
	          "Duplicate presence of slot \"" + name + "\" found in the same render tree " +
	          "- this will likely cause render errors.",
	          this
	        );
	      }
	      slotNodes._rendered = true;
	    }
	    nodes = slotNodes || fallback;
	  }

	  var target = props && props.slot;
	  if (target) {
	    return this.$createElement('template', { slot: target }, nodes)
	  } else {
	    return nodes
	  }
	}

	/*  */

	/**
	 * Runtime helper for resolving filters
	 */
	function resolveFilter (id) {
	  return resolveAsset(this.$options, 'filters', id, true) || identity
	}

	/*  */

	/**
	 * Runtime helper for checking keyCodes from config.
	 * exposed as Vue.prototype._k
	 * passing in eventKeyName as last argument separately for backwards compat
	 */
	function checkKeyCodes (
	  eventKeyCode,
	  key,
	  builtInAlias,
	  eventKeyName
	) {
	  var keyCodes = config.keyCodes[key] || builtInAlias;
	  if (keyCodes) {
	    if (Array.isArray(keyCodes)) {
	      return keyCodes.indexOf(eventKeyCode) === -1
	    } else {
	      return keyCodes !== eventKeyCode
	    }
	  } else if (eventKeyName) {
	    return hyphenate(eventKeyName) !== key
	  }
	}

	/*  */

	/**
	 * Runtime helper for merging v-bind="object" into a VNode's data.
	 */
	function bindObjectProps (
	  data,
	  tag,
	  value,
	  asProp,
	  isSync
	) {
	  if (value) {
	    if (!isObject(value)) {
	      "development" !== 'production' && warn(
	        'v-bind without argument expects an Object or Array value',
	        this
	      );
	    } else {
	      if (Array.isArray(value)) {
	        value = toObject(value);
	      }
	      var hash;
	      var loop = function ( key ) {
	        if (
	          key === 'class' ||
	          key === 'style' ||
	          isReservedAttribute(key)
	        ) {
	          hash = data;
	        } else {
	          var type = data.attrs && data.attrs.type;
	          hash = asProp || config.mustUseProp(tag, type, key)
	            ? data.domProps || (data.domProps = {})
	            : data.attrs || (data.attrs = {});
	        }
	        if (!(key in hash)) {
	          hash[key] = value[key];

	          if (isSync) {
	            var on = data.on || (data.on = {});
	            on[("update:" + key)] = function ($event) {
	              value[key] = $event;
	            };
	          }
	        }
	      };

	      for (var key in value) loop( key );
	    }
	  }
	  return data
	}

	/*  */

	/**
	 * Runtime helper for rendering static trees.
	 */
	function renderStatic (
	  index,
	  isInFor
	) {
	  var cached = this._staticTrees || (this._staticTrees = []);
	  var tree = cached[index];
	  // if has already-rendered static tree and not inside v-for,
	  // we can reuse the same tree by doing a shallow clone.
	  if (tree && !isInFor) {
	    return Array.isArray(tree)
	      ? cloneVNodes(tree)
	      : cloneVNode(tree)
	  }
	  // otherwise, render a fresh tree.
	  tree = cached[index] = this.$options.staticRenderFns[index].call(
	    this._renderProxy,
	    null,
	    this // for render fns generated for functional component templates
	  );
	  markStatic(tree, ("__static__" + index), false);
	  return tree
	}

	/**
	 * Runtime helper for v-once.
	 * Effectively it means marking the node as static with a unique key.
	 */
	function markOnce (
	  tree,
	  index,
	  key
	) {
	  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
	  return tree
	}

	function markStatic (
	  tree,
	  key,
	  isOnce
	) {
	  if (Array.isArray(tree)) {
	    for (var i = 0; i < tree.length; i++) {
	      if (tree[i] && typeof tree[i] !== 'string') {
	        markStaticNode(tree[i], (key + "_" + i), isOnce);
	      }
	    }
	  } else {
	    markStaticNode(tree, key, isOnce);
	  }
	}

	function markStaticNode (node, key, isOnce) {
	  node.isStatic = true;
	  node.key = key;
	  node.isOnce = isOnce;
	}

	/*  */

	function bindObjectListeners (data, value) {
	  if (value) {
	    if (!isPlainObject(value)) {
	      "development" !== 'production' && warn(
	        'v-on without argument expects an Object value',
	        this
	      );
	    } else {
	      var on = data.on = data.on ? extend({}, data.on) : {};
	      for (var key in value) {
	        var existing = on[key];
	        var ours = value[key];
	        on[key] = existing ? [].concat(existing, ours) : ours;
	      }
	    }
	  }
	  return data
	}

	/*  */

	function installRenderHelpers (target) {
	  target._o = markOnce;
	  target._n = toNumber;
	  target._s = toString;
	  target._l = renderList;
	  target._t = renderSlot;
	  target._q = looseEqual;
	  target._i = looseIndexOf;
	  target._m = renderStatic;
	  target._f = resolveFilter;
	  target._k = checkKeyCodes;
	  target._b = bindObjectProps;
	  target._v = createTextVNode;
	  target._e = createEmptyVNode;
	  target._u = resolveScopedSlots;
	  target._g = bindObjectListeners;
	}

	/*  */

	function FunctionalRenderContext (
	  data,
	  props,
	  children,
	  parent,
	  Ctor
	) {
	  var options = Ctor.options;
	  this.data = data;
	  this.props = props;
	  this.children = children;
	  this.parent = parent;
	  this.listeners = data.on || emptyObject;
	  this.injections = resolveInject(options.inject, parent);
	  this.slots = function () { return resolveSlots(children, parent); };

	  // ensure the createElement function in functional components
	  // gets a unique context - this is necessary for correct named slot check
	  var contextVm = Object.create(parent);
	  var isCompiled = isTrue(options._compiled);
	  var needNormalization = !isCompiled;

	  // support for compiled functional template
	  if (isCompiled) {
	    // exposing $options for renderStatic()
	    this.$options = options;
	    // pre-resolve slots for renderSlot()
	    this.$slots = this.slots();
	    this.$scopedSlots = data.scopedSlots || emptyObject;
	  }

	  if (options._scopeId) {
	    this._c = function (a, b, c, d) {
	      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
	      if (vnode) {
	        vnode.fnScopeId = options._scopeId;
	        vnode.fnContext = parent;
	      }
	      return vnode
	    };
	  } else {
	    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
	  }
	}

	installRenderHelpers(FunctionalRenderContext.prototype);

	function createFunctionalComponent (
	  Ctor,
	  propsData,
	  data,
	  contextVm,
	  children
	) {
	  var options = Ctor.options;
	  var props = {};
	  var propOptions = options.props;
	  if (isDef(propOptions)) {
	    for (var key in propOptions) {
	      props[key] = validateProp(key, propOptions, propsData || emptyObject);
	    }
	  } else {
	    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
	    if (isDef(data.props)) { mergeProps(props, data.props); }
	  }

	  var renderContext = new FunctionalRenderContext(
	    data,
	    props,
	    children,
	    contextVm,
	    Ctor
	  );

	  var vnode = options.render.call(null, renderContext._c, renderContext);

	  if (vnode instanceof VNode) {
	    vnode.fnContext = contextVm;
	    vnode.fnOptions = options;
	    if (data.slot) {
	      (vnode.data || (vnode.data = {})).slot = data.slot;
	    }
	  }

	  return vnode
	}

	function mergeProps (to, from) {
	  for (var key in from) {
	    to[camelize(key)] = from[key];
	  }
	}

	/*  */




	// Register the component hook to weex native render engine.
	// The hook will be triggered by native, not javascript.


	// Updates the state of the component to weex native render engine.

	/*  */

	// https://github.com/Hanks10100/weex-native-directive/tree/master/component

	// listening on native callback

	/*  */

	/*  */

	// hooks to be invoked on component VNodes during patch
	var componentVNodeHooks = {
	  init: function init (
	    vnode,
	    hydrating,
	    parentElm,
	    refElm
	  ) {
	    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {
	      var child = vnode.componentInstance = createComponentInstanceForVnode(
	        vnode,
	        activeInstance,
	        parentElm,
	        refElm
	      );
	      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
	    } else if (vnode.data.keepAlive) {
	      // kept-alive components, treat as a patch
	      var mountedNode = vnode; // work around flow
	      componentVNodeHooks.prepatch(mountedNode, mountedNode);
	    }
	  },

	  prepatch: function prepatch (oldVnode, vnode) {
	    var options = vnode.componentOptions;
	    var child = vnode.componentInstance = oldVnode.componentInstance;
	    updateChildComponent(
	      child,
	      options.propsData, // updated props
	      options.listeners, // updated listeners
	      vnode, // new parent vnode
	      options.children // new children
	    );
	  },

	  insert: function insert (vnode) {
	    var context = vnode.context;
	    var componentInstance = vnode.componentInstance;
	    if (!componentInstance._isMounted) {
	      componentInstance._isMounted = true;
	      callHook(componentInstance, 'mounted');
	    }
	    if (vnode.data.keepAlive) {
	      if (context._isMounted) {
	        // vue-router#1212
	        // During updates, a kept-alive component's child components may
	        // change, so directly walking the tree here may call activated hooks
	        // on incorrect children. Instead we push them into a queue which will
	        // be processed after the whole patch process ended.
	        queueActivatedComponent(componentInstance);
	      } else {
	        activateChildComponent(componentInstance, true /* direct */);
	      }
	    }
	  },

	  destroy: function destroy (vnode) {
	    var componentInstance = vnode.componentInstance;
	    if (!componentInstance._isDestroyed) {
	      if (!vnode.data.keepAlive) {
	        componentInstance.$destroy();
	      } else {
	        deactivateChildComponent(componentInstance, true /* direct */);
	      }
	    }
	  }
	};

	var hooksToMerge = Object.keys(componentVNodeHooks);

	function createComponent (
	  Ctor,
	  data,
	  context,
	  children,
	  tag
	) {
	  if (isUndef(Ctor)) {
	    return
	  }

	  var baseCtor = context.$options._base;

	  // plain options object: turn it into a constructor
	  if (isObject(Ctor)) {
	    Ctor = baseCtor.extend(Ctor);
	  }

	  // if at this stage it's not a constructor or an async component factory,
	  // reject.
	  if (typeof Ctor !== 'function') {
	    {
	      warn(("Invalid Component definition: " + (String(Ctor))), context);
	    }
	    return
	  }

	  // async component
	  var asyncFactory;
	  if (isUndef(Ctor.cid)) {
	    asyncFactory = Ctor;
	    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);
	    if (Ctor === undefined) {
	      // return a placeholder node for async component, which is rendered
	      // as a comment node but preserves all the raw information for the node.
	      // the information will be used for async server-rendering and hydration.
	      return createAsyncPlaceholder(
	        asyncFactory,
	        data,
	        context,
	        children,
	        tag
	      )
	    }
	  }

	  data = data || {};

	  // resolve constructor options in case global mixins are applied after
	  // component constructor creation
	  resolveConstructorOptions(Ctor);

	  // transform component v-model data into props & events
	  if (isDef(data.model)) {
	    transformModel(Ctor.options, data);
	  }

	  // extract props
	  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

	  // functional component
	  if (isTrue(Ctor.options.functional)) {
	    return createFunctionalComponent(Ctor, propsData, data, context, children)
	  }

	  // extract listeners, since these needs to be treated as
	  // child component listeners instead of DOM listeners
	  var listeners = data.on;
	  // replace with listeners with .native modifier
	  // so it gets processed during parent component patch.
	  data.on = data.nativeOn;

	  if (isTrue(Ctor.options.abstract)) {
	    // abstract components do not keep anything
	    // other than props & listeners & slot

	    // work around flow
	    var slot = data.slot;
	    data = {};
	    if (slot) {
	      data.slot = slot;
	    }
	  }

	  // merge component management hooks onto the placeholder node
	  mergeHooks(data);

	  // return a placeholder vnode
	  var name = Ctor.options.name || tag;
	  var vnode = new VNode(
	    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
	    data, undefined, undefined, undefined, context,
	    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
	    asyncFactory
	  );

	  // Weex specific: invoke recycle-list optimized @render function for
	  // extracting cell-slot template.
	  // https://github.com/Hanks10100/weex-native-directive/tree/master/component
	  /* istanbul ignore if */
	  return vnode
	}

	function createComponentInstanceForVnode (
	  vnode, // we know it's MountedComponentVNode but flow doesn't
	  parent, // activeInstance in lifecycle state
	  parentElm,
	  refElm
	) {
	  var options = {
	    _isComponent: true,
	    parent: parent,
	    _parentVnode: vnode,
	    _parentElm: parentElm || null,
	    _refElm: refElm || null
	  };
	  // check inline-template render functions
	  var inlineTemplate = vnode.data.inlineTemplate;
	  if (isDef(inlineTemplate)) {
	    options.render = inlineTemplate.render;
	    options.staticRenderFns = inlineTemplate.staticRenderFns;
	  }
	  return new vnode.componentOptions.Ctor(options)
	}

	function mergeHooks (data) {
	  if (!data.hook) {
	    data.hook = {};
	  }
	  for (var i = 0; i < hooksToMerge.length; i++) {
	    var key = hooksToMerge[i];
	    var fromParent = data.hook[key];
	    var ours = componentVNodeHooks[key];
	    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;
	  }
	}

	function mergeHook$1 (one, two) {
	  return function (a, b, c, d) {
	    one(a, b, c, d);
	    two(a, b, c, d);
	  }
	}

	// transform component v-model info (value and callback) into
	// prop and event handler respectively.
	function transformModel (options, data) {
	  var prop = (options.model && options.model.prop) || 'value';
	  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
	  var on = data.on || (data.on = {});
	  if (isDef(on[event])) {
	    on[event] = [data.model.callback].concat(on[event]);
	  } else {
	    on[event] = data.model.callback;
	  }
	}

	/*  */

	var SIMPLE_NORMALIZE = 1;
	var ALWAYS_NORMALIZE = 2;

	// wrapper function for providing a more flexible interface
	// without getting yelled at by flow
	function createElement (
	  context,
	  tag,
	  data,
	  children,
	  normalizationType,
	  alwaysNormalize
	) {
	  if (Array.isArray(data) || isPrimitive(data)) {
	    normalizationType = children;
	    children = data;
	    data = undefined;
	  }
	  if (isTrue(alwaysNormalize)) {
	    normalizationType = ALWAYS_NORMALIZE;
	  }
	  return _createElement(context, tag, data, children, normalizationType)
	}

	function _createElement (
	  context,
	  tag,
	  data,
	  children,
	  normalizationType
	) {
	  if (isDef(data) && isDef((data).__ob__)) {
	    "development" !== 'production' && warn(
	      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
	      'Always create fresh vnode data objects in each render!',
	      context
	    );
	    return createEmptyVNode()
	  }
	  // object syntax in v-bind
	  if (isDef(data) && isDef(data.is)) {
	    tag = data.is;
	  }
	  if (!tag) {
	    // in case of component :is set to falsy value
	    return createEmptyVNode()
	  }
	  // warn against non-primitive key
	  if ("development" !== 'production' &&
	    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
	  ) {
	    {
	      warn(
	        'Avoid using non-primitive value as key, ' +
	        'use string/number value instead.',
	        context
	      );
	    }
	  }
	  // support single function children as default scoped slot
	  if (Array.isArray(children) &&
	    typeof children[0] === 'function'
	  ) {
	    data = data || {};
	    data.scopedSlots = { default: children[0] };
	    children.length = 0;
	  }
	  if (normalizationType === ALWAYS_NORMALIZE) {
	    children = normalizeChildren(children);
	  } else if (normalizationType === SIMPLE_NORMALIZE) {
	    children = simpleNormalizeChildren(children);
	  }
	  var vnode, ns;
	  if (typeof tag === 'string') {
	    var Ctor;
	    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
	    if (config.isReservedTag(tag)) {
	      // platform built-in elements
	      vnode = new VNode(
	        config.parsePlatformTagName(tag), data, children,
	        undefined, undefined, context
	      );
	    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
	      // component
	      vnode = createComponent(Ctor, data, context, children, tag);
	    } else {
	      // unknown or unlisted namespaced elements
	      // check at runtime because it may get assigned a namespace when its
	      // parent normalizes children
	      vnode = new VNode(
	        tag, data, children,
	        undefined, undefined, context
	      );
	    }
	  } else {
	    // direct component options / constructor
	    vnode = createComponent(tag, data, context, children);
	  }
	  if (isDef(vnode)) {
	    if (ns) { applyNS(vnode, ns); }
	    return vnode
	  } else {
	    return createEmptyVNode()
	  }
	}

	function applyNS (vnode, ns, force) {
	  vnode.ns = ns;
	  if (vnode.tag === 'foreignObject') {
	    // use default namespace inside foreignObject
	    ns = undefined;
	    force = true;
	  }
	  if (isDef(vnode.children)) {
	    for (var i = 0, l = vnode.children.length; i < l; i++) {
	      var child = vnode.children[i];
	      if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force))) {
	        applyNS(child, ns, force);
	      }
	    }
	  }
	}

	/*  */

	function initRender (vm) {
	  vm._vnode = null; // the root of the child tree
	  vm._staticTrees = null; // v-once cached trees
	  var options = vm.$options;
	  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
	  var renderContext = parentVnode && parentVnode.context;
	  vm.$slots = resolveSlots(options._renderChildren, renderContext);
	  vm.$scopedSlots = emptyObject;
	  // bind the createElement fn to this instance
	  // so that we get proper render context inside it.
	  // args order: tag, data, children, normalizationType, alwaysNormalize
	  // internal version is used by render functions compiled from templates
	  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
	  // normalization is always applied for the public version, used in
	  // user-written render functions.
	  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

	  // $attrs & $listeners are exposed for easier HOC creation.
	  // they need to be reactive so that HOCs using them are always updated
	  var parentData = parentVnode && parentVnode.data;

	  /* istanbul ignore else */
	  {
	    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
	      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
	    }, true);
	    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {
	      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
	    }, true);
	  }
	}

	function renderMixin (Vue) {
	  // install runtime convenience helpers
	  installRenderHelpers(Vue.prototype);

	  Vue.prototype.$nextTick = function (fn) {
	    return nextTick(fn, this)
	  };

	  Vue.prototype._render = function () {
	    var vm = this;
	    var ref = vm.$options;
	    var render = ref.render;
	    var _parentVnode = ref._parentVnode;

	    if (vm._isMounted) {
	      // if the parent didn't update, the slot nodes will be the ones from
	      // last render. They need to be cloned to ensure "freshness" for this render.
	      for (var key in vm.$slots) {
	        var slot = vm.$slots[key];
	        // _rendered is a flag added by renderSlot, but may not be present
	        // if the slot is passed from manually written render functions
	        if (slot._rendered || (slot[0] && slot[0].elm)) {
	          vm.$slots[key] = cloneVNodes(slot, true /* deep */);
	        }
	      }
	    }

	    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;

	    // set parent vnode. this allows render functions to have access
	    // to the data on the placeholder node.
	    vm.$vnode = _parentVnode;
	    // render self
	    var vnode;
	    try {
	      vnode = render.call(vm._renderProxy, vm.$createElement);
	    } catch (e) {
	      handleError(e, vm, "render");
	      // return error render result,
	      // or previous vnode to prevent render error causing blank component
	      /* istanbul ignore else */
	      {
	        if (vm.$options.renderError) {
	          try {
	            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
	          } catch (e) {
	            handleError(e, vm, "renderError");
	            vnode = vm._vnode;
	          }
	        } else {
	          vnode = vm._vnode;
	        }
	      }
	    }
	    // return empty vnode in case the render function errored out
	    if (!(vnode instanceof VNode)) {
	      if ("development" !== 'production' && Array.isArray(vnode)) {
	        warn(
	          'Multiple root nodes returned from render function. Render function ' +
	          'should return a single root node.',
	          vm
	        );
	      }
	      vnode = createEmptyVNode();
	    }
	    // set parent
	    vnode.parent = _parentVnode;
	    return vnode
	  };
	}

	/*  */

	var uid$1 = 0;

	function initMixin (Vue) {
	  Vue.prototype._init = function (options) {
	    var vm = this;
	    // a uid
	    vm._uid = uid$1++;

	    var startTag, endTag;
	    /* istanbul ignore if */
	    if ("development" !== 'production' && config.performance && mark) {
	      startTag = "vue-perf-start:" + (vm._uid);
	      endTag = "vue-perf-end:" + (vm._uid);
	      mark(startTag);
	    }

	    // a flag to avoid this being observed
	    vm._isVue = true;
	    // merge options
	    if (options && options._isComponent) {
	      // optimize internal component instantiation
	      // since dynamic options merging is pretty slow, and none of the
	      // internal component options needs special treatment.
	      initInternalComponent(vm, options);
	    } else {
	      vm.$options = mergeOptions(
	        resolveConstructorOptions(vm.constructor),
	        options || {},
	        vm
	      );
	    }
	    /* istanbul ignore else */
	    {
	      initProxy(vm);
	    }
	    // expose real self
	    vm._self = vm;
	    initLifecycle(vm);
	    initEvents(vm);
	    initRender(vm);
	    callHook(vm, 'beforeCreate');
	    initInjections(vm); // resolve injections before data/props
	    initState(vm);
	    initProvide(vm); // resolve provide after data/props
	    callHook(vm, 'created');

	    /* istanbul ignore if */
	    if ("development" !== 'production' && config.performance && mark) {
	      vm._name = formatComponentName(vm, false);
	      mark(endTag);
	      measure(("vue " + (vm._name) + " init"), startTag, endTag);
	    }

	    if (vm.$options.el) {
	      vm.$mount(vm.$options.el);
	    }
	  };
	}

	function initInternalComponent (vm, options) {
	  var opts = vm.$options = Object.create(vm.constructor.options);
	  // doing this because it's faster than dynamic enumeration.
	  var parentVnode = options._parentVnode;
	  opts.parent = options.parent;
	  opts._parentVnode = parentVnode;
	  opts._parentElm = options._parentElm;
	  opts._refElm = options._refElm;

	  var vnodeComponentOptions = parentVnode.componentOptions;
	  opts.propsData = vnodeComponentOptions.propsData;
	  opts._parentListeners = vnodeComponentOptions.listeners;
	  opts._renderChildren = vnodeComponentOptions.children;
	  opts._componentTag = vnodeComponentOptions.tag;

	  if (options.render) {
	    opts.render = options.render;
	    opts.staticRenderFns = options.staticRenderFns;
	  }
	}

	function resolveConstructorOptions (Ctor) {
	  var options = Ctor.options;
	  if (Ctor.super) {
	    var superOptions = resolveConstructorOptions(Ctor.super);
	    var cachedSuperOptions = Ctor.superOptions;
	    if (superOptions !== cachedSuperOptions) {
	      // super option changed,
	      // need to resolve new options.
	      Ctor.superOptions = superOptions;
	      // check if there are any late-modified/attached options (#4976)
	      var modifiedOptions = resolveModifiedOptions(Ctor);
	      // update base extend options
	      if (modifiedOptions) {
	        extend(Ctor.extendOptions, modifiedOptions);
	      }
	      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
	      if (options.name) {
	        options.components[options.name] = Ctor;
	      }
	    }
	  }
	  return options
	}

	function resolveModifiedOptions (Ctor) {
	  var modified;
	  var latest = Ctor.options;
	  var extended = Ctor.extendOptions;
	  var sealed = Ctor.sealedOptions;
	  for (var key in latest) {
	    if (latest[key] !== sealed[key]) {
	      if (!modified) { modified = {}; }
	      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
	    }
	  }
	  return modified
	}

	function dedupe (latest, extended, sealed) {
	  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
	  // between merges
	  if (Array.isArray(latest)) {
	    var res = [];
	    sealed = Array.isArray(sealed) ? sealed : [sealed];
	    extended = Array.isArray(extended) ? extended : [extended];
	    for (var i = 0; i < latest.length; i++) {
	      // push original options and not sealed options to exclude duplicated options
	      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
	        res.push(latest[i]);
	      }
	    }
	    return res
	  } else {
	    return latest
	  }
	}

	function Vue$3 (options) {
	  if ("development" !== 'production' &&
	    !(this instanceof Vue$3)
	  ) {
	    warn('Vue is a constructor and should be called with the `new` keyword');
	  }
	  this._init(options);
	}

	initMixin(Vue$3);
	stateMixin(Vue$3);
	eventsMixin(Vue$3);
	lifecycleMixin(Vue$3);
	renderMixin(Vue$3);

	/*  */

	function initUse (Vue) {
	  Vue.use = function (plugin) {
	    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
	    if (installedPlugins.indexOf(plugin) > -1) {
	      return this
	    }

	    // additional parameters
	    var args = toArray(arguments, 1);
	    args.unshift(this);
	    if (typeof plugin.install === 'function') {
	      plugin.install.apply(plugin, args);
	    } else if (typeof plugin === 'function') {
	      plugin.apply(null, args);
	    }
	    installedPlugins.push(plugin);
	    return this
	  };
	}

	/*  */

	function initMixin$1 (Vue) {
	  Vue.mixin = function (mixin) {
	    this.options = mergeOptions(this.options, mixin);
	    return this
	  };
	}

	/*  */

	function initExtend (Vue) {
	  /**
	   * Each instance constructor, including Vue, has a unique
	   * cid. This enables us to create wrapped "child
	   * constructors" for prototypal inheritance and cache them.
	   */
	  Vue.cid = 0;
	  var cid = 1;

	  /**
	   * Class inheritance
	   */
	  Vue.extend = function (extendOptions) {
	    extendOptions = extendOptions || {};
	    var Super = this;
	    var SuperId = Super.cid;
	    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
	    if (cachedCtors[SuperId]) {
	      return cachedCtors[SuperId]
	    }

	    var name = extendOptions.name || Super.options.name;
	    if ("development" !== 'production' && name) {
	      validateComponentName(name);
	    }

	    var Sub = function VueComponent (options) {
	      this._init(options);
	    };
	    Sub.prototype = Object.create(Super.prototype);
	    Sub.prototype.constructor = Sub;
	    Sub.cid = cid++;
	    Sub.options = mergeOptions(
	      Super.options,
	      extendOptions
	    );
	    Sub['super'] = Super;

	    // For props and computed properties, we define the proxy getters on
	    // the Vue instances at extension time, on the extended prototype. This
	    // avoids Object.defineProperty calls for each instance created.
	    if (Sub.options.props) {
	      initProps$1(Sub);
	    }
	    if (Sub.options.computed) {
	      initComputed$1(Sub);
	    }

	    // allow further extension/mixin/plugin usage
	    Sub.extend = Super.extend;
	    Sub.mixin = Super.mixin;
	    Sub.use = Super.use;

	    // create asset registers, so extended classes
	    // can have their private assets too.
	    ASSET_TYPES.forEach(function (type) {
	      Sub[type] = Super[type];
	    });
	    // enable recursive self-lookup
	    if (name) {
	      Sub.options.components[name] = Sub;
	    }

	    // keep a reference to the super options at extension time.
	    // later at instantiation we can check if Super's options have
	    // been updated.
	    Sub.superOptions = Super.options;
	    Sub.extendOptions = extendOptions;
	    Sub.sealedOptions = extend({}, Sub.options);

	    // cache constructor
	    cachedCtors[SuperId] = Sub;
	    return Sub
	  };
	}

	function initProps$1 (Comp) {
	  var props = Comp.options.props;
	  for (var key in props) {
	    proxy(Comp.prototype, "_props", key);
	  }
	}

	function initComputed$1 (Comp) {
	  var computed = Comp.options.computed;
	  for (var key in computed) {
	    defineComputed(Comp.prototype, key, computed[key]);
	  }
	}

	/*  */

	function initAssetRegisters (Vue) {
	  /**
	   * Create asset registration methods.
	   */
	  ASSET_TYPES.forEach(function (type) {
	    Vue[type] = function (
	      id,
	      definition
	    ) {
	      if (!definition) {
	        return this.options[type + 's'][id]
	      } else {
	        /* istanbul ignore if */
	        if ("development" !== 'production' && type === 'component') {
	          validateComponentName(id);
	        }
	        if (type === 'component' && isPlainObject(definition)) {
	          definition.name = definition.name || id;
	          definition = this.options._base.extend(definition);
	        }
	        if (type === 'directive' && typeof definition === 'function') {
	          definition = { bind: definition, update: definition };
	        }
	        this.options[type + 's'][id] = definition;
	        return definition
	      }
	    };
	  });
	}

	/*  */

	function getComponentName (opts) {
	  return opts && (opts.Ctor.options.name || opts.tag)
	}

	function matches (pattern, name) {
	  if (Array.isArray(pattern)) {
	    return pattern.indexOf(name) > -1
	  } else if (typeof pattern === 'string') {
	    return pattern.split(',').indexOf(name) > -1
	  } else if (isRegExp(pattern)) {
	    return pattern.test(name)
	  }
	  /* istanbul ignore next */
	  return false
	}

	function pruneCache (keepAliveInstance, filter) {
	  var cache = keepAliveInstance.cache;
	  var keys = keepAliveInstance.keys;
	  var _vnode = keepAliveInstance._vnode;
	  for (var key in cache) {
	    var cachedNode = cache[key];
	    if (cachedNode) {
	      var name = getComponentName(cachedNode.componentOptions);
	      if (name && !filter(name)) {
	        pruneCacheEntry(cache, key, keys, _vnode);
	      }
	    }
	  }
	}

	function pruneCacheEntry (
	  cache,
	  key,
	  keys,
	  current
	) {
	  var cached$$1 = cache[key];
	  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
	    cached$$1.componentInstance.$destroy();
	  }
	  cache[key] = null;
	  remove(keys, key);
	}

	var patternTypes = [String, RegExp, Array];

	var KeepAlive = {
	  name: 'keep-alive',
	  abstract: true,

	  props: {
	    include: patternTypes,
	    exclude: patternTypes,
	    max: [String, Number]
	  },

	  created: function created () {
	    this.cache = Object.create(null);
	    this.keys = [];
	  },

	  destroyed: function destroyed () {
	    var this$1 = this;

	    for (var key in this$1.cache) {
	      pruneCacheEntry(this$1.cache, key, this$1.keys);
	    }
	  },

	  watch: {
	    include: function include (val) {
	      pruneCache(this, function (name) { return matches(val, name); });
	    },
	    exclude: function exclude (val) {
	      pruneCache(this, function (name) { return !matches(val, name); });
	    }
	  },

	  render: function render () {
	    var slot = this.$slots.default;
	    var vnode = getFirstComponentChild(slot);
	    var componentOptions = vnode && vnode.componentOptions;
	    if (componentOptions) {
	      // check pattern
	      var name = getComponentName(componentOptions);
	      var ref = this;
	      var include = ref.include;
	      var exclude = ref.exclude;
	      if (
	        // not included
	        (include && (!name || !matches(include, name))) ||
	        // excluded
	        (exclude && name && matches(exclude, name))
	      ) {
	        return vnode
	      }

	      var ref$1 = this;
	      var cache = ref$1.cache;
	      var keys = ref$1.keys;
	      var key = vnode.key == null
	        // same constructor may get registered as different local components
	        // so cid alone is not enough (#3269)
	        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
	        : vnode.key;
	      if (cache[key]) {
	        vnode.componentInstance = cache[key].componentInstance;
	        // make current key freshest
	        remove(keys, key);
	        keys.push(key);
	      } else {
	        cache[key] = vnode;
	        keys.push(key);
	        // prune oldest entry
	        if (this.max && keys.length > parseInt(this.max)) {
	          pruneCacheEntry(cache, keys[0], keys, this._vnode);
	        }
	      }

	      vnode.data.keepAlive = true;
	    }
	    return vnode || (slot && slot[0])
	  }
	};

	var builtInComponents = {
	  KeepAlive: KeepAlive
	};

	/*  */

	function initGlobalAPI (Vue) {
	  // config
	  var configDef = {};
	  configDef.get = function () { return config; };
	  {
	    configDef.set = function () {
	      warn(
	        'Do not replace the Vue.config object, set individual fields instead.'
	      );
	    };
	  }
	  Object.defineProperty(Vue, 'config', configDef);

	  // exposed util methods.
	  // NOTE: these are not considered part of the public API - avoid relying on
	  // them unless you are aware of the risk.
	  Vue.util = {
	    warn: warn,
	    extend: extend,
	    mergeOptions: mergeOptions,
	    defineReactive: defineReactive
	  };

	  Vue.set = set;
	  Vue.delete = del;
	  Vue.nextTick = nextTick;

	  Vue.options = Object.create(null);
	  ASSET_TYPES.forEach(function (type) {
	    Vue.options[type + 's'] = Object.create(null);
	  });

	  // this is used to identify the "base" constructor to extend all plain-object
	  // components with in Weex's multi-instance scenarios.
	  Vue.options._base = Vue;

	  extend(Vue.options.components, builtInComponents);

	  initUse(Vue);
	  initMixin$1(Vue);
	  initExtend(Vue);
	  initAssetRegisters(Vue);
	}

	initGlobalAPI(Vue$3);

	Object.defineProperty(Vue$3.prototype, '$isServer', {
	  get: isServerRendering
	});

	Object.defineProperty(Vue$3.prototype, '$ssrContext', {
	  get: function get () {
	    /* istanbul ignore next */
	    return this.$vnode && this.$vnode.ssrContext
	  }
	});

	Vue$3.version = '2.5.13';

	/*  */

	// these are reserved for web because they are directly compiled away
	// during template compilation
	var isReservedAttr = makeMap('style,class');

	// attributes that should be using props for binding
	var acceptValue = makeMap('input,textarea,option,select,progress');
	var mustUseProp = function (tag, type, attr) {
	  return (
	    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
	    (attr === 'selected' && tag === 'option') ||
	    (attr === 'checked' && tag === 'input') ||
	    (attr === 'muted' && tag === 'video')
	  )
	};

	var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

	var isBooleanAttr = makeMap(
	  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
	  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
	  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
	  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
	  'required,reversed,scoped,seamless,selected,sortable,translate,' +
	  'truespeed,typemustmatch,visible'
	);

	var xlinkNS = 'http://www.w3.org/1999/xlink';

	var isXlink = function (name) {
	  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
	};

	var getXlinkProp = function (name) {
	  return isXlink(name) ? name.slice(6, name.length) : ''
	};

	var isFalsyAttrValue = function (val) {
	  return val == null || val === false
	};

	/*  */

	function genClassForVnode (vnode) {
	  var data = vnode.data;
	  var parentNode = vnode;
	  var childNode = vnode;
	  while (isDef(childNode.componentInstance)) {
	    childNode = childNode.componentInstance._vnode;
	    if (childNode && childNode.data) {
	      data = mergeClassData(childNode.data, data);
	    }
	  }
	  while (isDef(parentNode = parentNode.parent)) {
	    if (parentNode && parentNode.data) {
	      data = mergeClassData(data, parentNode.data);
	    }
	  }
	  return renderClass(data.staticClass, data.class)
	}

	function mergeClassData (child, parent) {
	  return {
	    staticClass: concat(child.staticClass, parent.staticClass),
	    class: isDef(child.class)
	      ? [child.class, parent.class]
	      : parent.class
	  }
	}

	function renderClass (
	  staticClass,
	  dynamicClass
	) {
	  if (isDef(staticClass) || isDef(dynamicClass)) {
	    return concat(staticClass, stringifyClass(dynamicClass))
	  }
	  /* istanbul ignore next */
	  return ''
	}

	function concat (a, b) {
	  return a ? b ? (a + ' ' + b) : a : (b || '')
	}

	function stringifyClass (value) {
	  if (Array.isArray(value)) {
	    return stringifyArray(value)
	  }
	  if (isObject(value)) {
	    return stringifyObject(value)
	  }
	  if (typeof value === 'string') {
	    return value
	  }
	  /* istanbul ignore next */
	  return ''
	}

	function stringifyArray (value) {
	  var res = '';
	  var stringified;
	  for (var i = 0, l = value.length; i < l; i++) {
	    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
	      if (res) { res += ' '; }
	      res += stringified;
	    }
	  }
	  return res
	}

	function stringifyObject (value) {
	  var res = '';
	  for (var key in value) {
	    if (value[key]) {
	      if (res) { res += ' '; }
	      res += key;
	    }
	  }
	  return res
	}

	/*  */

	var namespaceMap = {
	  svg: 'http://www.w3.org/2000/svg',
	  math: 'http://www.w3.org/1998/Math/MathML'
	};

	var isHTMLTag = makeMap(
	  'html,body,base,head,link,meta,style,title,' +
	  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
	  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
	  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
	  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
	  'embed,object,param,source,canvas,script,noscript,del,ins,' +
	  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
	  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
	  'output,progress,select,textarea,' +
	  'details,dialog,menu,menuitem,summary,' +
	  'content,element,shadow,template,blockquote,iframe,tfoot'
	);

	// this map is intentionally selective, only covering SVG elements that may
	// contain child elements.
	var isSVG = makeMap(
	  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
	  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
	  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
	  true
	);

	var isPreTag = function (tag) { return tag === 'pre'; };

	var isReservedTag = function (tag) {
	  return isHTMLTag(tag) || isSVG(tag)
	};

	function getTagNamespace (tag) {
	  if (isSVG(tag)) {
	    return 'svg'
	  }
	  // basic support for MathML
	  // note it doesn't support other MathML elements being component roots
	  if (tag === 'math') {
	    return 'math'
	  }
	}

	var unknownElementCache = Object.create(null);
	function isUnknownElement (tag) {
	  /* istanbul ignore if */
	  if (!inBrowser) {
	    return true
	  }
	  if (isReservedTag(tag)) {
	    return false
	  }
	  tag = tag.toLowerCase();
	  /* istanbul ignore if */
	  if (unknownElementCache[tag] != null) {
	    return unknownElementCache[tag]
	  }
	  var el = document.createElement(tag);
	  if (tag.indexOf('-') > -1) {
	    // http://stackoverflow.com/a/28210364/1070244
	    return (unknownElementCache[tag] = (
	      el.constructor === window.HTMLUnknownElement ||
	      el.constructor === window.HTMLElement
	    ))
	  } else {
	    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
	  }
	}

	var isTextInputType = makeMap('text,number,password,search,email,tel,url');

	/*  */

	/**
	 * Query an element selector if it's not an element already.
	 */
	function query (el) {
	  if (typeof el === 'string') {
	    var selected = document.querySelector(el);
	    if (!selected) {
	      "development" !== 'production' && warn(
	        'Cannot find element: ' + el
	      );
	      return document.createElement('div')
	    }
	    return selected
	  } else {
	    return el
	  }
	}

	/*  */

	function createElement$1 (tagName, vnode) {
	  var elm = document.createElement(tagName);
	  if (tagName !== 'select') {
	    return elm
	  }
	  // false or null will remove the attribute but undefined will not
	  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
	    elm.setAttribute('multiple', 'multiple');
	  }
	  return elm
	}

	function createElementNS (namespace, tagName) {
	  return document.createElementNS(namespaceMap[namespace], tagName)
	}

	function createTextNode (text) {
	  return document.createTextNode(text)
	}

	function createComment (text) {
	  return document.createComment(text)
	}

	function insertBefore (parentNode, newNode, referenceNode) {
	  parentNode.insertBefore(newNode, referenceNode);
	}

	function removeChild (node, child) {
	  node.removeChild(child);
	}

	function appendChild (node, child) {
	  node.appendChild(child);
	}

	function parentNode (node) {
	  return node.parentNode
	}

	function nextSibling (node) {
	  return node.nextSibling
	}

	function tagName (node) {
	  return node.tagName
	}

	function setTextContent (node, text) {
	  node.textContent = text;
	}

	function setAttribute (node, key, val) {
	  node.setAttribute(key, val);
	}


	var nodeOps = Object.freeze({
		createElement: createElement$1,
		createElementNS: createElementNS,
		createTextNode: createTextNode,
		createComment: createComment,
		insertBefore: insertBefore,
		removeChild: removeChild,
		appendChild: appendChild,
		parentNode: parentNode,
		nextSibling: nextSibling,
		tagName: tagName,
		setTextContent: setTextContent,
		setAttribute: setAttribute
	});

	/*  */

	var ref = {
	  create: function create (_, vnode) {
	    registerRef(vnode);
	  },
	  update: function update (oldVnode, vnode) {
	    if (oldVnode.data.ref !== vnode.data.ref) {
	      registerRef(oldVnode, true);
	      registerRef(vnode);
	    }
	  },
	  destroy: function destroy (vnode) {
	    registerRef(vnode, true);
	  }
	};

	function registerRef (vnode, isRemoval) {
	  var key = vnode.data.ref;
	  if (!key) { return }

	  var vm = vnode.context;
	  var ref = vnode.componentInstance || vnode.elm;
	  var refs = vm.$refs;
	  if (isRemoval) {
	    if (Array.isArray(refs[key])) {
	      remove(refs[key], ref);
	    } else if (refs[key] === ref) {
	      refs[key] = undefined;
	    }
	  } else {
	    if (vnode.data.refInFor) {
	      if (!Array.isArray(refs[key])) {
	        refs[key] = [ref];
	      } else if (refs[key].indexOf(ref) < 0) {
	        // $flow-disable-line
	        refs[key].push(ref);
	      }
	    } else {
	      refs[key] = ref;
	    }
	  }
	}

	/**
	 * Virtual DOM patching algorithm based on Snabbdom by
	 * Simon Friis Vindum (@paldepind)
	 * Licensed under the MIT License
	 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
	 *
	 * modified by Evan You (@yyx990803)
	 *
	 * Not type-checking this because this file is perf-critical and the cost
	 * of making flow understand it is not worth it.
	 */

	var emptyNode = new VNode('', {}, []);

	var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

	function sameVnode (a, b) {
	  return (
	    a.key === b.key && (
	      (
	        a.tag === b.tag &&
	        a.isComment === b.isComment &&
	        isDef(a.data) === isDef(b.data) &&
	        sameInputType(a, b)
	      ) || (
	        isTrue(a.isAsyncPlaceholder) &&
	        a.asyncFactory === b.asyncFactory &&
	        isUndef(b.asyncFactory.error)
	      )
	    )
	  )
	}

	function sameInputType (a, b) {
	  if (a.tag !== 'input') { return true }
	  var i;
	  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
	  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
	  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
	}

	function createKeyToOldIdx (children, beginIdx, endIdx) {
	  var i, key;
	  var map = {};
	  for (i = beginIdx; i <= endIdx; ++i) {
	    key = children[i].key;
	    if (isDef(key)) { map[key] = i; }
	  }
	  return map
	}

	function createPatchFunction (backend) {
	  var i, j;
	  var cbs = {};

	  var modules = backend.modules;
	  var nodeOps = backend.nodeOps;

	  for (i = 0; i < hooks.length; ++i) {
	    cbs[hooks[i]] = [];
	    for (j = 0; j < modules.length; ++j) {
	      if (isDef(modules[j][hooks[i]])) {
	        cbs[hooks[i]].push(modules[j][hooks[i]]);
	      }
	    }
	  }

	  function emptyNodeAt (elm) {
	    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
	  }

	  function createRmCb (childElm, listeners) {
	    function remove () {
	      if (--remove.listeners === 0) {
	        removeNode(childElm);
	      }
	    }
	    remove.listeners = listeners;
	    return remove
	  }

	  function removeNode (el) {
	    var parent = nodeOps.parentNode(el);
	    // element may have already been removed due to v-html / v-text
	    if (isDef(parent)) {
	      nodeOps.removeChild(parent, el);
	    }
	  }

	  function isUnknownElement$$1 (vnode, inVPre) {
	    return (
	      !inVPre &&
	      !vnode.ns &&
	      !(
	        config.ignoredElements.length &&
	        config.ignoredElements.some(function (ignore) {
	          return isRegExp(ignore)
	            ? ignore.test(vnode.tag)
	            : ignore === vnode.tag
	        })
	      ) &&
	      config.isUnknownElement(vnode.tag)
	    )
	  }

	  var creatingElmInVPre = 0;
	  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {
	    vnode.isRootInsert = !nested; // for transition enter check
	    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
	      return
	    }

	    var data = vnode.data;
	    var children = vnode.children;
	    var tag = vnode.tag;
	    if (isDef(tag)) {
	      {
	        if (data && data.pre) {
	          creatingElmInVPre++;
	        }
	        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
	          warn(
	            'Unknown custom element: <' + tag + '> - did you ' +
	            'register the component correctly? For recursive components, ' +
	            'make sure to provide the "name" option.',
	            vnode.context
	          );
	        }
	      }
	      vnode.elm = vnode.ns
	        ? nodeOps.createElementNS(vnode.ns, tag)
	        : nodeOps.createElement(tag, vnode);
	      setScope(vnode);

	      /* istanbul ignore if */
	      {
	        createChildren(vnode, children, insertedVnodeQueue);
	        if (isDef(data)) {
	          invokeCreateHooks(vnode, insertedVnodeQueue);
	        }
	        insert(parentElm, vnode.elm, refElm);
	      }

	      if ("development" !== 'production' && data && data.pre) {
	        creatingElmInVPre--;
	      }
	    } else if (isTrue(vnode.isComment)) {
	      vnode.elm = nodeOps.createComment(vnode.text);
	      insert(parentElm, vnode.elm, refElm);
	    } else {
	      vnode.elm = nodeOps.createTextNode(vnode.text);
	      insert(parentElm, vnode.elm, refElm);
	    }
	  }

	  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
	    var i = vnode.data;
	    if (isDef(i)) {
	      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
	      if (isDef(i = i.hook) && isDef(i = i.init)) {
	        i(vnode, false /* hydrating */, parentElm, refElm);
	      }
	      // after calling the init hook, if the vnode is a child component
	      // it should've created a child instance and mounted it. the child
	      // component also has set the placeholder vnode's elm.
	      // in that case we can just return the element and be done.
	      if (isDef(vnode.componentInstance)) {
	        initComponent(vnode, insertedVnodeQueue);
	        if (isTrue(isReactivated)) {
	          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
	        }
	        return true
	      }
	    }
	  }

	  function initComponent (vnode, insertedVnodeQueue) {
	    if (isDef(vnode.data.pendingInsert)) {
	      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
	      vnode.data.pendingInsert = null;
	    }
	    vnode.elm = vnode.componentInstance.$el;
	    if (isPatchable(vnode)) {
	      invokeCreateHooks(vnode, insertedVnodeQueue);
	      setScope(vnode);
	    } else {
	      // empty component root.
	      // skip all element-related modules except for ref (#3455)
	      registerRef(vnode);
	      // make sure to invoke the insert hook
	      insertedVnodeQueue.push(vnode);
	    }
	  }

	  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
	    var i;
	    // hack for #4339: a reactivated component with inner transition
	    // does not trigger because the inner node's created hooks are not called
	    // again. It's not ideal to involve module-specific logic in here but
	    // there doesn't seem to be a better way to do it.
	    var innerNode = vnode;
	    while (innerNode.componentInstance) {
	      innerNode = innerNode.componentInstance._vnode;
	      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
	        for (i = 0; i < cbs.activate.length; ++i) {
	          cbs.activate[i](emptyNode, innerNode);
	        }
	        insertedVnodeQueue.push(innerNode);
	        break
	      }
	    }
	    // unlike a newly created component,
	    // a reactivated keep-alive component doesn't insert itself
	    insert(parentElm, vnode.elm, refElm);
	  }

	  function insert (parent, elm, ref$$1) {
	    if (isDef(parent)) {
	      if (isDef(ref$$1)) {
	        if (ref$$1.parentNode === parent) {
	          nodeOps.insertBefore(parent, elm, ref$$1);
	        }
	      } else {
	        nodeOps.appendChild(parent, elm);
	      }
	    }
	  }

	  function createChildren (vnode, children, insertedVnodeQueue) {
	    if (Array.isArray(children)) {
	      {
	        checkDuplicateKeys(children);
	      }
	      for (var i = 0; i < children.length; ++i) {
	        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);
	      }
	    } else if (isPrimitive(vnode.text)) {
	      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
	    }
	  }

	  function isPatchable (vnode) {
	    while (vnode.componentInstance) {
	      vnode = vnode.componentInstance._vnode;
	    }
	    return isDef(vnode.tag)
	  }

	  function invokeCreateHooks (vnode, insertedVnodeQueue) {
	    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
	      cbs.create[i$1](emptyNode, vnode);
	    }
	    i = vnode.data.hook; // Reuse variable
	    if (isDef(i)) {
	      if (isDef(i.create)) { i.create(emptyNode, vnode); }
	      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
	    }
	  }

	  // set scope id attribute for scoped CSS.
	  // this is implemented as a special case to avoid the overhead
	  // of going through the normal attribute patching process.
	  function setScope (vnode) {
	    var i;
	    if (isDef(i = vnode.fnScopeId)) {
	      nodeOps.setAttribute(vnode.elm, i, '');
	    } else {
	      var ancestor = vnode;
	      while (ancestor) {
	        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
	          nodeOps.setAttribute(vnode.elm, i, '');
	        }
	        ancestor = ancestor.parent;
	      }
	    }
	    // for slot content they should also get the scopeId from the host instance.
	    if (isDef(i = activeInstance) &&
	      i !== vnode.context &&
	      i !== vnode.fnContext &&
	      isDef(i = i.$options._scopeId)
	    ) {
	      nodeOps.setAttribute(vnode.elm, i, '');
	    }
	  }

	  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
	    for (; startIdx <= endIdx; ++startIdx) {
	      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);
	    }
	  }

	  function invokeDestroyHook (vnode) {
	    var i, j;
	    var data = vnode.data;
	    if (isDef(data)) {
	      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
	      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
	    }
	    if (isDef(i = vnode.children)) {
	      for (j = 0; j < vnode.children.length; ++j) {
	        invokeDestroyHook(vnode.children[j]);
	      }
	    }
	  }

	  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
	    for (; startIdx <= endIdx; ++startIdx) {
	      var ch = vnodes[startIdx];
	      if (isDef(ch)) {
	        if (isDef(ch.tag)) {
	          removeAndInvokeRemoveHook(ch);
	          invokeDestroyHook(ch);
	        } else { // Text node
	          removeNode(ch.elm);
	        }
	      }
	    }
	  }

	  function removeAndInvokeRemoveHook (vnode, rm) {
	    if (isDef(rm) || isDef(vnode.data)) {
	      var i;
	      var listeners = cbs.remove.length + 1;
	      if (isDef(rm)) {
	        // we have a recursively passed down rm callback
	        // increase the listeners count
	        rm.listeners += listeners;
	      } else {
	        // directly removing
	        rm = createRmCb(vnode.elm, listeners);
	      }
	      // recursively invoke hooks on child component root node
	      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
	        removeAndInvokeRemoveHook(i, rm);
	      }
	      for (i = 0; i < cbs.remove.length; ++i) {
	        cbs.remove[i](vnode, rm);
	      }
	      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
	        i(vnode, rm);
	      } else {
	        rm();
	      }
	    } else {
	      removeNode(vnode.elm);
	    }
	  }

	  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
	    var oldStartIdx = 0;
	    var newStartIdx = 0;
	    var oldEndIdx = oldCh.length - 1;
	    var oldStartVnode = oldCh[0];
	    var oldEndVnode = oldCh[oldEndIdx];
	    var newEndIdx = newCh.length - 1;
	    var newStartVnode = newCh[0];
	    var newEndVnode = newCh[newEndIdx];
	    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

	    // removeOnly is a special flag used only by <transition-group>
	    // to ensure removed elements stay in correct relative positions
	    // during leaving transitions
	    var canMove = !removeOnly;

	    {
	      checkDuplicateKeys(newCh);
	    }

	    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
	      if (isUndef(oldStartVnode)) {
	        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
	      } else if (isUndef(oldEndVnode)) {
	        oldEndVnode = oldCh[--oldEndIdx];
	      } else if (sameVnode(oldStartVnode, newStartVnode)) {
	        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
	        oldStartVnode = oldCh[++oldStartIdx];
	        newStartVnode = newCh[++newStartIdx];
	      } else if (sameVnode(oldEndVnode, newEndVnode)) {
	        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
	        oldEndVnode = oldCh[--oldEndIdx];
	        newEndVnode = newCh[--newEndIdx];
	      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
	        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
	        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
	        oldStartVnode = oldCh[++oldStartIdx];
	        newEndVnode = newCh[--newEndIdx];
	      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
	        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
	        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
	        oldEndVnode = oldCh[--oldEndIdx];
	        newStartVnode = newCh[++newStartIdx];
	      } else {
	        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
	        idxInOld = isDef(newStartVnode.key)
	          ? oldKeyToIdx[newStartVnode.key]
	          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
	        if (isUndef(idxInOld)) { // New element
	          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
	        } else {
	          vnodeToMove = oldCh[idxInOld];
	          if (sameVnode(vnodeToMove, newStartVnode)) {
	            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);
	            oldCh[idxInOld] = undefined;
	            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
	          } else {
	            // same key but different element. treat as new element
	            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
	          }
	        }
	        newStartVnode = newCh[++newStartIdx];
	      }
	    }
	    if (oldStartIdx > oldEndIdx) {
	      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
	      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
	    } else if (newStartIdx > newEndIdx) {
	      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
	    }
	  }

	  function checkDuplicateKeys (children) {
	    var seenKeys = {};
	    for (var i = 0; i < children.length; i++) {
	      var vnode = children[i];
	      var key = vnode.key;
	      if (isDef(key)) {
	        if (seenKeys[key]) {
	          warn(
	            ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
	            vnode.context
	          );
	        } else {
	          seenKeys[key] = true;
	        }
	      }
	    }
	  }

	  function findIdxInOld (node, oldCh, start, end) {
	    for (var i = start; i < end; i++) {
	      var c = oldCh[i];
	      if (isDef(c) && sameVnode(node, c)) { return i }
	    }
	  }

	  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {
	    if (oldVnode === vnode) {
	      return
	    }

	    var elm = vnode.elm = oldVnode.elm;

	    if (isTrue(oldVnode.isAsyncPlaceholder)) {
	      if (isDef(vnode.asyncFactory.resolved)) {
	        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
	      } else {
	        vnode.isAsyncPlaceholder = true;
	      }
	      return
	    }

	    // reuse element for static trees.
	    // note we only do this if the vnode is cloned -
	    // if the new node is not cloned it means the render functions have been
	    // reset by the hot-reload-api and we need to do a proper re-render.
	    if (isTrue(vnode.isStatic) &&
	      isTrue(oldVnode.isStatic) &&
	      vnode.key === oldVnode.key &&
	      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
	    ) {
	      vnode.componentInstance = oldVnode.componentInstance;
	      return
	    }

	    var i;
	    var data = vnode.data;
	    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
	      i(oldVnode, vnode);
	    }

	    var oldCh = oldVnode.children;
	    var ch = vnode.children;
	    if (isDef(data) && isPatchable(vnode)) {
	      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
	      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
	    }
	    if (isUndef(vnode.text)) {
	      if (isDef(oldCh) && isDef(ch)) {
	        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
	      } else if (isDef(ch)) {
	        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
	        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
	      } else if (isDef(oldCh)) {
	        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
	      } else if (isDef(oldVnode.text)) {
	        nodeOps.setTextContent(elm, '');
	      }
	    } else if (oldVnode.text !== vnode.text) {
	      nodeOps.setTextContent(elm, vnode.text);
	    }
	    if (isDef(data)) {
	      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
	    }
	  }

	  function invokeInsertHook (vnode, queue, initial) {
	    // delay insert hooks for component root nodes, invoke them after the
	    // element is really inserted
	    if (isTrue(initial) && isDef(vnode.parent)) {
	      vnode.parent.data.pendingInsert = queue;
	    } else {
	      for (var i = 0; i < queue.length; ++i) {
	        queue[i].data.hook.insert(queue[i]);
	      }
	    }
	  }

	  var hydrationBailed = false;
	  // list of modules that can skip create hook during hydration because they
	  // are already rendered on the client or has no need for initialization
	  // Note: style is excluded because it relies on initial clone for future
	  // deep updates (#7063).
	  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

	  // Note: this is a browser-only function so we can assume elms are DOM nodes.
	  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
	    var i;
	    var tag = vnode.tag;
	    var data = vnode.data;
	    var children = vnode.children;
	    inVPre = inVPre || (data && data.pre);
	    vnode.elm = elm;

	    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
	      vnode.isAsyncPlaceholder = true;
	      return true
	    }
	    // assert node match
	    {
	      if (!assertNodeMatch(elm, vnode, inVPre)) {
	        return false
	      }
	    }
	    if (isDef(data)) {
	      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
	      if (isDef(i = vnode.componentInstance)) {
	        // child component. it should have hydrated its own tree.
	        initComponent(vnode, insertedVnodeQueue);
	        return true
	      }
	    }
	    if (isDef(tag)) {
	      if (isDef(children)) {
	        // empty element, allow client to pick up and populate children
	        if (!elm.hasChildNodes()) {
	          createChildren(vnode, children, insertedVnodeQueue);
	        } else {
	          // v-html and domProps: innerHTML
	          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
	            if (i !== elm.innerHTML) {
	              /* istanbul ignore if */
	              if ("development" !== 'production' &&
	                typeof console !== 'undefined' &&
	                !hydrationBailed
	              ) {
	                hydrationBailed = true;
	                console.warn('Parent: ', elm);
	                console.warn('server innerHTML: ', i);
	                console.warn('client innerHTML: ', elm.innerHTML);
	              }
	              return false
	            }
	          } else {
	            // iterate and compare children lists
	            var childrenMatch = true;
	            var childNode = elm.firstChild;
	            for (var i$1 = 0; i$1 < children.length; i$1++) {
	              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
	                childrenMatch = false;
	                break
	              }
	              childNode = childNode.nextSibling;
	            }
	            // if childNode is not null, it means the actual childNodes list is
	            // longer than the virtual children list.
	            if (!childrenMatch || childNode) {
	              /* istanbul ignore if */
	              if ("development" !== 'production' &&
	                typeof console !== 'undefined' &&
	                !hydrationBailed
	              ) {
	                hydrationBailed = true;
	                console.warn('Parent: ', elm);
	                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
	              }
	              return false
	            }
	          }
	        }
	      }
	      if (isDef(data)) {
	        var fullInvoke = false;
	        for (var key in data) {
	          if (!isRenderedModule(key)) {
	            fullInvoke = true;
	            invokeCreateHooks(vnode, insertedVnodeQueue);
	            break
	          }
	        }
	        if (!fullInvoke && data['class']) {
	          // ensure collecting deps for deep class bindings for future updates
	          traverse(data['class']);
	        }
	      }
	    } else if (elm.data !== vnode.text) {
	      elm.data = vnode.text;
	    }
	    return true
	  }

	  function assertNodeMatch (node, vnode, inVPre) {
	    if (isDef(vnode.tag)) {
	      return vnode.tag.indexOf('vue-component') === 0 || (
	        !isUnknownElement$$1(vnode, inVPre) &&
	        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
	      )
	    } else {
	      return node.nodeType === (vnode.isComment ? 8 : 3)
	    }
	  }

	  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
	    if (isUndef(vnode)) {
	      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
	      return
	    }

	    var isInitialPatch = false;
	    var insertedVnodeQueue = [];

	    if (isUndef(oldVnode)) {
	      // empty mount (likely as component), create new root element
	      isInitialPatch = true;
	      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
	    } else {
	      var isRealElement = isDef(oldVnode.nodeType);
	      if (!isRealElement && sameVnode(oldVnode, vnode)) {
	        // patch existing root node
	        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
	      } else {
	        if (isRealElement) {
	          // mounting to a real element
	          // check if this is server-rendered content and if we can perform
	          // a successful hydration.
	          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
	            oldVnode.removeAttribute(SSR_ATTR);
	            hydrating = true;
	          }
	          if (isTrue(hydrating)) {
	            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
	              invokeInsertHook(vnode, insertedVnodeQueue, true);
	              return oldVnode
	            } else {
	              warn(
	                'The client-side rendered virtual DOM tree is not matching ' +
	                'server-rendered content. This is likely caused by incorrect ' +
	                'HTML markup, for example nesting block-level elements inside ' +
	                '<p>, or missing <tbody>. Bailing hydration and performing ' +
	                'full client-side render.'
	              );
	            }
	          }
	          // either not server-rendered, or hydration failed.
	          // create an empty node and replace it
	          oldVnode = emptyNodeAt(oldVnode);
	        }

	        // replacing existing element
	        var oldElm = oldVnode.elm;
	        var parentElm$1 = nodeOps.parentNode(oldElm);

	        // create new node
	        createElm(
	          vnode,
	          insertedVnodeQueue,
	          // extremely rare edge case: do not insert if old element is in a
	          // leaving transition. Only happens when combining transition +
	          // keep-alive + HOCs. (#4590)
	          oldElm._leaveCb ? null : parentElm$1,
	          nodeOps.nextSibling(oldElm)
	        );

	        // update parent placeholder node element, recursively
	        if (isDef(vnode.parent)) {
	          var ancestor = vnode.parent;
	          var patchable = isPatchable(vnode);
	          while (ancestor) {
	            for (var i = 0; i < cbs.destroy.length; ++i) {
	              cbs.destroy[i](ancestor);
	            }
	            ancestor.elm = vnode.elm;
	            if (patchable) {
	              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
	                cbs.create[i$1](emptyNode, ancestor);
	              }
	              // #6513
	              // invoke insert hooks that may have been merged by create hooks.
	              // e.g. for directives that uses the "inserted" hook.
	              var insert = ancestor.data.hook.insert;
	              if (insert.merged) {
	                // start at index 1 to avoid re-invoking component mounted hook
	                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
	                  insert.fns[i$2]();
	                }
	              }
	            } else {
	              registerRef(ancestor);
	            }
	            ancestor = ancestor.parent;
	          }
	        }

	        // destroy old node
	        if (isDef(parentElm$1)) {
	          removeVnodes(parentElm$1, [oldVnode], 0, 0);
	        } else if (isDef(oldVnode.tag)) {
	          invokeDestroyHook(oldVnode);
	        }
	      }
	    }

	    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
	    return vnode.elm
	  }
	}

	/*  */

	var directives = {
	  create: updateDirectives,
	  update: updateDirectives,
	  destroy: function unbindDirectives (vnode) {
	    updateDirectives(vnode, emptyNode);
	  }
	};

	function updateDirectives (oldVnode, vnode) {
	  if (oldVnode.data.directives || vnode.data.directives) {
	    _update(oldVnode, vnode);
	  }
	}

	function _update (oldVnode, vnode) {
	  var isCreate = oldVnode === emptyNode;
	  var isDestroy = vnode === emptyNode;
	  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
	  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

	  var dirsWithInsert = [];
	  var dirsWithPostpatch = [];

	  var key, oldDir, dir;
	  for (key in newDirs) {
	    oldDir = oldDirs[key];
	    dir = newDirs[key];
	    if (!oldDir) {
	      // new directive, bind
	      callHook$1(dir, 'bind', vnode, oldVnode);
	      if (dir.def && dir.def.inserted) {
	        dirsWithInsert.push(dir);
	      }
	    } else {
	      // existing directive, update
	      dir.oldValue = oldDir.value;
	      callHook$1(dir, 'update', vnode, oldVnode);
	      if (dir.def && dir.def.componentUpdated) {
	        dirsWithPostpatch.push(dir);
	      }
	    }
	  }

	  if (dirsWithInsert.length) {
	    var callInsert = function () {
	      for (var i = 0; i < dirsWithInsert.length; i++) {
	        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
	      }
	    };
	    if (isCreate) {
	      mergeVNodeHook(vnode, 'insert', callInsert);
	    } else {
	      callInsert();
	    }
	  }

	  if (dirsWithPostpatch.length) {
	    mergeVNodeHook(vnode, 'postpatch', function () {
	      for (var i = 0; i < dirsWithPostpatch.length; i++) {
	        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
	      }
	    });
	  }

	  if (!isCreate) {
	    for (key in oldDirs) {
	      if (!newDirs[key]) {
	        // no longer present, unbind
	        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
	      }
	    }
	  }
	}

	var emptyModifiers = Object.create(null);

	function normalizeDirectives$1 (
	  dirs,
	  vm
	) {
	  var res = Object.create(null);
	  if (!dirs) {
	    // $flow-disable-line
	    return res
	  }
	  var i, dir;
	  for (i = 0; i < dirs.length; i++) {
	    dir = dirs[i];
	    if (!dir.modifiers) {
	      // $flow-disable-line
	      dir.modifiers = emptyModifiers;
	    }
	    res[getRawDirName(dir)] = dir;
	    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
	  }
	  // $flow-disable-line
	  return res
	}

	function getRawDirName (dir) {
	  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
	}

	function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
	  var fn = dir.def && dir.def[hook];
	  if (fn) {
	    try {
	      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
	    } catch (e) {
	      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
	    }
	  }
	}

	var baseModules = [
	  ref,
	  directives
	];

	/*  */

	function updateAttrs (oldVnode, vnode) {
	  var opts = vnode.componentOptions;
	  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
	    return
	  }
	  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
	    return
	  }
	  var key, cur, old;
	  var elm = vnode.elm;
	  var oldAttrs = oldVnode.data.attrs || {};
	  var attrs = vnode.data.attrs || {};
	  // clone observed objects, as the user probably wants to mutate it
	  if (isDef(attrs.__ob__)) {
	    attrs = vnode.data.attrs = extend({}, attrs);
	  }

	  for (key in attrs) {
	    cur = attrs[key];
	    old = oldAttrs[key];
	    if (old !== cur) {
	      setAttr(elm, key, cur);
	    }
	  }
	  // #4391: in IE9, setting type can reset value for input[type=radio]
	  // #6666: IE/Edge forces progress value down to 1 before setting a max
	  /* istanbul ignore if */
	  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
	    setAttr(elm, 'value', attrs.value);
	  }
	  for (key in oldAttrs) {
	    if (isUndef(attrs[key])) {
	      if (isXlink(key)) {
	        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
	      } else if (!isEnumeratedAttr(key)) {
	        elm.removeAttribute(key);
	      }
	    }
	  }
	}

	function setAttr (el, key, value) {
	  if (isBooleanAttr(key)) {
	    // set attribute for blank value
	    // e.g. <option disabled>Select one</option>
	    if (isFalsyAttrValue(value)) {
	      el.removeAttribute(key);
	    } else {
	      // technically allowfullscreen is a boolean attribute for <iframe>,
	      // but Flash expects a value of "true" when used on <embed> tag
	      value = key === 'allowfullscreen' && el.tagName === 'EMBED'
	        ? 'true'
	        : key;
	      el.setAttribute(key, value);
	    }
	  } else if (isEnumeratedAttr(key)) {
	    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
	  } else if (isXlink(key)) {
	    if (isFalsyAttrValue(value)) {
	      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
	    } else {
	      el.setAttributeNS(xlinkNS, key, value);
	    }
	  } else {
	    if (isFalsyAttrValue(value)) {
	      el.removeAttribute(key);
	    } else {
	      // #7138: IE10 & 11 fires input event when setting placeholder on
	      // <textarea>... block the first input event and remove the blocker
	      // immediately.
	      /* istanbul ignore if */
	      if (
	        isIE && !isIE9 &&
	        el.tagName === 'TEXTAREA' &&
	        key === 'placeholder' && !el.__ieph
	      ) {
	        var blocker = function (e) {
	          e.stopImmediatePropagation();
	          el.removeEventListener('input', blocker);
	        };
	        el.addEventListener('input', blocker);
	        // $flow-disable-line
	        el.__ieph = true; /* IE placeholder patched */
	      }
	      el.setAttribute(key, value);
	    }
	  }
	}

	var attrs = {
	  create: updateAttrs,
	  update: updateAttrs
	};

	/*  */

	function updateClass (oldVnode, vnode) {
	  var el = vnode.elm;
	  var data = vnode.data;
	  var oldData = oldVnode.data;
	  if (
	    isUndef(data.staticClass) &&
	    isUndef(data.class) && (
	      isUndef(oldData) || (
	        isUndef(oldData.staticClass) &&
	        isUndef(oldData.class)
	      )
	    )
	  ) {
	    return
	  }

	  var cls = genClassForVnode(vnode);

	  // handle transition classes
	  var transitionClass = el._transitionClasses;
	  if (isDef(transitionClass)) {
	    cls = concat(cls, stringifyClass(transitionClass));
	  }

	  // set the class
	  if (cls !== el._prevClass) {
	    el.setAttribute('class', cls);
	    el._prevClass = cls;
	  }
	}

	var klass = {
	  create: updateClass,
	  update: updateClass
	};

	/*  */

	var validDivisionCharRE = /[\w).+\-_$\]]/;

	function parseFilters (exp) {
	  var inSingle = false;
	  var inDouble = false;
	  var inTemplateString = false;
	  var inRegex = false;
	  var curly = 0;
	  var square = 0;
	  var paren = 0;
	  var lastFilterIndex = 0;
	  var c, prev, i, expression, filters;

	  for (i = 0; i < exp.length; i++) {
	    prev = c;
	    c = exp.charCodeAt(i);
	    if (inSingle) {
	      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }
	    } else if (inDouble) {
	      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }
	    } else if (inTemplateString) {
	      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }
	    } else if (inRegex) {
	      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }
	    } else if (
	      c === 0x7C && // pipe
	      exp.charCodeAt(i + 1) !== 0x7C &&
	      exp.charCodeAt(i - 1) !== 0x7C &&
	      !curly && !square && !paren
	    ) {
	      if (expression === undefined) {
	        // first filter, end of expression
	        lastFilterIndex = i + 1;
	        expression = exp.slice(0, i).trim();
	      } else {
	        pushFilter();
	      }
	    } else {
	      switch (c) {
	        case 0x22: inDouble = true; break         // "
	        case 0x27: inSingle = true; break         // '
	        case 0x60: inTemplateString = true; break // `
	        case 0x28: paren++; break                 // (
	        case 0x29: paren--; break                 // )
	        case 0x5B: square++; break                // [
	        case 0x5D: square--; break                // ]
	        case 0x7B: curly++; break                 // {
	        case 0x7D: curly--; break                 // }
	      }
	      if (c === 0x2f) { // /
	        var j = i - 1;
	        var p = (void 0);
	        // find first non-whitespace prev char
	        for (; j >= 0; j--) {
	          p = exp.charAt(j);
	          if (p !== ' ') { break }
	        }
	        if (!p || !validDivisionCharRE.test(p)) {
	          inRegex = true;
	        }
	      }
	    }
	  }

	  if (expression === undefined) {
	    expression = exp.slice(0, i).trim();
	  } else if (lastFilterIndex !== 0) {
	    pushFilter();
	  }

	  function pushFilter () {
	    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
	    lastFilterIndex = i + 1;
	  }

	  if (filters) {
	    for (i = 0; i < filters.length; i++) {
	      expression = wrapFilter(expression, filters[i]);
	    }
	  }

	  return expression
	}

	function wrapFilter (exp, filter) {
	  var i = filter.indexOf('(');
	  if (i < 0) {
	    // _f: resolveFilter
	    return ("_f(\"" + filter + "\")(" + exp + ")")
	  } else {
	    var name = filter.slice(0, i);
	    var args = filter.slice(i + 1);
	    return ("_f(\"" + name + "\")(" + exp + "," + args)
	  }
	}

	/*  */

	function baseWarn (msg) {
	  console.error(("[Vue compiler]: " + msg));
	}

	function pluckModuleFunction (
	  modules,
	  key
	) {
	  return modules
	    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })
	    : []
	}

	function addProp (el, name, value) {
	  (el.props || (el.props = [])).push({ name: name, value: value });
	  el.plain = false;
	}

	function addAttr (el, name, value) {
	  (el.attrs || (el.attrs = [])).push({ name: name, value: value });
	  el.plain = false;
	}

	// add a raw attr (use this in preTransforms)
	function addRawAttr (el, name, value) {
	  el.attrsMap[name] = value;
	  el.attrsList.push({ name: name, value: value });
	}

	function addDirective (
	  el,
	  name,
	  rawName,
	  value,
	  arg,
	  modifiers
	) {
	  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });
	  el.plain = false;
	}

	function addHandler (
	  el,
	  name,
	  value,
	  modifiers,
	  important,
	  warn
	) {
	  modifiers = modifiers || emptyObject;
	  // warn prevent and passive modifier
	  /* istanbul ignore if */
	  if (
	    "development" !== 'production' && warn &&
	    modifiers.prevent && modifiers.passive
	  ) {
	    warn(
	      'passive and prevent can\'t be used together. ' +
	      'Passive handler can\'t prevent default event.'
	    );
	  }

	  // check capture modifier
	  if (modifiers.capture) {
	    delete modifiers.capture;
	    name = '!' + name; // mark the event as captured
	  }
	  if (modifiers.once) {
	    delete modifiers.once;
	    name = '~' + name; // mark the event as once
	  }
	  /* istanbul ignore if */
	  if (modifiers.passive) {
	    delete modifiers.passive;
	    name = '&' + name; // mark the event as passive
	  }

	  // normalize click.right and click.middle since they don't actually fire
	  // this is technically browser-specific, but at least for now browsers are
	  // the only target envs that have right/middle clicks.
	  if (name === 'click') {
	    if (modifiers.right) {
	      name = 'contextmenu';
	      delete modifiers.right;
	    } else if (modifiers.middle) {
	      name = 'mouseup';
	    }
	  }

	  var events;
	  if (modifiers.native) {
	    delete modifiers.native;
	    events = el.nativeEvents || (el.nativeEvents = {});
	  } else {
	    events = el.events || (el.events = {});
	  }

	  var newHandler = { value: value };
	  if (modifiers !== emptyObject) {
	    newHandler.modifiers = modifiers;
	  }

	  var handlers = events[name];
	  /* istanbul ignore if */
	  if (Array.isArray(handlers)) {
	    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
	  } else if (handlers) {
	    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
	  } else {
	    events[name] = newHandler;
	  }

	  el.plain = false;
	}

	function getBindingAttr (
	  el,
	  name,
	  getStatic
	) {
	  var dynamicValue =
	    getAndRemoveAttr(el, ':' + name) ||
	    getAndRemoveAttr(el, 'v-bind:' + name);
	  if (dynamicValue != null) {
	    return parseFilters(dynamicValue)
	  } else if (getStatic !== false) {
	    var staticValue = getAndRemoveAttr(el, name);
	    if (staticValue != null) {
	      return JSON.stringify(staticValue)
	    }
	  }
	}

	// note: this only removes the attr from the Array (attrsList) so that it
	// doesn't get processed by processAttrs.
	// By default it does NOT remove it from the map (attrsMap) because the map is
	// needed during codegen.
	function getAndRemoveAttr (
	  el,
	  name,
	  removeFromMap
	) {
	  var val;
	  if ((val = el.attrsMap[name]) != null) {
	    var list = el.attrsList;
	    for (var i = 0, l = list.length; i < l; i++) {
	      if (list[i].name === name) {
	        list.splice(i, 1);
	        break
	      }
	    }
	  }
	  if (removeFromMap) {
	    delete el.attrsMap[name];
	  }
	  return val
	}

	/*  */

	/**
	 * Cross-platform code generation for component v-model
	 */
	function genComponentModel (
	  el,
	  value,
	  modifiers
	) {
	  var ref = modifiers || {};
	  var number = ref.number;
	  var trim = ref.trim;

	  var baseValueExpression = '$$v';
	  var valueExpression = baseValueExpression;
	  if (trim) {
	    valueExpression =
	      "(typeof " + baseValueExpression + " === 'string'" +
	        "? " + baseValueExpression + ".trim()" +
	        ": " + baseValueExpression + ")";
	  }
	  if (number) {
	    valueExpression = "_n(" + valueExpression + ")";
	  }
	  var assignment = genAssignmentCode(value, valueExpression);

	  el.model = {
	    value: ("(" + value + ")"),
	    expression: ("\"" + value + "\""),
	    callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
	  };
	}

	/**
	 * Cross-platform codegen helper for generating v-model value assignment code.
	 */
	function genAssignmentCode (
	  value,
	  assignment
	) {
	  var res = parseModel(value);
	  if (res.key === null) {
	    return (value + "=" + assignment)
	  } else {
	    return ("$set(" + (res.exp) + ", " + (res.key) + ", " + assignment + ")")
	  }
	}

	/**
	 * Parse a v-model expression into a base path and a final key segment.
	 * Handles both dot-path and possible square brackets.
	 *
	 * Possible cases:
	 *
	 * - test
	 * - test[key]
	 * - test[test1[key]]
	 * - test["a"][key]
	 * - xxx.test[a[a].test1[key]]
	 * - test.xxx.a["asa"][test1[key]]
	 *
	 */

	var len;
	var str;
	var chr;
	var index$1;
	var expressionPos;
	var expressionEndPos;



	function parseModel (val) {
	  len = val.length;

	  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
	    index$1 = val.lastIndexOf('.');
	    if (index$1 > -1) {
	      return {
	        exp: val.slice(0, index$1),
	        key: '"' + val.slice(index$1 + 1) + '"'
	      }
	    } else {
	      return {
	        exp: val,
	        key: null
	      }
	    }
	  }

	  str = val;
	  index$1 = expressionPos = expressionEndPos = 0;

	  while (!eof()) {
	    chr = next();
	    /* istanbul ignore if */
	    if (isStringStart(chr)) {
	      parseString(chr);
	    } else if (chr === 0x5B) {
	      parseBracket(chr);
	    }
	  }

	  return {
	    exp: val.slice(0, expressionPos),
	    key: val.slice(expressionPos + 1, expressionEndPos)
	  }
	}

	function next () {
	  return str.charCodeAt(++index$1)
	}

	function eof () {
	  return index$1 >= len
	}

	function isStringStart (chr) {
	  return chr === 0x22 || chr === 0x27
	}

	function parseBracket (chr) {
	  var inBracket = 1;
	  expressionPos = index$1;
	  while (!eof()) {
	    chr = next();
	    if (isStringStart(chr)) {
	      parseString(chr);
	      continue
	    }
	    if (chr === 0x5B) { inBracket++; }
	    if (chr === 0x5D) { inBracket--; }
	    if (inBracket === 0) {
	      expressionEndPos = index$1;
	      break
	    }
	  }
	}

	function parseString (chr) {
	  var stringQuote = chr;
	  while (!eof()) {
	    chr = next();
	    if (chr === stringQuote) {
	      break
	    }
	  }
	}

	/*  */

	var warn$1;

	// in some cases, the event used has to be determined at runtime
	// so we used some reserved tokens during compile.
	var RANGE_TOKEN = '__r';
	var CHECKBOX_RADIO_TOKEN = '__c';

	function model (
	  el,
	  dir,
	  _warn
	) {
	  warn$1 = _warn;
	  var value = dir.value;
	  var modifiers = dir.modifiers;
	  var tag = el.tag;
	  var type = el.attrsMap.type;

	  {
	    // inputs with type="file" are read only and setting the input's
	    // value will throw an error.
	    if (tag === 'input' && type === 'file') {
	      warn$1(
	        "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
	        "File inputs are read only. Use a v-on:change listener instead."
	      );
	    }
	  }

	  if (el.component) {
	    genComponentModel(el, value, modifiers);
	    // component v-model doesn't need extra runtime
	    return false
	  } else if (tag === 'select') {
	    genSelect(el, value, modifiers);
	  } else if (tag === 'input' && type === 'checkbox') {
	    genCheckboxModel(el, value, modifiers);
	  } else if (tag === 'input' && type === 'radio') {
	    genRadioModel(el, value, modifiers);
	  } else if (tag === 'input' || tag === 'textarea') {
	    genDefaultModel(el, value, modifiers);
	  } else if (!config.isReservedTag(tag)) {
	    genComponentModel(el, value, modifiers);
	    // component v-model doesn't need extra runtime
	    return false
	  } else {
	    warn$1(
	      "<" + (el.tag) + " v-model=\"" + value + "\">: " +
	      "v-model is not supported on this element type. " +
	      'If you are working with contenteditable, it\'s recommended to ' +
	      'wrap a library dedicated for that purpose inside a custom component.'
	    );
	  }

	  // ensure runtime directive metadata
	  return true
	}

	function genCheckboxModel (
	  el,
	  value,
	  modifiers
	) {
	  var number = modifiers && modifiers.number;
	  var valueBinding = getBindingAttr(el, 'value') || 'null';
	  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
	  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
	  addProp(el, 'checked',
	    "Array.isArray(" + value + ")" +
	    "?_i(" + value + "," + valueBinding + ")>-1" + (
	      trueValueBinding === 'true'
	        ? (":(" + value + ")")
	        : (":_q(" + value + "," + trueValueBinding + ")")
	    )
	  );
	  addHandler(el, 'change',
	    "var $$a=" + value + "," +
	        '$$el=$event.target,' +
	        "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
	    'if(Array.isArray($$a)){' +
	      "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
	          '$$i=_i($$a,$$v);' +
	      "if($$el.checked){$$i<0&&(" + value + "=$$a.concat([$$v]))}" +
	      "else{$$i>-1&&(" + value + "=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}" +
	    "}else{" + (genAssignmentCode(value, '$$c')) + "}",
	    null, true
	  );
	}

	function genRadioModel (
	  el,
	  value,
	  modifiers
	) {
	  var number = modifiers && modifiers.number;
	  var valueBinding = getBindingAttr(el, 'value') || 'null';
	  valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
	  addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
	  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);
	}

	function genSelect (
	  el,
	  value,
	  modifiers
	) {
	  var number = modifiers && modifiers.number;
	  var selectedVal = "Array.prototype.filter" +
	    ".call($event.target.options,function(o){return o.selected})" +
	    ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
	    "return " + (number ? '_n(val)' : 'val') + "})";

	  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
	  var code = "var $$selectedVal = " + selectedVal + ";";
	  code = code + " " + (genAssignmentCode(value, assignment));
	  addHandler(el, 'change', code, null, true);
	}

	function genDefaultModel (
	  el,
	  value,
	  modifiers
	) {
	  var type = el.attrsMap.type;

	  // warn if v-bind:value conflicts with v-model
	  {
	    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];
	    if (value$1) {
	      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';
	      warn$1(
	        binding + "=\"" + value$1 + "\" conflicts with v-model on the same element " +
	        'because the latter already expands to a value binding internally'
	      );
	    }
	  }

	  var ref = modifiers || {};
	  var lazy = ref.lazy;
	  var number = ref.number;
	  var trim = ref.trim;
	  var needCompositionGuard = !lazy && type !== 'range';
	  var event = lazy
	    ? 'change'
	    : type === 'range'
	      ? RANGE_TOKEN
	      : 'input';

	  var valueExpression = '$event.target.value';
	  if (trim) {
	    valueExpression = "$event.target.value.trim()";
	  }
	  if (number) {
	    valueExpression = "_n(" + valueExpression + ")";
	  }

	  var code = genAssignmentCode(value, valueExpression);
	  if (needCompositionGuard) {
	    code = "if($event.target.composing)return;" + code;
	  }

	  addProp(el, 'value', ("(" + value + ")"));
	  addHandler(el, event, code, null, true);
	  if (trim || number) {
	    addHandler(el, 'blur', '$forceUpdate()');
	  }
	}

	/*  */

	// normalize v-model event tokens that can only be determined at runtime.
	// it's important to place the event as the first in the array because
	// the whole point is ensuring the v-model callback gets called before
	// user-attached handlers.
	function normalizeEvents (on) {
	  /* istanbul ignore if */
	  if (isDef(on[RANGE_TOKEN])) {
	    // IE input[type=range] only supports `change` event
	    var event = isIE ? 'change' : 'input';
	    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
	    delete on[RANGE_TOKEN];
	  }
	  // This was originally intended to fix #4521 but no longer necessary
	  // after 2.5. Keeping it for backwards compat with generated code from < 2.4
	  /* istanbul ignore if */
	  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
	    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
	    delete on[CHECKBOX_RADIO_TOKEN];
	  }
	}

	var target$1;

	function createOnceHandler (handler, event, capture) {
	  var _target = target$1; // save current target element in closure
	  return function onceHandler () {
	    var res = handler.apply(null, arguments);
	    if (res !== null) {
	      remove$2(event, onceHandler, capture, _target);
	    }
	  }
	}

	function add$1 (
	  event,
	  handler,
	  once$$1,
	  capture,
	  passive
	) {
	  handler = withMacroTask(handler);
	  if (once$$1) { handler = createOnceHandler(handler, event, capture); }
	  target$1.addEventListener(
	    event,
	    handler,
	    supportsPassive
	      ? { capture: capture, passive: passive }
	      : capture
	  );
	}

	function remove$2 (
	  event,
	  handler,
	  capture,
	  _target
	) {
	  (_target || target$1).removeEventListener(
	    event,
	    handler._withTask || handler,
	    capture
	  );
	}

	function updateDOMListeners (oldVnode, vnode) {
	  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
	    return
	  }
	  var on = vnode.data.on || {};
	  var oldOn = oldVnode.data.on || {};
	  target$1 = vnode.elm;
	  normalizeEvents(on);
	  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
	  target$1 = undefined;
	}

	var events = {
	  create: updateDOMListeners,
	  update: updateDOMListeners
	};

	/*  */

	function updateDOMProps (oldVnode, vnode) {
	  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
	    return
	  }
	  var key, cur;
	  var elm = vnode.elm;
	  var oldProps = oldVnode.data.domProps || {};
	  var props = vnode.data.domProps || {};
	  // clone observed objects, as the user probably wants to mutate it
	  if (isDef(props.__ob__)) {
	    props = vnode.data.domProps = extend({}, props);
	  }

	  for (key in oldProps) {
	    if (isUndef(props[key])) {
	      elm[key] = '';
	    }
	  }
	  for (key in props) {
	    cur = props[key];
	    // ignore children if the node has textContent or innerHTML,
	    // as these will throw away existing DOM nodes and cause removal errors
	    // on subsequent patches (#3360)
	    if (key === 'textContent' || key === 'innerHTML') {
	      if (vnode.children) { vnode.children.length = 0; }
	      if (cur === oldProps[key]) { continue }
	      // #6601 work around Chrome version <= 55 bug where single textNode
	      // replaced by innerHTML/textContent retains its parentNode property
	      if (elm.childNodes.length === 1) {
	        elm.removeChild(elm.childNodes[0]);
	      }
	    }

	    if (key === 'value') {
	      // store value as _value as well since
	      // non-string values will be stringified
	      elm._value = cur;
	      // avoid resetting cursor position when value is the same
	      var strCur = isUndef(cur) ? '' : String(cur);
	      if (shouldUpdateValue(elm, strCur)) {
	        elm.value = strCur;
	      }
	    } else {
	      elm[key] = cur;
	    }
	  }
	}

	// check platforms/web/util/attrs.js acceptValue


	function shouldUpdateValue (elm, checkVal) {
	  return (!elm.composing && (
	    elm.tagName === 'OPTION' ||
	    isNotInFocusAndDirty(elm, checkVal) ||
	    isDirtyWithModifiers(elm, checkVal)
	  ))
	}

	function isNotInFocusAndDirty (elm, checkVal) {
	  // return true when textbox (.number and .trim) loses focus and its value is
	  // not equal to the updated value
	  var notInFocus = true;
	  // #6157
	  // work around IE bug when accessing document.activeElement in an iframe
	  try { notInFocus = document.activeElement !== elm; } catch (e) {}
	  return notInFocus && elm.value !== checkVal
	}

	function isDirtyWithModifiers (elm, newVal) {
	  var value = elm.value;
	  var modifiers = elm._vModifiers; // injected by v-model runtime
	  if (isDef(modifiers)) {
	    if (modifiers.lazy) {
	      // inputs with lazy should only be updated when not in focus
	      return false
	    }
	    if (modifiers.number) {
	      return toNumber(value) !== toNumber(newVal)
	    }
	    if (modifiers.trim) {
	      return value.trim() !== newVal.trim()
	    }
	  }
	  return value !== newVal
	}

	var domProps = {
	  create: updateDOMProps,
	  update: updateDOMProps
	};

	/*  */

	var parseStyleText = cached(function (cssText) {
	  var res = {};
	  var listDelimiter = /;(?![^(]*\))/g;
	  var propertyDelimiter = /:(.+)/;
	  cssText.split(listDelimiter).forEach(function (item) {
	    if (item) {
	      var tmp = item.split(propertyDelimiter);
	      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
	    }
	  });
	  return res
	});

	// merge static and dynamic style data on the same vnode
	function normalizeStyleData (data) {
	  var style = normalizeStyleBinding(data.style);
	  // static style is pre-processed into an object during compilation
	  // and is always a fresh object, so it's safe to merge into it
	  return data.staticStyle
	    ? extend(data.staticStyle, style)
	    : style
	}

	// normalize possible array / string values into Object
	function normalizeStyleBinding (bindingStyle) {
	  if (Array.isArray(bindingStyle)) {
	    return toObject(bindingStyle)
	  }
	  if (typeof bindingStyle === 'string') {
	    return parseStyleText(bindingStyle)
	  }
	  return bindingStyle
	}

	/**
	 * parent component style should be after child's
	 * so that parent component's style could override it
	 */
	function getStyle (vnode, checkChild) {
	  var res = {};
	  var styleData;

	  if (checkChild) {
	    var childNode = vnode;
	    while (childNode.componentInstance) {
	      childNode = childNode.componentInstance._vnode;
	      if (
	        childNode && childNode.data &&
	        (styleData = normalizeStyleData(childNode.data))
	      ) {
	        extend(res, styleData);
	      }
	    }
	  }

	  if ((styleData = normalizeStyleData(vnode.data))) {
	    extend(res, styleData);
	  }

	  var parentNode = vnode;
	  while ((parentNode = parentNode.parent)) {
	    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
	      extend(res, styleData);
	    }
	  }
	  return res
	}

	/*  */

	var cssVarRE = /^--/;
	var importantRE = /\s*!important$/;
	var setProp = function (el, name, val) {
	  /* istanbul ignore if */
	  if (cssVarRE.test(name)) {
	    el.style.setProperty(name, val);
	  } else if (importantRE.test(val)) {
	    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
	  } else {
	    var normalizedName = normalize(name);
	    if (Array.isArray(val)) {
	      // Support values array created by autoprefixer, e.g.
	      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
	      // Set them one by one, and the browser will only set those it can recognize
	      for (var i = 0, len = val.length; i < len; i++) {
	        el.style[normalizedName] = val[i];
	      }
	    } else {
	      el.style[normalizedName] = val;
	    }
	  }
	};

	var vendorNames = ['Webkit', 'Moz', 'ms'];

	var emptyStyle;
	var normalize = cached(function (prop) {
	  emptyStyle = emptyStyle || document.createElement('div').style;
	  prop = camelize(prop);
	  if (prop !== 'filter' && (prop in emptyStyle)) {
	    return prop
	  }
	  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
	  for (var i = 0; i < vendorNames.length; i++) {
	    var name = vendorNames[i] + capName;
	    if (name in emptyStyle) {
	      return name
	    }
	  }
	});

	function updateStyle (oldVnode, vnode) {
	  var data = vnode.data;
	  var oldData = oldVnode.data;

	  if (isUndef(data.staticStyle) && isUndef(data.style) &&
	    isUndef(oldData.staticStyle) && isUndef(oldData.style)
	  ) {
	    return
	  }

	  var cur, name;
	  var el = vnode.elm;
	  var oldStaticStyle = oldData.staticStyle;
	  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

	  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
	  var oldStyle = oldStaticStyle || oldStyleBinding;

	  var style = normalizeStyleBinding(vnode.data.style) || {};

	  // store normalized style under a different key for next diff
	  // make sure to clone it if it's reactive, since the user likely wants
	  // to mutate it.
	  vnode.data.normalizedStyle = isDef(style.__ob__)
	    ? extend({}, style)
	    : style;

	  var newStyle = getStyle(vnode, true);

	  for (name in oldStyle) {
	    if (isUndef(newStyle[name])) {
	      setProp(el, name, '');
	    }
	  }
	  for (name in newStyle) {
	    cur = newStyle[name];
	    if (cur !== oldStyle[name]) {
	      // ie9 setting to null has no effect, must use empty string
	      setProp(el, name, cur == null ? '' : cur);
	    }
	  }
	}

	var style = {
	  create: updateStyle,
	  update: updateStyle
	};

	/*  */

	/**
	 * Add class with compatibility for SVG since classList is not supported on
	 * SVG elements in IE
	 */
	function addClass (el, cls) {
	  /* istanbul ignore if */
	  if (!cls || !(cls = cls.trim())) {
	    return
	  }

	  /* istanbul ignore else */
	  if (el.classList) {
	    if (cls.indexOf(' ') > -1) {
	      cls.split(/\s+/).forEach(function (c) { return el.classList.add(c); });
	    } else {
	      el.classList.add(cls);
	    }
	  } else {
	    var cur = " " + (el.getAttribute('class') || '') + " ";
	    if (cur.indexOf(' ' + cls + ' ') < 0) {
	      el.setAttribute('class', (cur + cls).trim());
	    }
	  }
	}

	/**
	 * Remove class with compatibility for SVG since classList is not supported on
	 * SVG elements in IE
	 */
	function removeClass (el, cls) {
	  /* istanbul ignore if */
	  if (!cls || !(cls = cls.trim())) {
	    return
	  }

	  /* istanbul ignore else */
	  if (el.classList) {
	    if (cls.indexOf(' ') > -1) {
	      cls.split(/\s+/).forEach(function (c) { return el.classList.remove(c); });
	    } else {
	      el.classList.remove(cls);
	    }
	    if (!el.classList.length) {
	      el.removeAttribute('class');
	    }
	  } else {
	    var cur = " " + (el.getAttribute('class') || '') + " ";
	    var tar = ' ' + cls + ' ';
	    while (cur.indexOf(tar) >= 0) {
	      cur = cur.replace(tar, ' ');
	    }
	    cur = cur.trim();
	    if (cur) {
	      el.setAttribute('class', cur);
	    } else {
	      el.removeAttribute('class');
	    }
	  }
	}

	/*  */

	function resolveTransition (def) {
	  if (!def) {
	    return
	  }
	  /* istanbul ignore else */
	  if (typeof def === 'object') {
	    var res = {};
	    if (def.css !== false) {
	      extend(res, autoCssTransition(def.name || 'v'));
	    }
	    extend(res, def);
	    return res
	  } else if (typeof def === 'string') {
	    return autoCssTransition(def)
	  }
	}

	var autoCssTransition = cached(function (name) {
	  return {
	    enterClass: (name + "-enter"),
	    enterToClass: (name + "-enter-to"),
	    enterActiveClass: (name + "-enter-active"),
	    leaveClass: (name + "-leave"),
	    leaveToClass: (name + "-leave-to"),
	    leaveActiveClass: (name + "-leave-active")
	  }
	});

	var hasTransition = inBrowser && !isIE9;
	var TRANSITION = 'transition';
	var ANIMATION = 'animation';

	// Transition property/event sniffing
	var transitionProp = 'transition';
	var transitionEndEvent = 'transitionend';
	var animationProp = 'animation';
	var animationEndEvent = 'animationend';
	if (hasTransition) {
	  /* istanbul ignore if */
	  if (window.ontransitionend === undefined &&
	    window.onwebkittransitionend !== undefined
	  ) {
	    transitionProp = 'WebkitTransition';
	    transitionEndEvent = 'webkitTransitionEnd';
	  }
	  if (window.onanimationend === undefined &&
	    window.onwebkitanimationend !== undefined
	  ) {
	    animationProp = 'WebkitAnimation';
	    animationEndEvent = 'webkitAnimationEnd';
	  }
	}

	// binding to window is necessary to make hot reload work in IE in strict mode
	var raf = inBrowser
	  ? window.requestAnimationFrame
	    ? window.requestAnimationFrame.bind(window)
	    : setTimeout
	  : /* istanbul ignore next */ function (fn) { return fn(); };

	function nextFrame (fn) {
	  raf(function () {
	    raf(fn);
	  });
	}

	function addTransitionClass (el, cls) {
	  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
	  if (transitionClasses.indexOf(cls) < 0) {
	    transitionClasses.push(cls);
	    addClass(el, cls);
	  }
	}

	function removeTransitionClass (el, cls) {
	  if (el._transitionClasses) {
	    remove(el._transitionClasses, cls);
	  }
	  removeClass(el, cls);
	}

	function whenTransitionEnds (
	  el,
	  expectedType,
	  cb
	) {
	  var ref = getTransitionInfo(el, expectedType);
	  var type = ref.type;
	  var timeout = ref.timeout;
	  var propCount = ref.propCount;
	  if (!type) { return cb() }
	  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
	  var ended = 0;
	  var end = function () {
	    el.removeEventListener(event, onEnd);
	    cb();
	  };
	  var onEnd = function (e) {
	    if (e.target === el) {
	      if (++ended >= propCount) {
	        end();
	      }
	    }
	  };
	  setTimeout(function () {
	    if (ended < propCount) {
	      end();
	    }
	  }, timeout + 1);
	  el.addEventListener(event, onEnd);
	}

	var transformRE = /\b(transform|all)(,|$)/;

	function getTransitionInfo (el, expectedType) {
	  var styles = window.getComputedStyle(el);
	  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
	  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
	  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
	  var animationDelays = styles[animationProp + 'Delay'].split(', ');
	  var animationDurations = styles[animationProp + 'Duration'].split(', ');
	  var animationTimeout = getTimeout(animationDelays, animationDurations);

	  var type;
	  var timeout = 0;
	  var propCount = 0;
	  /* istanbul ignore if */
	  if (expectedType === TRANSITION) {
	    if (transitionTimeout > 0) {
	      type = TRANSITION;
	      timeout = transitionTimeout;
	      propCount = transitionDurations.length;
	    }
	  } else if (expectedType === ANIMATION) {
	    if (animationTimeout > 0) {
	      type = ANIMATION;
	      timeout = animationTimeout;
	      propCount = animationDurations.length;
	    }
	  } else {
	    timeout = Math.max(transitionTimeout, animationTimeout);
	    type = timeout > 0
	      ? transitionTimeout > animationTimeout
	        ? TRANSITION
	        : ANIMATION
	      : null;
	    propCount = type
	      ? type === TRANSITION
	        ? transitionDurations.length
	        : animationDurations.length
	      : 0;
	  }
	  var hasTransform =
	    type === TRANSITION &&
	    transformRE.test(styles[transitionProp + 'Property']);
	  return {
	    type: type,
	    timeout: timeout,
	    propCount: propCount,
	    hasTransform: hasTransform
	  }
	}

	function getTimeout (delays, durations) {
	  /* istanbul ignore next */
	  while (delays.length < durations.length) {
	    delays = delays.concat(delays);
	  }

	  return Math.max.apply(null, durations.map(function (d, i) {
	    return toMs(d) + toMs(delays[i])
	  }))
	}

	function toMs (s) {
	  return Number(s.slice(0, -1)) * 1000
	}

	/*  */

	function enter (vnode, toggleDisplay) {
	  var el = vnode.elm;

	  // call leave callback now
	  if (isDef(el._leaveCb)) {
	    el._leaveCb.cancelled = true;
	    el._leaveCb();
	  }

	  var data = resolveTransition(vnode.data.transition);
	  if (isUndef(data)) {
	    return
	  }

	  /* istanbul ignore if */
	  if (isDef(el._enterCb) || el.nodeType !== 1) {
	    return
	  }

	  var css = data.css;
	  var type = data.type;
	  var enterClass = data.enterClass;
	  var enterToClass = data.enterToClass;
	  var enterActiveClass = data.enterActiveClass;
	  var appearClass = data.appearClass;
	  var appearToClass = data.appearToClass;
	  var appearActiveClass = data.appearActiveClass;
	  var beforeEnter = data.beforeEnter;
	  var enter = data.enter;
	  var afterEnter = data.afterEnter;
	  var enterCancelled = data.enterCancelled;
	  var beforeAppear = data.beforeAppear;
	  var appear = data.appear;
	  var afterAppear = data.afterAppear;
	  var appearCancelled = data.appearCancelled;
	  var duration = data.duration;

	  // activeInstance will always be the <transition> component managing this
	  // transition. One edge case to check is when the <transition> is placed
	  // as the root node of a child component. In that case we need to check
	  // <transition>'s parent for appear check.
	  var context = activeInstance;
	  var transitionNode = activeInstance.$vnode;
	  while (transitionNode && transitionNode.parent) {
	    transitionNode = transitionNode.parent;
	    context = transitionNode.context;
	  }

	  var isAppear = !context._isMounted || !vnode.isRootInsert;

	  if (isAppear && !appear && appear !== '') {
	    return
	  }

	  var startClass = isAppear && appearClass
	    ? appearClass
	    : enterClass;
	  var activeClass = isAppear && appearActiveClass
	    ? appearActiveClass
	    : enterActiveClass;
	  var toClass = isAppear && appearToClass
	    ? appearToClass
	    : enterToClass;

	  var beforeEnterHook = isAppear
	    ? (beforeAppear || beforeEnter)
	    : beforeEnter;
	  var enterHook = isAppear
	    ? (typeof appear === 'function' ? appear : enter)
	    : enter;
	  var afterEnterHook = isAppear
	    ? (afterAppear || afterEnter)
	    : afterEnter;
	  var enterCancelledHook = isAppear
	    ? (appearCancelled || enterCancelled)
	    : enterCancelled;

	  var explicitEnterDuration = toNumber(
	    isObject(duration)
	      ? duration.enter
	      : duration
	  );

	  if ("development" !== 'production' && explicitEnterDuration != null) {
	    checkDuration(explicitEnterDuration, 'enter', vnode);
	  }

	  var expectsCSS = css !== false && !isIE9;
	  var userWantsControl = getHookArgumentsLength(enterHook);

	  var cb = el._enterCb = once(function () {
	    if (expectsCSS) {
	      removeTransitionClass(el, toClass);
	      removeTransitionClass(el, activeClass);
	    }
	    if (cb.cancelled) {
	      if (expectsCSS) {
	        removeTransitionClass(el, startClass);
	      }
	      enterCancelledHook && enterCancelledHook(el);
	    } else {
	      afterEnterHook && afterEnterHook(el);
	    }
	    el._enterCb = null;
	  });

	  if (!vnode.data.show) {
	    // remove pending leave element on enter by injecting an insert hook
	    mergeVNodeHook(vnode, 'insert', function () {
	      var parent = el.parentNode;
	      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
	      if (pendingNode &&
	        pendingNode.tag === vnode.tag &&
	        pendingNode.elm._leaveCb
	      ) {
	        pendingNode.elm._leaveCb();
	      }
	      enterHook && enterHook(el, cb);
	    });
	  }

	  // start enter transition
	  beforeEnterHook && beforeEnterHook(el);
	  if (expectsCSS) {
	    addTransitionClass(el, startClass);
	    addTransitionClass(el, activeClass);
	    nextFrame(function () {
	      addTransitionClass(el, toClass);
	      removeTransitionClass(el, startClass);
	      if (!cb.cancelled && !userWantsControl) {
	        if (isValidDuration(explicitEnterDuration)) {
	          setTimeout(cb, explicitEnterDuration);
	        } else {
	          whenTransitionEnds(el, type, cb);
	        }
	      }
	    });
	  }

	  if (vnode.data.show) {
	    toggleDisplay && toggleDisplay();
	    enterHook && enterHook(el, cb);
	  }

	  if (!expectsCSS && !userWantsControl) {
	    cb();
	  }
	}

	function leave (vnode, rm) {
	  var el = vnode.elm;

	  // call enter callback now
	  if (isDef(el._enterCb)) {
	    el._enterCb.cancelled = true;
	    el._enterCb();
	  }

	  var data = resolveTransition(vnode.data.transition);
	  if (isUndef(data) || el.nodeType !== 1) {
	    return rm()
	  }

	  /* istanbul ignore if */
	  if (isDef(el._leaveCb)) {
	    return
	  }

	  var css = data.css;
	  var type = data.type;
	  var leaveClass = data.leaveClass;
	  var leaveToClass = data.leaveToClass;
	  var leaveActiveClass = data.leaveActiveClass;
	  var beforeLeave = data.beforeLeave;
	  var leave = data.leave;
	  var afterLeave = data.afterLeave;
	  var leaveCancelled = data.leaveCancelled;
	  var delayLeave = data.delayLeave;
	  var duration = data.duration;

	  var expectsCSS = css !== false && !isIE9;
	  var userWantsControl = getHookArgumentsLength(leave);

	  var explicitLeaveDuration = toNumber(
	    isObject(duration)
	      ? duration.leave
	      : duration
	  );

	  if ("development" !== 'production' && isDef(explicitLeaveDuration)) {
	    checkDuration(explicitLeaveDuration, 'leave', vnode);
	  }

	  var cb = el._leaveCb = once(function () {
	    if (el.parentNode && el.parentNode._pending) {
	      el.parentNode._pending[vnode.key] = null;
	    }
	    if (expectsCSS) {
	      removeTransitionClass(el, leaveToClass);
	      removeTransitionClass(el, leaveActiveClass);
	    }
	    if (cb.cancelled) {
	      if (expectsCSS) {
	        removeTransitionClass(el, leaveClass);
	      }
	      leaveCancelled && leaveCancelled(el);
	    } else {
	      rm();
	      afterLeave && afterLeave(el);
	    }
	    el._leaveCb = null;
	  });

	  if (delayLeave) {
	    delayLeave(performLeave);
	  } else {
	    performLeave();
	  }

	  function performLeave () {
	    // the delayed leave may have already been cancelled
	    if (cb.cancelled) {
	      return
	    }
	    // record leaving element
	    if (!vnode.data.show) {
	      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
	    }
	    beforeLeave && beforeLeave(el);
	    if (expectsCSS) {
	      addTransitionClass(el, leaveClass);
	      addTransitionClass(el, leaveActiveClass);
	      nextFrame(function () {
	        addTransitionClass(el, leaveToClass);
	        removeTransitionClass(el, leaveClass);
	        if (!cb.cancelled && !userWantsControl) {
	          if (isValidDuration(explicitLeaveDuration)) {
	            setTimeout(cb, explicitLeaveDuration);
	          } else {
	            whenTransitionEnds(el, type, cb);
	          }
	        }
	      });
	    }
	    leave && leave(el, cb);
	    if (!expectsCSS && !userWantsControl) {
	      cb();
	    }
	  }
	}

	// only used in dev mode
	function checkDuration (val, name, vnode) {
	  if (typeof val !== 'number') {
	    warn(
	      "<transition> explicit " + name + " duration is not a valid number - " +
	      "got " + (JSON.stringify(val)) + ".",
	      vnode.context
	    );
	  } else if (isNaN(val)) {
	    warn(
	      "<transition> explicit " + name + " duration is NaN - " +
	      'the duration expression might be incorrect.',
	      vnode.context
	    );
	  }
	}

	function isValidDuration (val) {
	  return typeof val === 'number' && !isNaN(val)
	}

	/**
	 * Normalize a transition hook's argument length. The hook may be:
	 * - a merged hook (invoker) with the original in .fns
	 * - a wrapped component method (check ._length)
	 * - a plain function (.length)
	 */
	function getHookArgumentsLength (fn) {
	  if (isUndef(fn)) {
	    return false
	  }
	  var invokerFns = fn.fns;
	  if (isDef(invokerFns)) {
	    // invoker
	    return getHookArgumentsLength(
	      Array.isArray(invokerFns)
	        ? invokerFns[0]
	        : invokerFns
	    )
	  } else {
	    return (fn._length || fn.length) > 1
	  }
	}

	function _enter (_, vnode) {
	  if (vnode.data.show !== true) {
	    enter(vnode);
	  }
	}

	var transition = inBrowser ? {
	  create: _enter,
	  activate: _enter,
	  remove: function remove$$1 (vnode, rm) {
	    /* istanbul ignore else */
	    if (vnode.data.show !== true) {
	      leave(vnode, rm);
	    } else {
	      rm();
	    }
	  }
	} : {};

	var platformModules = [
	  attrs,
	  klass,
	  events,
	  domProps,
	  style,
	  transition
	];

	/*  */

	// the directive module should be applied last, after all
	// built-in modules have been applied.
	var modules = platformModules.concat(baseModules);

	var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

	/**
	 * Not type checking this file because flow doesn't like attaching
	 * properties to Elements.
	 */

	/* istanbul ignore if */
	if (isIE9) {
	  // http://www.matts411.com/post/internet-explorer-9-oninput/
	  document.addEventListener('selectionchange', function () {
	    var el = document.activeElement;
	    if (el && el.vmodel) {
	      trigger(el, 'input');
	    }
	  });
	}

	var directive = {
	  inserted: function inserted (el, binding, vnode, oldVnode) {
	    if (vnode.tag === 'select') {
	      // #6903
	      if (oldVnode.elm && !oldVnode.elm._vOptions) {
	        mergeVNodeHook(vnode, 'postpatch', function () {
	          directive.componentUpdated(el, binding, vnode);
	        });
	      } else {
	        setSelected(el, binding, vnode.context);
	      }
	      el._vOptions = [].map.call(el.options, getValue);
	    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
	      el._vModifiers = binding.modifiers;
	      if (!binding.modifiers.lazy) {
	        // Safari < 10.2 & UIWebView doesn't fire compositionend when
	        // switching focus before confirming composition choice
	        // this also fixes the issue where some browsers e.g. iOS Chrome
	        // fires "change" instead of "input" on autocomplete.
	        el.addEventListener('change', onCompositionEnd);
	        if (!isAndroid) {
	          el.addEventListener('compositionstart', onCompositionStart);
	          el.addEventListener('compositionend', onCompositionEnd);
	        }
	        /* istanbul ignore if */
	        if (isIE9) {
	          el.vmodel = true;
	        }
	      }
	    }
	  },

	  componentUpdated: function componentUpdated (el, binding, vnode) {
	    if (vnode.tag === 'select') {
	      setSelected(el, binding, vnode.context);
	      // in case the options rendered by v-for have changed,
	      // it's possible that the value is out-of-sync with the rendered options.
	      // detect such cases and filter out values that no longer has a matching
	      // option in the DOM.
	      var prevOptions = el._vOptions;
	      var curOptions = el._vOptions = [].map.call(el.options, getValue);
	      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
	        // trigger change event if
	        // no matching option found for at least one value
	        var needReset = el.multiple
	          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
	          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
	        if (needReset) {
	          trigger(el, 'change');
	        }
	      }
	    }
	  }
	};

	function setSelected (el, binding, vm) {
	  actuallySetSelected(el, binding, vm);
	  /* istanbul ignore if */
	  if (isIE || isEdge) {
	    setTimeout(function () {
	      actuallySetSelected(el, binding, vm);
	    }, 0);
	  }
	}

	function actuallySetSelected (el, binding, vm) {
	  var value = binding.value;
	  var isMultiple = el.multiple;
	  if (isMultiple && !Array.isArray(value)) {
	    "development" !== 'production' && warn(
	      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
	      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
	      vm
	    );
	    return
	  }
	  var selected, option;
	  for (var i = 0, l = el.options.length; i < l; i++) {
	    option = el.options[i];
	    if (isMultiple) {
	      selected = looseIndexOf(value, getValue(option)) > -1;
	      if (option.selected !== selected) {
	        option.selected = selected;
	      }
	    } else {
	      if (looseEqual(getValue(option), value)) {
	        if (el.selectedIndex !== i) {
	          el.selectedIndex = i;
	        }
	        return
	      }
	    }
	  }
	  if (!isMultiple) {
	    el.selectedIndex = -1;
	  }
	}

	function hasNoMatchingOption (value, options) {
	  return options.every(function (o) { return !looseEqual(o, value); })
	}

	function getValue (option) {
	  return '_value' in option
	    ? option._value
	    : option.value
	}

	function onCompositionStart (e) {
	  e.target.composing = true;
	}

	function onCompositionEnd (e) {
	  // prevent triggering an input event for no reason
	  if (!e.target.composing) { return }
	  e.target.composing = false;
	  trigger(e.target, 'input');
	}

	function trigger (el, type) {
	  var e = document.createEvent('HTMLEvents');
	  e.initEvent(type, true, true);
	  el.dispatchEvent(e);
	}

	/*  */

	// recursively search for possible transition defined inside the component root
	function locateNode (vnode) {
	  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
	    ? locateNode(vnode.componentInstance._vnode)
	    : vnode
	}

	var show = {
	  bind: function bind (el, ref, vnode) {
	    var value = ref.value;

	    vnode = locateNode(vnode);
	    var transition$$1 = vnode.data && vnode.data.transition;
	    var originalDisplay = el.__vOriginalDisplay =
	      el.style.display === 'none' ? '' : el.style.display;
	    if (value && transition$$1) {
	      vnode.data.show = true;
	      enter(vnode, function () {
	        el.style.display = originalDisplay;
	      });
	    } else {
	      el.style.display = value ? originalDisplay : 'none';
	    }
	  },

	  update: function update (el, ref, vnode) {
	    var value = ref.value;
	    var oldValue = ref.oldValue;

	    /* istanbul ignore if */
	    if (value === oldValue) { return }
	    vnode = locateNode(vnode);
	    var transition$$1 = vnode.data && vnode.data.transition;
	    if (transition$$1) {
	      vnode.data.show = true;
	      if (value) {
	        enter(vnode, function () {
	          el.style.display = el.__vOriginalDisplay;
	        });
	      } else {
	        leave(vnode, function () {
	          el.style.display = 'none';
	        });
	      }
	    } else {
	      el.style.display = value ? el.__vOriginalDisplay : 'none';
	    }
	  },

	  unbind: function unbind (
	    el,
	    binding,
	    vnode,
	    oldVnode,
	    isDestroy
	  ) {
	    if (!isDestroy) {
	      el.style.display = el.__vOriginalDisplay;
	    }
	  }
	};

	var platformDirectives = {
	  model: directive,
	  show: show
	};

	/*  */

	// Provides transition support for a single element/component.
	// supports transition mode (out-in / in-out)

	var transitionProps = {
	  name: String,
	  appear: Boolean,
	  css: Boolean,
	  mode: String,
	  type: String,
	  enterClass: String,
	  leaveClass: String,
	  enterToClass: String,
	  leaveToClass: String,
	  enterActiveClass: String,
	  leaveActiveClass: String,
	  appearClass: String,
	  appearActiveClass: String,
	  appearToClass: String,
	  duration: [Number, String, Object]
	};

	// in case the child is also an abstract component, e.g. <keep-alive>
	// we want to recursively retrieve the real component to be rendered
	function getRealChild (vnode) {
	  var compOptions = vnode && vnode.componentOptions;
	  if (compOptions && compOptions.Ctor.options.abstract) {
	    return getRealChild(getFirstComponentChild(compOptions.children))
	  } else {
	    return vnode
	  }
	}

	function extractTransitionData (comp) {
	  var data = {};
	  var options = comp.$options;
	  // props
	  for (var key in options.propsData) {
	    data[key] = comp[key];
	  }
	  // events.
	  // extract listeners and pass them directly to the transition methods
	  var listeners = options._parentListeners;
	  for (var key$1 in listeners) {
	    data[camelize(key$1)] = listeners[key$1];
	  }
	  return data
	}

	function placeholder (h, rawChild) {
	  if (/\d-keep-alive$/.test(rawChild.tag)) {
	    return h('keep-alive', {
	      props: rawChild.componentOptions.propsData
	    })
	  }
	}

	function hasParentTransition (vnode) {
	  while ((vnode = vnode.parent)) {
	    if (vnode.data.transition) {
	      return true
	    }
	  }
	}

	function isSameChild (child, oldChild) {
	  return oldChild.key === child.key && oldChild.tag === child.tag
	}

	var Transition = {
	  name: 'transition',
	  props: transitionProps,
	  abstract: true,

	  render: function render (h) {
	    var this$1 = this;

	    var children = this.$slots.default;
	    if (!children) {
	      return
	    }

	    // filter out text nodes (possible whitespaces)
	    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });
	    /* istanbul ignore if */
	    if (!children.length) {
	      return
	    }

	    // warn multiple elements
	    if ("development" !== 'production' && children.length > 1) {
	      warn(
	        '<transition> can only be used on a single element. Use ' +
	        '<transition-group> for lists.',
	        this.$parent
	      );
	    }

	    var mode = this.mode;

	    // warn invalid mode
	    if ("development" !== 'production' &&
	      mode && mode !== 'in-out' && mode !== 'out-in'
	    ) {
	      warn(
	        'invalid <transition> mode: ' + mode,
	        this.$parent
	      );
	    }

	    var rawChild = children[0];

	    // if this is a component root node and the component's
	    // parent container node also has transition, skip.
	    if (hasParentTransition(this.$vnode)) {
	      return rawChild
	    }

	    // apply transition data to child
	    // use getRealChild() to ignore abstract components e.g. keep-alive
	    var child = getRealChild(rawChild);
	    /* istanbul ignore if */
	    if (!child) {
	      return rawChild
	    }

	    if (this._leaving) {
	      return placeholder(h, rawChild)
	    }

	    // ensure a key that is unique to the vnode type and to this transition
	    // component instance. This key will be used to remove pending leaving nodes
	    // during entering.
	    var id = "__transition-" + (this._uid) + "-";
	    child.key = child.key == null
	      ? child.isComment
	        ? id + 'comment'
	        : id + child.tag
	      : isPrimitive(child.key)
	        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
	        : child.key;

	    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
	    var oldRawChild = this._vnode;
	    var oldChild = getRealChild(oldRawChild);

	    // mark v-show
	    // so that the transition module can hand over the control to the directive
	    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {
	      child.data.show = true;
	    }

	    if (
	      oldChild &&
	      oldChild.data &&
	      !isSameChild(child, oldChild) &&
	      !isAsyncPlaceholder(oldChild) &&
	      // #6687 component root is a comment node
	      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
	    ) {
	      // replace old child transition data with fresh one
	      // important for dynamic transitions!
	      var oldData = oldChild.data.transition = extend({}, data);
	      // handle transition mode
	      if (mode === 'out-in') {
	        // return placeholder node and queue update when leave finishes
	        this._leaving = true;
	        mergeVNodeHook(oldData, 'afterLeave', function () {
	          this$1._leaving = false;
	          this$1.$forceUpdate();
	        });
	        return placeholder(h, rawChild)
	      } else if (mode === 'in-out') {
	        if (isAsyncPlaceholder(child)) {
	          return oldRawChild
	        }
	        var delayedLeave;
	        var performLeave = function () { delayedLeave(); };
	        mergeVNodeHook(data, 'afterEnter', performLeave);
	        mergeVNodeHook(data, 'enterCancelled', performLeave);
	        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
	      }
	    }

	    return rawChild
	  }
	};

	/*  */

	// Provides transition support for list items.
	// supports move transitions using the FLIP technique.

	// Because the vdom's children update algorithm is "unstable" - i.e.
	// it doesn't guarantee the relative positioning of removed elements,
	// we force transition-group to update its children into two passes:
	// in the first pass, we remove all nodes that need to be removed,
	// triggering their leaving transition; in the second pass, we insert/move
	// into the final desired state. This way in the second pass removed
	// nodes will remain where they should be.

	var props = extend({
	  tag: String,
	  moveClass: String
	}, transitionProps);

	delete props.mode;

	var TransitionGroup = {
	  props: props,

	  render: function render (h) {
	    var tag = this.tag || this.$vnode.data.tag || 'span';
	    var map = Object.create(null);
	    var prevChildren = this.prevChildren = this.children;
	    var rawChildren = this.$slots.default || [];
	    var children = this.children = [];
	    var transitionData = extractTransitionData(this);

	    for (var i = 0; i < rawChildren.length; i++) {
	      var c = rawChildren[i];
	      if (c.tag) {
	        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
	          children.push(c);
	          map[c.key] = c
	          ;(c.data || (c.data = {})).transition = transitionData;
	        } else {
	          var opts = c.componentOptions;
	          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
	          warn(("<transition-group> children must be keyed: <" + name + ">"));
	        }
	      }
	    }

	    if (prevChildren) {
	      var kept = [];
	      var removed = [];
	      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
	        var c$1 = prevChildren[i$1];
	        c$1.data.transition = transitionData;
	        c$1.data.pos = c$1.elm.getBoundingClientRect();
	        if (map[c$1.key]) {
	          kept.push(c$1);
	        } else {
	          removed.push(c$1);
	        }
	      }
	      this.kept = h(tag, null, kept);
	      this.removed = removed;
	    }

	    return h(tag, null, children)
	  },

	  beforeUpdate: function beforeUpdate () {
	    // force removing pass
	    this.__patch__(
	      this._vnode,
	      this.kept,
	      false, // hydrating
	      true // removeOnly (!important avoids unnecessary moves)
	    );
	    this._vnode = this.kept;
	  },

	  updated: function updated () {
	    var children = this.prevChildren;
	    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
	    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
	      return
	    }

	    // we divide the work into three loops to avoid mixing DOM reads and writes
	    // in each iteration - which helps prevent layout thrashing.
	    children.forEach(callPendingCbs);
	    children.forEach(recordPosition);
	    children.forEach(applyTranslation);

	    // force reflow to put everything in position
	    // assign to this to avoid being removed in tree-shaking
	    // $flow-disable-line
	    this._reflow = document.body.offsetHeight;

	    children.forEach(function (c) {
	      if (c.data.moved) {
	        var el = c.elm;
	        var s = el.style;
	        addTransitionClass(el, moveClass);
	        s.transform = s.WebkitTransform = s.transitionDuration = '';
	        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
	          if (!e || /transform$/.test(e.propertyName)) {
	            el.removeEventListener(transitionEndEvent, cb);
	            el._moveCb = null;
	            removeTransitionClass(el, moveClass);
	          }
	        });
	      }
	    });
	  },

	  methods: {
	    hasMove: function hasMove (el, moveClass) {
	      /* istanbul ignore if */
	      if (!hasTransition) {
	        return false
	      }
	      /* istanbul ignore if */
	      if (this._hasMove) {
	        return this._hasMove
	      }
	      // Detect whether an element with the move class applied has
	      // CSS transitions. Since the element may be inside an entering
	      // transition at this very moment, we make a clone of it and remove
	      // all other transition classes applied to ensure only the move class
	      // is applied.
	      var clone = el.cloneNode();
	      if (el._transitionClasses) {
	        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
	      }
	      addClass(clone, moveClass);
	      clone.style.display = 'none';
	      this.$el.appendChild(clone);
	      var info = getTransitionInfo(clone);
	      this.$el.removeChild(clone);
	      return (this._hasMove = info.hasTransform)
	    }
	  }
	};

	function callPendingCbs (c) {
	  /* istanbul ignore if */
	  if (c.elm._moveCb) {
	    c.elm._moveCb();
	  }
	  /* istanbul ignore if */
	  if (c.elm._enterCb) {
	    c.elm._enterCb();
	  }
	}

	function recordPosition (c) {
	  c.data.newPos = c.elm.getBoundingClientRect();
	}

	function applyTranslation (c) {
	  var oldPos = c.data.pos;
	  var newPos = c.data.newPos;
	  var dx = oldPos.left - newPos.left;
	  var dy = oldPos.top - newPos.top;
	  if (dx || dy) {
	    c.data.moved = true;
	    var s = c.elm.style;
	    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
	    s.transitionDuration = '0s';
	  }
	}

	var platformComponents = {
	  Transition: Transition,
	  TransitionGroup: TransitionGroup
	};

	/*  */

	// install platform specific utils
	Vue$3.config.mustUseProp = mustUseProp;
	Vue$3.config.isReservedTag = isReservedTag;
	Vue$3.config.isReservedAttr = isReservedAttr;
	Vue$3.config.getTagNamespace = getTagNamespace;
	Vue$3.config.isUnknownElement = isUnknownElement;

	// install platform runtime directives & components
	extend(Vue$3.options.directives, platformDirectives);
	extend(Vue$3.options.components, platformComponents);

	// install platform patch function
	Vue$3.prototype.__patch__ = inBrowser ? patch : noop;

	// public mount method
	Vue$3.prototype.$mount = function (
	  el,
	  hydrating
	) {
	  el = el && inBrowser ? query(el) : undefined;
	  return mountComponent(this, el, hydrating)
	};

	// devtools global hook
	/* istanbul ignore next */
	Vue$3.nextTick(function () {
	  if (config.devtools) {
	    if (devtools) {
	      devtools.emit('init', Vue$3);
	    } else if ("development" !== 'production' && isChrome) {
	      console[console.info ? 'info' : 'log'](
	        'Download the Vue Devtools extension for a better development experience:\n' +
	        'https://github.com/vuejs/vue-devtools'
	      );
	    }
	  }
	  if ("development" !== 'production' &&
	    config.productionTip !== false &&
	    inBrowser && typeof console !== 'undefined'
	  ) {
	    console[console.info ? 'info' : 'log'](
	      "You are running Vue in development mode.\n" +
	      "Make sure to turn on production mode when deploying for production.\n" +
	      "See more tips at https://vuejs.org/guide/deployment.html"
	    );
	  }
	}, 0);

	/*  */

	var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
	var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

	var buildRegex = cached(function (delimiters) {
	  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
	  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
	  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
	});



	function parseText (
	  text,
	  delimiters
	) {
	  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
	  if (!tagRE.test(text)) {
	    return
	  }
	  var tokens = [];
	  var rawTokens = [];
	  var lastIndex = tagRE.lastIndex = 0;
	  var match, index, tokenValue;
	  while ((match = tagRE.exec(text))) {
	    index = match.index;
	    // push text token
	    if (index > lastIndex) {
	      rawTokens.push(tokenValue = text.slice(lastIndex, index));
	      tokens.push(JSON.stringify(tokenValue));
	    }
	    // tag token
	    var exp = parseFilters(match[1].trim());
	    tokens.push(("_s(" + exp + ")"));
	    rawTokens.push({ '@binding': exp });
	    lastIndex = index + match[0].length;
	  }
	  if (lastIndex < text.length) {
	    rawTokens.push(tokenValue = text.slice(lastIndex));
	    tokens.push(JSON.stringify(tokenValue));
	  }
	  return {
	    expression: tokens.join('+'),
	    tokens: rawTokens
	  }
	}

	/*  */

	function transformNode (el, options) {
	  var warn = options.warn || baseWarn;
	  var staticClass = getAndRemoveAttr(el, 'class');
	  if ("development" !== 'production' && staticClass) {
	    var res = parseText(staticClass, options.delimiters);
	    if (res) {
	      warn(
	        "class=\"" + staticClass + "\": " +
	        'Interpolation inside attributes has been removed. ' +
	        'Use v-bind or the colon shorthand instead. For example, ' +
	        'instead of <div class="{{ val }}">, use <div :class="val">.'
	      );
	    }
	  }
	  if (staticClass) {
	    el.staticClass = JSON.stringify(staticClass);
	  }
	  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
	  if (classBinding) {
	    el.classBinding = classBinding;
	  }
	}

	function genData (el) {
	  var data = '';
	  if (el.staticClass) {
	    data += "staticClass:" + (el.staticClass) + ",";
	  }
	  if (el.classBinding) {
	    data += "class:" + (el.classBinding) + ",";
	  }
	  return data
	}

	var klass$1 = {
	  staticKeys: ['staticClass'],
	  transformNode: transformNode,
	  genData: genData
	};

	/*  */

	function transformNode$1 (el, options) {
	  var warn = options.warn || baseWarn;
	  var staticStyle = getAndRemoveAttr(el, 'style');
	  if (staticStyle) {
	    /* istanbul ignore if */
	    {
	      var res = parseText(staticStyle, options.delimiters);
	      if (res) {
	        warn(
	          "style=\"" + staticStyle + "\": " +
	          'Interpolation inside attributes has been removed. ' +
	          'Use v-bind or the colon shorthand instead. For example, ' +
	          'instead of <div style="{{ val }}">, use <div :style="val">.'
	        );
	      }
	    }
	    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
	  }

	  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
	  if (styleBinding) {
	    el.styleBinding = styleBinding;
	  }
	}

	function genData$1 (el) {
	  var data = '';
	  if (el.staticStyle) {
	    data += "staticStyle:" + (el.staticStyle) + ",";
	  }
	  if (el.styleBinding) {
	    data += "style:(" + (el.styleBinding) + "),";
	  }
	  return data
	}

	var style$1 = {
	  staticKeys: ['staticStyle'],
	  transformNode: transformNode$1,
	  genData: genData$1
	};

	/*  */

	var decoder;

	var he = {
	  decode: function decode (html) {
	    decoder = decoder || document.createElement('div');
	    decoder.innerHTML = html;
	    return decoder.textContent
	  }
	};

	/*  */

	var isUnaryTag = makeMap(
	  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
	  'link,meta,param,source,track,wbr'
	);

	// Elements that you can, intentionally, leave open
	// (and which close themselves)
	var canBeLeftOpenTag = makeMap(
	  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
	);

	// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
	// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
	var isNonPhrasingTag = makeMap(
	  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
	  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
	  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
	  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
	  'title,tr,track'
	);

	/**
	 * Not type-checking this file because it's mostly vendor code.
	 */

	/*!
	 * HTML Parser By John Resig (ejohn.org)
	 * Modified by Juriy "kangax" Zaytsev
	 * Original code by Erik Arvidsson, Mozilla Public License
	 * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
	 */

	// Regular Expressions for parsing tags and attributes
	var attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
	// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
	// but for Vue templates we can enforce a simple charset
	var ncname = '[a-zA-Z_][\\w\\-\\.]*';
	var qnameCapture = "((?:" + ncname + "\\:)?" + ncname + ")";
	var startTagOpen = new RegExp(("^<" + qnameCapture));
	var startTagClose = /^\s*(\/?)>/;
	var endTag = new RegExp(("^<\\/" + qnameCapture + "[^>]*>"));
	var doctype = /^<!DOCTYPE [^>]+>/i;
	var comment = /^<!--/;
	var conditionalComment = /^<!\[/;

	var IS_REGEX_CAPTURING_BROKEN = false;
	'x'.replace(/x(.)?/g, function (m, g) {
	  IS_REGEX_CAPTURING_BROKEN = g === '';
	});

	// Special Elements (can contain anything)
	var isPlainTextElement = makeMap('script,style,textarea', true);
	var reCache = {};

	var decodingMap = {
	  '&lt;': '<',
	  '&gt;': '>',
	  '&quot;': '"',
	  '&amp;': '&',
	  '&#10;': '\n',
	  '&#9;': '\t'
	};
	var encodedAttr = /&(?:lt|gt|quot|amp);/g;
	var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;

	// #5992
	var isIgnoreNewlineTag = makeMap('pre,textarea', true);
	var shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\n'; };

	function decodeAttr (value, shouldDecodeNewlines) {
	  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
	  return value.replace(re, function (match) { return decodingMap[match]; })
	}

	function parseHTML (html, options) {
	  var stack = [];
	  var expectHTML = options.expectHTML;
	  var isUnaryTag$$1 = options.isUnaryTag || no;
	  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
	  var index = 0;
	  var last, lastTag;
	  while (html) {
	    last = html;
	    // Make sure we're not in a plaintext content element like script/style
	    if (!lastTag || !isPlainTextElement(lastTag)) {
	      var textEnd = html.indexOf('<');
	      if (textEnd === 0) {
	        // Comment:
	        if (comment.test(html)) {
	          var commentEnd = html.indexOf('-->');

	          if (commentEnd >= 0) {
	            if (options.shouldKeepComment) {
	              options.comment(html.substring(4, commentEnd));
	            }
	            advance(commentEnd + 3);
	            continue
	          }
	        }

	        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
	        if (conditionalComment.test(html)) {
	          var conditionalEnd = html.indexOf(']>');

	          if (conditionalEnd >= 0) {
	            advance(conditionalEnd + 2);
	            continue
	          }
	        }

	        // Doctype:
	        var doctypeMatch = html.match(doctype);
	        if (doctypeMatch) {
	          advance(doctypeMatch[0].length);
	          continue
	        }

	        // End tag:
	        var endTagMatch = html.match(endTag);
	        if (endTagMatch) {
	          var curIndex = index;
	          advance(endTagMatch[0].length);
	          parseEndTag(endTagMatch[1], curIndex, index);
	          continue
	        }

	        // Start tag:
	        var startTagMatch = parseStartTag();
	        if (startTagMatch) {
	          handleStartTag(startTagMatch);
	          if (shouldIgnoreFirstNewline(lastTag, html)) {
	            advance(1);
	          }
	          continue
	        }
	      }

	      var text = (void 0), rest = (void 0), next = (void 0);
	      if (textEnd >= 0) {
	        rest = html.slice(textEnd);
	        while (
	          !endTag.test(rest) &&
	          !startTagOpen.test(rest) &&
	          !comment.test(rest) &&
	          !conditionalComment.test(rest)
	        ) {
	          // < in plain text, be forgiving and treat it as text
	          next = rest.indexOf('<', 1);
	          if (next < 0) { break }
	          textEnd += next;
	          rest = html.slice(textEnd);
	        }
	        text = html.substring(0, textEnd);
	        advance(textEnd);
	      }

	      if (textEnd < 0) {
	        text = html;
	        html = '';
	      }

	      if (options.chars && text) {
	        options.chars(text);
	      }
	    } else {
	      var endTagLength = 0;
	      var stackedTag = lastTag.toLowerCase();
	      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
	      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
	        endTagLength = endTag.length;
	        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
	          text = text
	            .replace(/<!--([\s\S]*?)-->/g, '$1')
	            .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
	        }
	        if (shouldIgnoreFirstNewline(stackedTag, text)) {
	          text = text.slice(1);
	        }
	        if (options.chars) {
	          options.chars(text);
	        }
	        return ''
	      });
	      index += html.length - rest$1.length;
	      html = rest$1;
	      parseEndTag(stackedTag, index - endTagLength, index);
	    }

	    if (html === last) {
	      options.chars && options.chars(html);
	      if ("development" !== 'production' && !stack.length && options.warn) {
	        options.warn(("Mal-formatted tag at end of template: \"" + html + "\""));
	      }
	      break
	    }
	  }

	  // Clean up any remaining tags
	  parseEndTag();

	  function advance (n) {
	    index += n;
	    html = html.substring(n);
	  }

	  function parseStartTag () {
	    var start = html.match(startTagOpen);
	    if (start) {
	      var match = {
	        tagName: start[1],
	        attrs: [],
	        start: index
	      };
	      advance(start[0].length);
	      var end, attr;
	      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
	        advance(attr[0].length);
	        match.attrs.push(attr);
	      }
	      if (end) {
	        match.unarySlash = end[1];
	        advance(end[0].length);
	        match.end = index;
	        return match
	      }
	    }
	  }

	  function handleStartTag (match) {
	    var tagName = match.tagName;
	    var unarySlash = match.unarySlash;

	    if (expectHTML) {
	      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
	        parseEndTag(lastTag);
	      }
	      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
	        parseEndTag(tagName);
	      }
	    }

	    var unary = isUnaryTag$$1(tagName) || !!unarySlash;

	    var l = match.attrs.length;
	    var attrs = new Array(l);
	    for (var i = 0; i < l; i++) {
	      var args = match.attrs[i];
	      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
	      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
	        if (args[3] === '') { delete args[3]; }
	        if (args[4] === '') { delete args[4]; }
	        if (args[5] === '') { delete args[5]; }
	      }
	      var value = args[3] || args[4] || args[5] || '';
	      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'
	        ? options.shouldDecodeNewlinesForHref
	        : options.shouldDecodeNewlines;
	      attrs[i] = {
	        name: args[1],
	        value: decodeAttr(value, shouldDecodeNewlines)
	      };
	    }

	    if (!unary) {
	      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });
	      lastTag = tagName;
	    }

	    if (options.start) {
	      options.start(tagName, attrs, unary, match.start, match.end);
	    }
	  }

	  function parseEndTag (tagName, start, end) {
	    var pos, lowerCasedTagName;
	    if (start == null) { start = index; }
	    if (end == null) { end = index; }

	    if (tagName) {
	      lowerCasedTagName = tagName.toLowerCase();
	    }

	    // Find the closest opened tag of the same type
	    if (tagName) {
	      for (pos = stack.length - 1; pos >= 0; pos--) {
	        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
	          break
	        }
	      }
	    } else {
	      // If no tag name is provided, clean shop
	      pos = 0;
	    }

	    if (pos >= 0) {
	      // Close all the open elements, up the stack
	      for (var i = stack.length - 1; i >= pos; i--) {
	        if ("development" !== 'production' &&
	          (i > pos || !tagName) &&
	          options.warn
	        ) {
	          options.warn(
	            ("tag <" + (stack[i].tag) + "> has no matching end tag.")
	          );
	        }
	        if (options.end) {
	          options.end(stack[i].tag, start, end);
	        }
	      }

	      // Remove the open elements from the stack
	      stack.length = pos;
	      lastTag = pos && stack[pos - 1].tag;
	    } else if (lowerCasedTagName === 'br') {
	      if (options.start) {
	        options.start(tagName, [], true, start, end);
	      }
	    } else if (lowerCasedTagName === 'p') {
	      if (options.start) {
	        options.start(tagName, [], false, start, end);
	      }
	      if (options.end) {
	        options.end(tagName, start, end);
	      }
	    }
	  }
	}

	/*  */

	var onRE = /^@|^v-on:/;
	var dirRE = /^v-|^@|^:/;
	var forAliasRE = /(.*?)\s+(?:in|of)\s+(.*)/;
	var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
	var stripParensRE = /^\(|\)$/g;

	var argRE = /:(.*)$/;
	var bindRE = /^:|^v-bind:/;
	var modifierRE = /\.[^.]+/g;

	var decodeHTMLCached = cached(he.decode);

	// configurable state
	var warn$2;
	var delimiters;
	var transforms;
	var preTransforms;
	var postTransforms;
	var platformIsPreTag;
	var platformMustUseProp;
	var platformGetTagNamespace;



	function createASTElement (
	  tag,
	  attrs,
	  parent
	) {
	  return {
	    type: 1,
	    tag: tag,
	    attrsList: attrs,
	    attrsMap: makeAttrsMap(attrs),
	    parent: parent,
	    children: []
	  }
	}

	/**
	 * Convert HTML string to AST.
	 */
	function parse (
	  template,
	  options
	) {
	  warn$2 = options.warn || baseWarn;

	  platformIsPreTag = options.isPreTag || no;
	  platformMustUseProp = options.mustUseProp || no;
	  platformGetTagNamespace = options.getTagNamespace || no;

	  transforms = pluckModuleFunction(options.modules, 'transformNode');
	  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
	  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');

	  delimiters = options.delimiters;

	  var stack = [];
	  var preserveWhitespace = options.preserveWhitespace !== false;
	  var root;
	  var currentParent;
	  var inVPre = false;
	  var inPre = false;
	  var warned = false;

	  function warnOnce (msg) {
	    if (!warned) {
	      warned = true;
	      warn$2(msg);
	    }
	  }

	  function closeElement (element) {
	    // check pre state
	    if (element.pre) {
	      inVPre = false;
	    }
	    if (platformIsPreTag(element.tag)) {
	      inPre = false;
	    }
	    // apply post-transforms
	    for (var i = 0; i < postTransforms.length; i++) {
	      postTransforms[i](element, options);
	    }
	  }

	  parseHTML(template, {
	    warn: warn$2,
	    expectHTML: options.expectHTML,
	    isUnaryTag: options.isUnaryTag,
	    canBeLeftOpenTag: options.canBeLeftOpenTag,
	    shouldDecodeNewlines: options.shouldDecodeNewlines,
	    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
	    shouldKeepComment: options.comments,
	    start: function start (tag, attrs, unary) {
	      // check namespace.
	      // inherit parent ns if there is one
	      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);

	      // handle IE svg bug
	      /* istanbul ignore if */
	      if (isIE && ns === 'svg') {
	        attrs = guardIESVGBug(attrs);
	      }

	      var element = createASTElement(tag, attrs, currentParent);
	      if (ns) {
	        element.ns = ns;
	      }

	      if (isForbiddenTag(element) && !isServerRendering()) {
	        element.forbidden = true;
	        "development" !== 'production' && warn$2(
	          'Templates should only be responsible for mapping the state to the ' +
	          'UI. Avoid placing tags with side-effects in your templates, such as ' +
	          "<" + tag + ">" + ', as they will not be parsed.'
	        );
	      }

	      // apply pre-transforms
	      for (var i = 0; i < preTransforms.length; i++) {
	        element = preTransforms[i](element, options) || element;
	      }

	      if (!inVPre) {
	        processPre(element);
	        if (element.pre) {
	          inVPre = true;
	        }
	      }
	      if (platformIsPreTag(element.tag)) {
	        inPre = true;
	      }
	      if (inVPre) {
	        processRawAttrs(element);
	      } else if (!element.processed) {
	        // structural directives
	        processFor(element);
	        processIf(element);
	        processOnce(element);
	        // element-scope stuff
	        processElement(element, options);
	      }

	      function checkRootConstraints (el) {
	        {
	          if (el.tag === 'slot' || el.tag === 'template') {
	            warnOnce(
	              "Cannot use <" + (el.tag) + "> as component root element because it may " +
	              'contain multiple nodes.'
	            );
	          }
	          if (el.attrsMap.hasOwnProperty('v-for')) {
	            warnOnce(
	              'Cannot use v-for on stateful component root element because ' +
	              'it renders multiple elements.'
	            );
	          }
	        }
	      }

	      // tree management
	      if (!root) {
	        root = element;
	        checkRootConstraints(root);
	      } else if (!stack.length) {
	        // allow root elements with v-if, v-else-if and v-else
	        if (root.if && (element.elseif || element.else)) {
	          checkRootConstraints(element);
	          addIfCondition(root, {
	            exp: element.elseif,
	            block: element
	          });
	        } else {
	          warnOnce(
	            "Component template should contain exactly one root element. " +
	            "If you are using v-if on multiple elements, " +
	            "use v-else-if to chain them instead."
	          );
	        }
	      }
	      if (currentParent && !element.forbidden) {
	        if (element.elseif || element.else) {
	          processIfConditions(element, currentParent);
	        } else if (element.slotScope) { // scoped slot
	          currentParent.plain = false;
	          var name = element.slotTarget || '"default"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
	        } else {
	          currentParent.children.push(element);
	          element.parent = currentParent;
	        }
	      }
	      if (!unary) {
	        currentParent = element;
	        stack.push(element);
	      } else {
	        closeElement(element);
	      }
	    },

	    end: function end () {
	      // remove trailing whitespace
	      var element = stack[stack.length - 1];
	      var lastNode = element.children[element.children.length - 1];
	      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
	        element.children.pop();
	      }
	      // pop stack
	      stack.length -= 1;
	      currentParent = stack[stack.length - 1];
	      closeElement(element);
	    },

	    chars: function chars (text) {
	      if (!currentParent) {
	        {
	          if (text === template) {
	            warnOnce(
	              'Component template requires a root element, rather than just text.'
	            );
	          } else if ((text = text.trim())) {
	            warnOnce(
	              ("text \"" + text + "\" outside root element will be ignored.")
	            );
	          }
	        }
	        return
	      }
	      // IE textarea placeholder bug
	      /* istanbul ignore if */
	      if (isIE &&
	        currentParent.tag === 'textarea' &&
	        currentParent.attrsMap.placeholder === text
	      ) {
	        return
	      }
	      var children = currentParent.children;
	      text = inPre || text.trim()
	        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
	        // only preserve whitespace if its not right after a starting tag
	        : preserveWhitespace && children.length ? ' ' : '';
	      if (text) {
	        var res;
	        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {
	          children.push({
	            type: 2,
	            expression: res.expression,
	            tokens: res.tokens,
	            text: text
	          });
	        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
	          children.push({
	            type: 3,
	            text: text
	          });
	        }
	      }
	    },
	    comment: function comment (text) {
	      currentParent.children.push({
	        type: 3,
	        text: text,
	        isComment: true
	      });
	    }
	  });
	  return root
	}

	function processPre (el) {
	  if (getAndRemoveAttr(el, 'v-pre') != null) {
	    el.pre = true;
	  }
	}

	function processRawAttrs (el) {
	  var l = el.attrsList.length;
	  if (l) {
	    var attrs = el.attrs = new Array(l);
	    for (var i = 0; i < l; i++) {
	      attrs[i] = {
	        name: el.attrsList[i].name,
	        value: JSON.stringify(el.attrsList[i].value)
	      };
	    }
	  } else if (!el.pre) {
	    // non root node in pre blocks with no attributes
	    el.plain = true;
	  }
	}

	function processElement (element, options) {
	  processKey(element);

	  // determine whether this is a plain element after
	  // removing structural attributes
	  element.plain = !element.key && !element.attrsList.length;

	  processRef(element);
	  processSlot(element);
	  processComponent(element);
	  for (var i = 0; i < transforms.length; i++) {
	    element = transforms[i](element, options) || element;
	  }
	  processAttrs(element);
	}

	function processKey (el) {
	  var exp = getBindingAttr(el, 'key');
	  if (exp) {
	    if ("development" !== 'production' && el.tag === 'template') {
	      warn$2("<template> cannot be keyed. Place the key on real elements instead.");
	    }
	    el.key = exp;
	  }
	}

	function processRef (el) {
	  var ref = getBindingAttr(el, 'ref');
	  if (ref) {
	    el.ref = ref;
	    el.refInFor = checkInFor(el);
	  }
	}

	function processFor (el) {
	  var exp;
	  if ((exp = getAndRemoveAttr(el, 'v-for'))) {
	    var res = parseFor(exp);
	    if (res) {
	      extend(el, res);
	    } else {
	      warn$2(
	        ("Invalid v-for expression: " + exp)
	      );
	    }
	  }
	}

	function parseFor (exp) {
	  var inMatch = exp.match(forAliasRE);
	  if (!inMatch) { return }
	  var res = {};
	  res.for = inMatch[2].trim();
	  var alias = inMatch[1].trim().replace(stripParensRE, '');
	  var iteratorMatch = alias.match(forIteratorRE);
	  if (iteratorMatch) {
	    res.alias = alias.replace(forIteratorRE, '');
	    res.iterator1 = iteratorMatch[1].trim();
	    if (iteratorMatch[2]) {
	      res.iterator2 = iteratorMatch[2].trim();
	    }
	  } else {
	    res.alias = alias;
	  }
	  return res
	}

	function processIf (el) {
	  var exp = getAndRemoveAttr(el, 'v-if');
	  if (exp) {
	    el.if = exp;
	    addIfCondition(el, {
	      exp: exp,
	      block: el
	    });
	  } else {
	    if (getAndRemoveAttr(el, 'v-else') != null) {
	      el.else = true;
	    }
	    var elseif = getAndRemoveAttr(el, 'v-else-if');
	    if (elseif) {
	      el.elseif = elseif;
	    }
	  }
	}

	function processIfConditions (el, parent) {
	  var prev = findPrevElement(parent.children);
	  if (prev && prev.if) {
	    addIfCondition(prev, {
	      exp: el.elseif,
	      block: el
	    });
	  } else {
	    warn$2(
	      "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
	      "used on element <" + (el.tag) + "> without corresponding v-if."
	    );
	  }
	}

	function findPrevElement (children) {
	  var i = children.length;
	  while (i--) {
	    if (children[i].type === 1) {
	      return children[i]
	    } else {
	      if ("development" !== 'production' && children[i].text !== ' ') {
	        warn$2(
	          "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
	          "will be ignored."
	        );
	      }
	      children.pop();
	    }
	  }
	}

	function addIfCondition (el, condition) {
	  if (!el.ifConditions) {
	    el.ifConditions = [];
	  }
	  el.ifConditions.push(condition);
	}

	function processOnce (el) {
	  var once$$1 = getAndRemoveAttr(el, 'v-once');
	  if (once$$1 != null) {
	    el.once = true;
	  }
	}

	function processSlot (el) {
	  if (el.tag === 'slot') {
	    el.slotName = getBindingAttr(el, 'name');
	    if ("development" !== 'production' && el.key) {
	      warn$2(
	        "`key` does not work on <slot> because slots are abstract outlets " +
	        "and can possibly expand into multiple elements. " +
	        "Use the key on a wrapping element instead."
	      );
	    }
	  } else {
	    var slotScope;
	    if (el.tag === 'template') {
	      slotScope = getAndRemoveAttr(el, 'scope');
	      /* istanbul ignore if */
	      if ("development" !== 'production' && slotScope) {
	        warn$2(
	          "the \"scope\" attribute for scoped slots have been deprecated and " +
	          "replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute " +
	          "can also be used on plain elements in addition to <template> to " +
	          "denote scoped slots.",
	          true
	        );
	      }
	      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');
	    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {
	      /* istanbul ignore if */
	      if ("development" !== 'production' && el.attrsMap['v-for']) {
	        warn$2(
	          "Ambiguous combined usage of slot-scope and v-for on <" + (el.tag) + "> " +
	          "(v-for takes higher priority). Use a wrapper <template> for the " +
	          "scoped slot to make it clearer.",
	          true
	        );
	      }
	      el.slotScope = slotScope;
	    }
	    var slotTarget = getBindingAttr(el, 'slot');
	    if (slotTarget) {
	      el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
	      // preserve slot as an attribute for native shadow DOM compat
	      // only for non-scoped slots.
	      if (el.tag !== 'template' && !el.slotScope) {
	        addAttr(el, 'slot', slotTarget);
	      }
	    }
	  }
	}

	function processComponent (el) {
	  var binding;
	  if ((binding = getBindingAttr(el, 'is'))) {
	    el.component = binding;
	  }
	  if (getAndRemoveAttr(el, 'inline-template') != null) {
	    el.inlineTemplate = true;
	  }
	}

	function processAttrs (el) {
	  var list = el.attrsList;
	  var i, l, name, rawName, value, modifiers, isProp;
	  for (i = 0, l = list.length; i < l; i++) {
	    name = rawName = list[i].name;
	    value = list[i].value;
	    if (dirRE.test(name)) {
	      // mark element as dynamic
	      el.hasBindings = true;
	      // modifiers
	      modifiers = parseModifiers(name);
	      if (modifiers) {
	        name = name.replace(modifierRE, '');
	      }
	      if (bindRE.test(name)) { // v-bind
	        name = name.replace(bindRE, '');
	        value = parseFilters(value);
	        isProp = false;
	        if (modifiers) {
	          if (modifiers.prop) {
	            isProp = true;
	            name = camelize(name);
	            if (name === 'innerHtml') { name = 'innerHTML'; }
	          }
	          if (modifiers.camel) {
	            name = camelize(name);
	          }
	          if (modifiers.sync) {
	            addHandler(
	              el,
	              ("update:" + (camelize(name))),
	              genAssignmentCode(value, "$event")
	            );
	          }
	        }
	        if (isProp || (
	          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)
	        )) {
	          addProp(el, name, value);
	        } else {
	          addAttr(el, name, value);
	        }
	      } else if (onRE.test(name)) { // v-on
	        name = name.replace(onRE, '');
	        addHandler(el, name, value, modifiers, false, warn$2);
	      } else { // normal directives
	        name = name.replace(dirRE, '');
	        // parse arg
	        var argMatch = name.match(argRE);
	        var arg = argMatch && argMatch[1];
	        if (arg) {
	          name = name.slice(0, -(arg.length + 1));
	        }
	        addDirective(el, name, rawName, value, arg, modifiers);
	        if ("development" !== 'production' && name === 'model') {
	          checkForAliasModel(el, value);
	        }
	      }
	    } else {
	      // literal attribute
	      {
	        var res = parseText(value, delimiters);
	        if (res) {
	          warn$2(
	            name + "=\"" + value + "\": " +
	            'Interpolation inside attributes has been removed. ' +
	            'Use v-bind or the colon shorthand instead. For example, ' +
	            'instead of <div id="{{ val }}">, use <div :id="val">.'
	          );
	        }
	      }
	      addAttr(el, name, JSON.stringify(value));
	      // #6887 firefox doesn't update muted state if set via attribute
	      // even immediately after element creation
	      if (!el.component &&
	          name === 'muted' &&
	          platformMustUseProp(el.tag, el.attrsMap.type, name)) {
	        addProp(el, name, 'true');
	      }
	    }
	  }
	}

	function checkInFor (el) {
	  var parent = el;
	  while (parent) {
	    if (parent.for !== undefined) {
	      return true
	    }
	    parent = parent.parent;
	  }
	  return false
	}

	function parseModifiers (name) {
	  var match = name.match(modifierRE);
	  if (match) {
	    var ret = {};
	    match.forEach(function (m) { ret[m.slice(1)] = true; });
	    return ret
	  }
	}

	function makeAttrsMap (attrs) {
	  var map = {};
	  for (var i = 0, l = attrs.length; i < l; i++) {
	    if (
	      "development" !== 'production' &&
	      map[attrs[i].name] && !isIE && !isEdge
	    ) {
	      warn$2('duplicate attribute: ' + attrs[i].name);
	    }
	    map[attrs[i].name] = attrs[i].value;
	  }
	  return map
	}

	// for script (e.g. type="x/template") or style, do not decode content
	function isTextTag (el) {
	  return el.tag === 'script' || el.tag === 'style'
	}

	function isForbiddenTag (el) {
	  return (
	    el.tag === 'style' ||
	    (el.tag === 'script' && (
	      !el.attrsMap.type ||
	      el.attrsMap.type === 'text/javascript'
	    ))
	  )
	}

	var ieNSBug = /^xmlns:NS\d+/;
	var ieNSPrefix = /^NS\d+:/;

	/* istanbul ignore next */
	function guardIESVGBug (attrs) {
	  var res = [];
	  for (var i = 0; i < attrs.length; i++) {
	    var attr = attrs[i];
	    if (!ieNSBug.test(attr.name)) {
	      attr.name = attr.name.replace(ieNSPrefix, '');
	      res.push(attr);
	    }
	  }
	  return res
	}

	function checkForAliasModel (el, value) {
	  var _el = el;
	  while (_el) {
	    if (_el.for && _el.alias === value) {
	      warn$2(
	        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
	        "You are binding v-model directly to a v-for iteration alias. " +
	        "This will not be able to modify the v-for source array because " +
	        "writing to the alias is like modifying a function local variable. " +
	        "Consider using an array of objects and use v-model on an object property instead."
	      );
	    }
	    _el = _el.parent;
	  }
	}

	/*  */

	/**
	 * Expand input[v-model] with dyanmic type bindings into v-if-else chains
	 * Turn this:
	 *   <input v-model="data[type]" :type="type">
	 * into this:
	 *   <input v-if="type === 'checkbox'" type="checkbox" v-model="data[type]">
	 *   <input v-else-if="type === 'radio'" type="radio" v-model="data[type]">
	 *   <input v-else :type="type" v-model="data[type]">
	 */

	function preTransformNode (el, options) {
	  if (el.tag === 'input') {
	    var map = el.attrsMap;
	    if (map['v-model'] && (map['v-bind:type'] || map[':type'])) {
	      var typeBinding = getBindingAttr(el, 'type');
	      var ifCondition = getAndRemoveAttr(el, 'v-if', true);
	      var ifConditionExtra = ifCondition ? ("&&(" + ifCondition + ")") : "";
	      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;
	      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);
	      // 1. checkbox
	      var branch0 = cloneASTElement(el);
	      // process for on the main node
	      processFor(branch0);
	      addRawAttr(branch0, 'type', 'checkbox');
	      processElement(branch0, options);
	      branch0.processed = true; // prevent it from double-processed
	      branch0.if = "(" + typeBinding + ")==='checkbox'" + ifConditionExtra;
	      addIfCondition(branch0, {
	        exp: branch0.if,
	        block: branch0
	      });
	      // 2. add radio else-if condition
	      var branch1 = cloneASTElement(el);
	      getAndRemoveAttr(branch1, 'v-for', true);
	      addRawAttr(branch1, 'type', 'radio');
	      processElement(branch1, options);
	      addIfCondition(branch0, {
	        exp: "(" + typeBinding + ")==='radio'" + ifConditionExtra,
	        block: branch1
	      });
	      // 3. other
	      var branch2 = cloneASTElement(el);
	      getAndRemoveAttr(branch2, 'v-for', true);
	      addRawAttr(branch2, ':type', typeBinding);
	      processElement(branch2, options);
	      addIfCondition(branch0, {
	        exp: ifCondition,
	        block: branch2
	      });

	      if (hasElse) {
	        branch0.else = true;
	      } else if (elseIfCondition) {
	        branch0.elseif = elseIfCondition;
	      }

	      return branch0
	    }
	  }
	}

	function cloneASTElement (el) {
	  return createASTElement(el.tag, el.attrsList.slice(), el.parent)
	}

	var model$2 = {
	  preTransformNode: preTransformNode
	};

	var modules$1 = [
	  klass$1,
	  style$1,
	  model$2
	];

	/*  */

	function text (el, dir) {
	  if (dir.value) {
	    addProp(el, 'textContent', ("_s(" + (dir.value) + ")"));
	  }
	}

	/*  */

	function html (el, dir) {
	  if (dir.value) {
	    addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"));
	  }
	}

	var directives$1 = {
	  model: model,
	  text: text,
	  html: html
	};

	/*  */

	var baseOptions = {
	  expectHTML: true,
	  modules: modules$1,
	  directives: directives$1,
	  isPreTag: isPreTag,
	  isUnaryTag: isUnaryTag,
	  mustUseProp: mustUseProp,
	  canBeLeftOpenTag: canBeLeftOpenTag,
	  isReservedTag: isReservedTag,
	  getTagNamespace: getTagNamespace,
	  staticKeys: genStaticKeys(modules$1)
	};

	/*  */

	var isStaticKey;
	var isPlatformReservedTag;

	var genStaticKeysCached = cached(genStaticKeys$1);

	/**
	 * Goal of the optimizer: walk the generated template AST tree
	 * and detect sub-trees that are purely static, i.e. parts of
	 * the DOM that never needs to change.
	 *
	 * Once we detect these sub-trees, we can:
	 *
	 * 1. Hoist them into constants, so that we no longer need to
	 *    create fresh nodes for them on each re-render;
	 * 2. Completely skip them in the patching process.
	 */
	function optimize (root, options) {
	  if (!root) { return }
	  isStaticKey = genStaticKeysCached(options.staticKeys || '');
	  isPlatformReservedTag = options.isReservedTag || no;
	  // first pass: mark all non-static nodes.
	  markStatic$1(root);
	  // second pass: mark static roots.
	  markStaticRoots(root, false);
	}

	function genStaticKeys$1 (keys) {
	  return makeMap(
	    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +
	    (keys ? ',' + keys : '')
	  )
	}

	function markStatic$1 (node) {
	  node.static = isStatic(node);
	  if (node.type === 1) {
	    // do not make component slot content static. this avoids
	    // 1. components not able to mutate slot nodes
	    // 2. static slot content fails for hot-reloading
	    if (
	      !isPlatformReservedTag(node.tag) &&
	      node.tag !== 'slot' &&
	      node.attrsMap['inline-template'] == null
	    ) {
	      return
	    }
	    for (var i = 0, l = node.children.length; i < l; i++) {
	      var child = node.children[i];
	      markStatic$1(child);
	      if (!child.static) {
	        node.static = false;
	      }
	    }
	    if (node.ifConditions) {
	      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
	        var block = node.ifConditions[i$1].block;
	        markStatic$1(block);
	        if (!block.static) {
	          node.static = false;
	        }
	      }
	    }
	  }
	}

	function markStaticRoots (node, isInFor) {
	  if (node.type === 1) {
	    if (node.static || node.once) {
	      node.staticInFor = isInFor;
	    }
	    // For a node to qualify as a static root, it should have children that
	    // are not just static text. Otherwise the cost of hoisting out will
	    // outweigh the benefits and it's better off to just always render it fresh.
	    if (node.static && node.children.length && !(
	      node.children.length === 1 &&
	      node.children[0].type === 3
	    )) {
	      node.staticRoot = true;
	      return
	    } else {
	      node.staticRoot = false;
	    }
	    if (node.children) {
	      for (var i = 0, l = node.children.length; i < l; i++) {
	        markStaticRoots(node.children[i], isInFor || !!node.for);
	      }
	    }
	    if (node.ifConditions) {
	      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
	        markStaticRoots(node.ifConditions[i$1].block, isInFor);
	      }
	    }
	  }
	}

	function isStatic (node) {
	  if (node.type === 2) { // expression
	    return false
	  }
	  if (node.type === 3) { // text
	    return true
	  }
	  return !!(node.pre || (
	    !node.hasBindings && // no dynamic bindings
	    !node.if && !node.for && // not v-if or v-for or v-else
	    !isBuiltInTag(node.tag) && // not a built-in
	    isPlatformReservedTag(node.tag) && // not a component
	    !isDirectChildOfTemplateFor(node) &&
	    Object.keys(node).every(isStaticKey)
	  ))
	}

	function isDirectChildOfTemplateFor (node) {
	  while (node.parent) {
	    node = node.parent;
	    if (node.tag !== 'template') {
	      return false
	    }
	    if (node.for) {
	      return true
	    }
	  }
	  return false
	}

	/*  */

	var fnExpRE = /^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
	var simplePathRE = /^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/;

	// keyCode aliases
	var keyCodes = {
	  esc: 27,
	  tab: 9,
	  enter: 13,
	  space: 32,
	  up: 38,
	  left: 37,
	  right: 39,
	  down: 40,
	  'delete': [8, 46]
	};

	// #4868: modifiers that prevent the execution of the listener
	// need to explicitly return null so that we can determine whether to remove
	// the listener for .once
	var genGuard = function (condition) { return ("if(" + condition + ")return null;"); };

	var modifierCode = {
	  stop: '$event.stopPropagation();',
	  prevent: '$event.preventDefault();',
	  self: genGuard("$event.target !== $event.currentTarget"),
	  ctrl: genGuard("!$event.ctrlKey"),
	  shift: genGuard("!$event.shiftKey"),
	  alt: genGuard("!$event.altKey"),
	  meta: genGuard("!$event.metaKey"),
	  left: genGuard("'button' in $event && $event.button !== 0"),
	  middle: genGuard("'button' in $event && $event.button !== 1"),
	  right: genGuard("'button' in $event && $event.button !== 2")
	};

	function genHandlers (
	  events,
	  isNative,
	  warn
	) {
	  var res = isNative ? 'nativeOn:{' : 'on:{';
	  for (var name in events) {
	    res += "\"" + name + "\":" + (genHandler(name, events[name])) + ",";
	  }
	  return res.slice(0, -1) + '}'
	}

	function genHandler (
	  name,
	  handler
	) {
	  if (!handler) {
	    return 'function(){}'
	  }

	  if (Array.isArray(handler)) {
	    return ("[" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + "]")
	  }

	  var isMethodPath = simplePathRE.test(handler.value);
	  var isFunctionExpression = fnExpRE.test(handler.value);

	  if (!handler.modifiers) {
	    if (isMethodPath || isFunctionExpression) {
	      return handler.value
	    }
	    /* istanbul ignore if */
	    return ("function($event){" + (handler.value) + "}") // inline statement
	  } else {
	    var code = '';
	    var genModifierCode = '';
	    var keys = [];
	    for (var key in handler.modifiers) {
	      if (modifierCode[key]) {
	        genModifierCode += modifierCode[key];
	        // left/right
	        if (keyCodes[key]) {
	          keys.push(key);
	        }
	      } else if (key === 'exact') {
	        var modifiers = (handler.modifiers);
	        genModifierCode += genGuard(
	          ['ctrl', 'shift', 'alt', 'meta']
	            .filter(function (keyModifier) { return !modifiers[keyModifier]; })
	            .map(function (keyModifier) { return ("$event." + keyModifier + "Key"); })
	            .join('||')
	        );
	      } else {
	        keys.push(key);
	      }
	    }
	    if (keys.length) {
	      code += genKeyFilter(keys);
	    }
	    // Make sure modifiers like prevent and stop get executed after key filtering
	    if (genModifierCode) {
	      code += genModifierCode;
	    }
	    var handlerCode = isMethodPath
	      ? handler.value + '($event)'
	      : isFunctionExpression
	        ? ("(" + (handler.value) + ")($event)")
	        : handler.value;
	    /* istanbul ignore if */
	    return ("function($event){" + code + handlerCode + "}")
	  }
	}

	function genKeyFilter (keys) {
	  return ("if(!('button' in $event)&&" + (keys.map(genFilterCode).join('&&')) + ")return null;")
	}

	function genFilterCode (key) {
	  var keyVal = parseInt(key, 10);
	  if (keyVal) {
	    return ("$event.keyCode!==" + keyVal)
	  }
	  var code = keyCodes[key];
	  return (
	    "_k($event.keyCode," +
	    (JSON.stringify(key)) + "," +
	    (JSON.stringify(code)) + "," +
	    "$event.key)"
	  )
	}

	/*  */

	function on (el, dir) {
	  if ("development" !== 'production' && dir.modifiers) {
	    warn("v-on without argument does not support modifiers.");
	  }
	  el.wrapListeners = function (code) { return ("_g(" + code + "," + (dir.value) + ")"); };
	}

	/*  */

	function bind$1 (el, dir) {
	  el.wrapData = function (code) {
	    return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")")
	  };
	}

	/*  */

	var baseDirectives = {
	  on: on,
	  bind: bind$1,
	  cloak: noop
	};

	/*  */

	var CodegenState = function CodegenState (options) {
	  this.options = options;
	  this.warn = options.warn || baseWarn;
	  this.transforms = pluckModuleFunction(options.modules, 'transformCode');
	  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
	  this.directives = extend(extend({}, baseDirectives), options.directives);
	  var isReservedTag = options.isReservedTag || no;
	  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };
	  this.onceId = 0;
	  this.staticRenderFns = [];
	};



	function generate (
	  ast,
	  options
	) {
	  var state = new CodegenState(options);
	  var code = ast ? genElement(ast, state) : '_c("div")';
	  return {
	    render: ("with(this){return " + code + "}"),
	    staticRenderFns: state.staticRenderFns
	  }
	}

	function genElement (el, state) {
	  if (el.staticRoot && !el.staticProcessed) {
	    return genStatic(el, state)
	  } else if (el.once && !el.onceProcessed) {
	    return genOnce(el, state)
	  } else if (el.for && !el.forProcessed) {
	    return genFor(el, state)
	  } else if (el.if && !el.ifProcessed) {
	    return genIf(el, state)
	  } else if (el.tag === 'template' && !el.slotTarget) {
	    return genChildren(el, state) || 'void 0'
	  } else if (el.tag === 'slot') {
	    return genSlot(el, state)
	  } else {
	    // component or element
	    var code;
	    if (el.component) {
	      code = genComponent(el.component, el, state);
	    } else {
	      var data = el.plain ? undefined : genData$2(el, state);

	      var children = el.inlineTemplate ? null : genChildren(el, state, true);
	      code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
	    }
	    // module transforms
	    for (var i = 0; i < state.transforms.length; i++) {
	      code = state.transforms[i](el, code);
	    }
	    return code
	  }
	}

	// hoist static sub-trees out
	function genStatic (el, state) {
	  el.staticProcessed = true;
	  state.staticRenderFns.push(("with(this){return " + (genElement(el, state)) + "}"));
	  return ("_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
	}

	// v-once
	function genOnce (el, state) {
	  el.onceProcessed = true;
	  if (el.if && !el.ifProcessed) {
	    return genIf(el, state)
	  } else if (el.staticInFor) {
	    var key = '';
	    var parent = el.parent;
	    while (parent) {
	      if (parent.for) {
	        key = parent.key;
	        break
	      }
	      parent = parent.parent;
	    }
	    if (!key) {
	      "development" !== 'production' && state.warn(
	        "v-once can only be used inside v-for that is keyed. "
	      );
	      return genElement(el, state)
	    }
	    return ("_o(" + (genElement(el, state)) + "," + (state.onceId++) + "," + key + ")")
	  } else {
	    return genStatic(el, state)
	  }
	}

	function genIf (
	  el,
	  state,
	  altGen,
	  altEmpty
	) {
	  el.ifProcessed = true; // avoid recursion
	  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)
	}

	function genIfConditions (
	  conditions,
	  state,
	  altGen,
	  altEmpty
	) {
	  if (!conditions.length) {
	    return altEmpty || '_e()'
	  }

	  var condition = conditions.shift();
	  if (condition.exp) {
	    return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions, state, altGen, altEmpty)))
	  } else {
	    return ("" + (genTernaryExp(condition.block)))
	  }

	  // v-if with v-once should generate code like (a)?_m(0):_m(1)
	  function genTernaryExp (el) {
	    return altGen
	      ? altGen(el, state)
	      : el.once
	        ? genOnce(el, state)
	        : genElement(el, state)
	  }
	}

	function genFor (
	  el,
	  state,
	  altGen,
	  altHelper
	) {
	  var exp = el.for;
	  var alias = el.alias;
	  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
	  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';

	  if ("development" !== 'production' &&
	    state.maybeComponent(el) &&
	    el.tag !== 'slot' &&
	    el.tag !== 'template' &&
	    !el.key
	  ) {
	    state.warn(
	      "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
	      "v-for should have explicit keys. " +
	      "See https://vuejs.org/guide/list.html#key for more info.",
	      true /* tip */
	    );
	  }

	  el.forProcessed = true; // avoid recursion
	  return (altHelper || '_l') + "((" + exp + ")," +
	    "function(" + alias + iterator1 + iterator2 + "){" +
	      "return " + ((altGen || genElement)(el, state)) +
	    '})'
	}

	function genData$2 (el, state) {
	  var data = '{';

	  // directives first.
	  // directives may mutate the el's other properties before they are generated.
	  var dirs = genDirectives(el, state);
	  if (dirs) { data += dirs + ','; }

	  // key
	  if (el.key) {
	    data += "key:" + (el.key) + ",";
	  }
	  // ref
	  if (el.ref) {
	    data += "ref:" + (el.ref) + ",";
	  }
	  if (el.refInFor) {
	    data += "refInFor:true,";
	  }
	  // pre
	  if (el.pre) {
	    data += "pre:true,";
	  }
	  // record original tag name for components using "is" attribute
	  if (el.component) {
	    data += "tag:\"" + (el.tag) + "\",";
	  }
	  // module data generation functions
	  for (var i = 0; i < state.dataGenFns.length; i++) {
	    data += state.dataGenFns[i](el);
	  }
	  // attributes
	  if (el.attrs) {
	    data += "attrs:{" + (genProps(el.attrs)) + "},";
	  }
	  // DOM props
	  if (el.props) {
	    data += "domProps:{" + (genProps(el.props)) + "},";
	  }
	  // event handlers
	  if (el.events) {
	    data += (genHandlers(el.events, false, state.warn)) + ",";
	  }
	  if (el.nativeEvents) {
	    data += (genHandlers(el.nativeEvents, true, state.warn)) + ",";
	  }
	  // slot target
	  // only for non-scoped slots
	  if (el.slotTarget && !el.slotScope) {
	    data += "slot:" + (el.slotTarget) + ",";
	  }
	  // scoped slots
	  if (el.scopedSlots) {
	    data += (genScopedSlots(el.scopedSlots, state)) + ",";
	  }
	  // component v-model
	  if (el.model) {
	    data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
	  }
	  // inline-template
	  if (el.inlineTemplate) {
	    var inlineTemplate = genInlineTemplate(el, state);
	    if (inlineTemplate) {
	      data += inlineTemplate + ",";
	    }
	  }
	  data = data.replace(/,$/, '') + '}';
	  // v-bind data wrap
	  if (el.wrapData) {
	    data = el.wrapData(data);
	  }
	  // v-on data wrap
	  if (el.wrapListeners) {
	    data = el.wrapListeners(data);
	  }
	  return data
	}

	function genDirectives (el, state) {
	  var dirs = el.directives;
	  if (!dirs) { return }
	  var res = 'directives:[';
	  var hasRuntime = false;
	  var i, l, dir, needRuntime;
	  for (i = 0, l = dirs.length; i < l; i++) {
	    dir = dirs[i];
	    needRuntime = true;
	    var gen = state.directives[dir.name];
	    if (gen) {
	      // compile-time directive that manipulates AST.
	      // returns true if it also needs a runtime counterpart.
	      needRuntime = !!gen(el, dir, state.warn);
	    }
	    if (needRuntime) {
	      hasRuntime = true;
	      res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:\"" + (dir.arg) + "\"") : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
	    }
	  }
	  if (hasRuntime) {
	    return res.slice(0, -1) + ']'
	  }
	}

	function genInlineTemplate (el, state) {
	  var ast = el.children[0];
	  if ("development" !== 'production' && (
	    el.children.length !== 1 || ast.type !== 1
	  )) {
	    state.warn('Inline-template components must have exactly one child element.');
	  }
	  if (ast.type === 1) {
	    var inlineRenderFns = generate(ast, state.options);
	    return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) { return ("function(){" + code + "}"); }).join(',')) + "]}")
	  }
	}

	function genScopedSlots (
	  slots,
	  state
	) {
	  return ("scopedSlots:_u([" + (Object.keys(slots).map(function (key) {
	      return genScopedSlot(key, slots[key], state)
	    }).join(',')) + "])")
	}

	function genScopedSlot (
	  key,
	  el,
	  state
	) {
	  if (el.for && !el.forProcessed) {
	    return genForScopedSlot(key, el, state)
	  }
	  var fn = "function(" + (String(el.slotScope)) + "){" +
	    "return " + (el.tag === 'template'
	      ? el.if
	        ? ((el.if) + "?" + (genChildren(el, state) || 'undefined') + ":undefined")
	        : genChildren(el, state) || 'undefined'
	      : genElement(el, state)) + "}";
	  return ("{key:" + key + ",fn:" + fn + "}")
	}

	function genForScopedSlot (
	  key,
	  el,
	  state
	) {
	  var exp = el.for;
	  var alias = el.alias;
	  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
	  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';
	  el.forProcessed = true; // avoid recursion
	  return "_l((" + exp + ")," +
	    "function(" + alias + iterator1 + iterator2 + "){" +
	      "return " + (genScopedSlot(key, el, state)) +
	    '})'
	}

	function genChildren (
	  el,
	  state,
	  checkSkip,
	  altGenElement,
	  altGenNode
	) {
	  var children = el.children;
	  if (children.length) {
	    var el$1 = children[0];
	    // optimize single v-for
	    if (children.length === 1 &&
	      el$1.for &&
	      el$1.tag !== 'template' &&
	      el$1.tag !== 'slot'
	    ) {
	      return (altGenElement || genElement)(el$1, state)
	    }
	    var normalizationType = checkSkip
	      ? getNormalizationType(children, state.maybeComponent)
	      : 0;
	    var gen = altGenNode || genNode;
	    return ("[" + (children.map(function (c) { return gen(c, state); }).join(',')) + "]" + (normalizationType ? ("," + normalizationType) : ''))
	  }
	}

	// determine the normalization needed for the children array.
	// 0: no normalization needed
	// 1: simple normalization needed (possible 1-level deep nested array)
	// 2: full normalization needed
	function getNormalizationType (
	  children,
	  maybeComponent
	) {
	  var res = 0;
	  for (var i = 0; i < children.length; i++) {
	    var el = children[i];
	    if (el.type !== 1) {
	      continue
	    }
	    if (needsNormalization(el) ||
	        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {
	      res = 2;
	      break
	    }
	    if (maybeComponent(el) ||
	        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {
	      res = 1;
	    }
	  }
	  return res
	}

	function needsNormalization (el) {
	  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
	}

	function genNode (node, state) {
	  if (node.type === 1) {
	    return genElement(node, state)
	  } if (node.type === 3 && node.isComment) {
	    return genComment(node)
	  } else {
	    return genText(node)
	  }
	}

	function genText (text) {
	  return ("_v(" + (text.type === 2
	    ? text.expression // no need for () because already wrapped in _s()
	    : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
	}

	function genComment (comment) {
	  return ("_e(" + (JSON.stringify(comment.text)) + ")")
	}

	function genSlot (el, state) {
	  var slotName = el.slotName || '"default"';
	  var children = genChildren(el, state);
	  var res = "_t(" + slotName + (children ? ("," + children) : '');
	  var attrs = el.attrs && ("{" + (el.attrs.map(function (a) { return ((camelize(a.name)) + ":" + (a.value)); }).join(',')) + "}");
	  var bind$$1 = el.attrsMap['v-bind'];
	  if ((attrs || bind$$1) && !children) {
	    res += ",null";
	  }
	  if (attrs) {
	    res += "," + attrs;
	  }
	  if (bind$$1) {
	    res += (attrs ? '' : ',null') + "," + bind$$1;
	  }
	  return res + ')'
	}

	// componentName is el.component, take it as argument to shun flow's pessimistic refinement
	function genComponent (
	  componentName,
	  el,
	  state
	) {
	  var children = el.inlineTemplate ? null : genChildren(el, state, true);
	  return ("_c(" + componentName + "," + (genData$2(el, state)) + (children ? ("," + children) : '') + ")")
	}

	function genProps (props) {
	  var res = '';
	  for (var i = 0; i < props.length; i++) {
	    var prop = props[i];
	    /* istanbul ignore if */
	    {
	      res += "\"" + (prop.name) + "\":" + (transformSpecialNewlines(prop.value)) + ",";
	    }
	  }
	  return res.slice(0, -1)
	}

	// #3895, #4268
	function transformSpecialNewlines (text) {
	  return text
	    .replace(/\u2028/g, '\\u2028')
	    .replace(/\u2029/g, '\\u2029')
	}

	/*  */

	// these keywords should not appear inside expressions, but operators like
	// typeof, instanceof and in are allowed
	var prohibitedKeywordRE = new RegExp('\\b' + (
	  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
	  'super,throw,while,yield,delete,export,import,return,switch,default,' +
	  'extends,finally,continue,debugger,function,arguments'
	).split(',').join('\\b|\\b') + '\\b');

	// these unary operators should not be used as property/method names
	var unaryOperatorsRE = new RegExp('\\b' + (
	  'delete,typeof,void'
	).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

	// strip strings in expressions
	var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

	// detect problematic expressions in a template
	function detectErrors (ast) {
	  var errors = [];
	  if (ast) {
	    checkNode(ast, errors);
	  }
	  return errors
	}

	function checkNode (node, errors) {
	  if (node.type === 1) {
	    for (var name in node.attrsMap) {
	      if (dirRE.test(name)) {
	        var value = node.attrsMap[name];
	        if (value) {
	          if (name === 'v-for') {
	            checkFor(node, ("v-for=\"" + value + "\""), errors);
	          } else if (onRE.test(name)) {
	            checkEvent(value, (name + "=\"" + value + "\""), errors);
	          } else {
	            checkExpression(value, (name + "=\"" + value + "\""), errors);
	          }
	        }
	      }
	    }
	    if (node.children) {
	      for (var i = 0; i < node.children.length; i++) {
	        checkNode(node.children[i], errors);
	      }
	    }
	  } else if (node.type === 2) {
	    checkExpression(node.expression, node.text, errors);
	  }
	}

	function checkEvent (exp, text, errors) {
	  var stipped = exp.replace(stripStringRE, '');
	  var keywordMatch = stipped.match(unaryOperatorsRE);
	  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
	    errors.push(
	      "avoid using JavaScript unary operator as property name: " +
	      "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
	    );
	  }
	  checkExpression(exp, text, errors);
	}

	function checkFor (node, text, errors) {
	  checkExpression(node.for || '', text, errors);
	  checkIdentifier(node.alias, 'v-for alias', text, errors);
	  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
	  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
	}

	function checkIdentifier (
	  ident,
	  type,
	  text,
	  errors
	) {
	  if (typeof ident === 'string') {
	    try {
	      new Function(("var " + ident + "=_"));
	    } catch (e) {
	      errors.push(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())));
	    }
	  }
	}

	function checkExpression (exp, text, errors) {
	  try {
	    new Function(("return " + exp));
	  } catch (e) {
	    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
	    if (keywordMatch) {
	      errors.push(
	        "avoid using JavaScript keyword as property name: " +
	        "\"" + (keywordMatch[0]) + "\"\n  Raw expression: " + (text.trim())
	      );
	    } else {
	      errors.push(
	        "invalid expression: " + (e.message) + " in\n\n" +
	        "    " + exp + "\n\n" +
	        "  Raw expression: " + (text.trim()) + "\n"
	      );
	    }
	  }
	}

	/*  */

	function createFunction (code, errors) {
	  try {
	    return new Function(code)
	  } catch (err) {
	    errors.push({ err: err, code: code });
	    return noop
	  }
	}

	function createCompileToFunctionFn (compile) {
	  var cache = Object.create(null);

	  return function compileToFunctions (
	    template,
	    options,
	    vm
	  ) {
	    options = extend({}, options);
	    var warn$$1 = options.warn || warn;
	    delete options.warn;

	    /* istanbul ignore if */
	    {
	      // detect possible CSP restriction
	      try {
	        new Function('return 1');
	      } catch (e) {
	        if (e.toString().match(/unsafe-eval|CSP/)) {
	          warn$$1(
	            'It seems you are using the standalone build of Vue.js in an ' +
	            'environment with Content Security Policy that prohibits unsafe-eval. ' +
	            'The template compiler cannot work in this environment. Consider ' +
	            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
	            'templates into render functions.'
	          );
	        }
	      }
	    }

	    // check cache
	    var key = options.delimiters
	      ? String(options.delimiters) + template
	      : template;
	    if (cache[key]) {
	      return cache[key]
	    }

	    // compile
	    var compiled = compile(template, options);

	    // check compilation errors/tips
	    {
	      if (compiled.errors && compiled.errors.length) {
	        warn$$1(
	          "Error compiling template:\n\n" + template + "\n\n" +
	          compiled.errors.map(function (e) { return ("- " + e); }).join('\n') + '\n',
	          vm
	        );
	      }
	      if (compiled.tips && compiled.tips.length) {
	        compiled.tips.forEach(function (msg) { return tip(msg, vm); });
	      }
	    }

	    // turn code into functions
	    var res = {};
	    var fnGenErrors = [];
	    res.render = createFunction(compiled.render, fnGenErrors);
	    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
	      return createFunction(code, fnGenErrors)
	    });

	    // check function generation errors.
	    // this should only happen if there is a bug in the compiler itself.
	    // mostly for codegen development use
	    /* istanbul ignore if */
	    {
	      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
	        warn$$1(
	          "Failed to generate render function:\n\n" +
	          fnGenErrors.map(function (ref) {
	            var err = ref.err;
	            var code = ref.code;

	            return ((err.toString()) + " in\n\n" + code + "\n");
	        }).join('\n'),
	          vm
	        );
	      }
	    }

	    return (cache[key] = res)
	  }
	}

	/*  */

	function createCompilerCreator (baseCompile) {
	  return function createCompiler (baseOptions) {
	    function compile (
	      template,
	      options
	    ) {
	      var finalOptions = Object.create(baseOptions);
	      var errors = [];
	      var tips = [];
	      finalOptions.warn = function (msg, tip) {
	        (tip ? tips : errors).push(msg);
	      };

	      if (options) {
	        // merge custom modules
	        if (options.modules) {
	          finalOptions.modules =
	            (baseOptions.modules || []).concat(options.modules);
	        }
	        // merge custom directives
	        if (options.directives) {
	          finalOptions.directives = extend(
	            Object.create(baseOptions.directives || null),
	            options.directives
	          );
	        }
	        // copy other options
	        for (var key in options) {
	          if (key !== 'modules' && key !== 'directives') {
	            finalOptions[key] = options[key];
	          }
	        }
	      }

	      var compiled = baseCompile(template, finalOptions);
	      {
	        errors.push.apply(errors, detectErrors(compiled.ast));
	      }
	      compiled.errors = errors;
	      compiled.tips = tips;
	      return compiled
	    }

	    return {
	      compile: compile,
	      compileToFunctions: createCompileToFunctionFn(compile)
	    }
	  }
	}

	/*  */

	// `createCompilerCreator` allows creating compilers that use alternative
	// parser/optimizer/codegen, e.g the SSR optimizing compiler.
	// Here we just export a default compiler using the default parts.
	var createCompiler = createCompilerCreator(function baseCompile (
	  template,
	  options
	) {
	  var ast = parse(template.trim(), options);
	  if (options.optimize !== false) {
	    optimize(ast, options);
	  }
	  var code = generate(ast, options);
	  return {
	    ast: ast,
	    render: code.render,
	    staticRenderFns: code.staticRenderFns
	  }
	});

	/*  */

	var ref$1 = createCompiler(baseOptions);
	var compileToFunctions = ref$1.compileToFunctions;

	/*  */

	// check whether current browser encodes a char inside attribute values
	var div;
	function getShouldDecode (href) {
	  div = div || document.createElement('div');
	  div.innerHTML = href ? "<a href=\"\n\"/>" : "<div a=\"\n\"/>";
	  return div.innerHTML.indexOf('&#10;') > 0
	}

	// #3663: IE encodes newlines inside attribute values while other browsers don't
	var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;
	// #6828: chrome encodes content in a[href]
	var shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;

	/*  */

	var idToTemplate = cached(function (id) {
	  var el = query(id);
	  return el && el.innerHTML
	});

	var mount = Vue$3.prototype.$mount;
	Vue$3.prototype.$mount = function (
	  el,
	  hydrating
	) {
	  el = el && query(el);

	  /* istanbul ignore if */
	  if (el === document.body || el === document.documentElement) {
	    "development" !== 'production' && warn(
	      "Do not mount Vue to <html> or <body> - mount to normal elements instead."
	    );
	    return this
	  }

	  var options = this.$options;
	  // resolve template/el and convert to render function
	  if (!options.render) {
	    var template = options.template;
	    if (template) {
	      if (typeof template === 'string') {
	        if (template.charAt(0) === '#') {
	          template = idToTemplate(template);
	          /* istanbul ignore if */
	          if ("development" !== 'production' && !template) {
	            warn(
	              ("Template element not found or is empty: " + (options.template)),
	              this
	            );
	          }
	        }
	      } else if (template.nodeType) {
	        template = template.innerHTML;
	      } else {
	        {
	          warn('invalid template option:' + template, this);
	        }
	        return this
	      }
	    } else if (el) {
	      template = getOuterHTML(el);
	    }
	    if (template) {
	      /* istanbul ignore if */
	      if ("development" !== 'production' && config.performance && mark) {
	        mark('compile');
	      }

	      var ref = compileToFunctions(template, {
	        shouldDecodeNewlines: shouldDecodeNewlines,
	        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
	        delimiters: options.delimiters,
	        comments: options.comments
	      }, this);
	      var render = ref.render;
	      var staticRenderFns = ref.staticRenderFns;
	      options.render = render;
	      options.staticRenderFns = staticRenderFns;

	      /* istanbul ignore if */
	      if ("development" !== 'production' && config.performance && mark) {
	        mark('compile end');
	        measure(("vue " + (this._name) + " compile"), 'compile', 'compile end');
	      }
	    }
	  }
	  return mount.call(this, el, hydrating)
	};

	/**
	 * Get outerHTML of elements, taking care
	 * of SVG elements in IE as well.
	 */
	function getOuterHTML (el) {
	  if (el.outerHTML) {
	    return el.outerHTML
	  } else {
	    var container = document.createElement('div');
	    container.appendChild(el.cloneNode(true));
	    return container.innerHTML
	  }
	}

	Vue$3.compile = compileToFunctions;

	return Vue$3;

	})));

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(2).setImmediate))

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = Function.prototype.apply;

	// DOM APIs, for completeness

	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) {
	  if (timeout) {
	    timeout.close();
	  }
	};

	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};

	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};

	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};

	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);

	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};

	// setimmediate attaches itself to the global object
	__webpack_require__(3);
	exports.setImmediate = setImmediate;
	exports.clearImmediate = clearImmediate;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
	    "use strict";

	    if (global.setImmediate) {
	        return;
	    }

	    var nextHandle = 1; // Spec says greater than zero
	    var tasksByHandle = {};
	    var currentlyRunningATask = false;
	    var doc = global.document;
	    var registerImmediate;

	    function setImmediate(callback) {
	      // Callback can either be a function or a string
	      if (typeof callback !== "function") {
	        callback = new Function("" + callback);
	      }
	      // Copy function arguments
	      var args = new Array(arguments.length - 1);
	      for (var i = 0; i < args.length; i++) {
	          args[i] = arguments[i + 1];
	      }
	      // Store and register the task
	      var task = { callback: callback, args: args };
	      tasksByHandle[nextHandle] = task;
	      registerImmediate(nextHandle);
	      return nextHandle++;
	    }

	    function clearImmediate(handle) {
	        delete tasksByHandle[handle];
	    }

	    function run(task) {
	        var callback = task.callback;
	        var args = task.args;
	        switch (args.length) {
	        case 0:
	            callback();
	            break;
	        case 1:
	            callback(args[0]);
	            break;
	        case 2:
	            callback(args[0], args[1]);
	            break;
	        case 3:
	            callback(args[0], args[1], args[2]);
	            break;
	        default:
	            callback.apply(undefined, args);
	            break;
	        }
	    }

	    function runIfPresent(handle) {
	        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
	        // So if we're currently running a task, we'll need to delay this invocation.
	        if (currentlyRunningATask) {
	            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
	            // "too much recursion" error.
	            setTimeout(runIfPresent, 0, handle);
	        } else {
	            var task = tasksByHandle[handle];
	            if (task) {
	                currentlyRunningATask = true;
	                try {
	                    run(task);
	                } finally {
	                    clearImmediate(handle);
	                    currentlyRunningATask = false;
	                }
	            }
	        }
	    }

	    function installNextTickImplementation() {
	        registerImmediate = function(handle) {
	            process.nextTick(function () { runIfPresent(handle); });
	        };
	    }

	    function canUsePostMessage() {
	        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
	        // where `global.postMessage` means something completely different and can't be used for this purpose.
	        if (global.postMessage && !global.importScripts) {
	            var postMessageIsAsynchronous = true;
	            var oldOnMessage = global.onmessage;
	            global.onmessage = function() {
	                postMessageIsAsynchronous = false;
	            };
	            global.postMessage("", "*");
	            global.onmessage = oldOnMessage;
	            return postMessageIsAsynchronous;
	        }
	    }

	    function installPostMessageImplementation() {
	        // Installs an event handler on `global` for the `message` event: see
	        // * https://developer.mozilla.org/en/DOM/window.postMessage
	        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

	        var messagePrefix = "setImmediate$" + Math.random() + "$";
	        var onGlobalMessage = function(event) {
	            if (event.source === global &&
	                typeof event.data === "string" &&
	                event.data.indexOf(messagePrefix) === 0) {
	                runIfPresent(+event.data.slice(messagePrefix.length));
	            }
	        };

	        if (global.addEventListener) {
	            global.addEventListener("message", onGlobalMessage, false);
	        } else {
	            global.attachEvent("onmessage", onGlobalMessage);
	        }

	        registerImmediate = function(handle) {
	            global.postMessage(messagePrefix + handle, "*");
	        };
	    }

	    function installMessageChannelImplementation() {
	        var channel = new MessageChannel();
	        channel.port1.onmessage = function(event) {
	            var handle = event.data;
	            runIfPresent(handle);
	        };

	        registerImmediate = function(handle) {
	            channel.port2.postMessage(handle);
	        };
	    }

	    function installReadyStateChangeImplementation() {
	        var html = doc.documentElement;
	        registerImmediate = function(handle) {
	            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
	            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
	            var script = doc.createElement("script");
	            script.onreadystatechange = function () {
	                runIfPresent(handle);
	                script.onreadystatechange = null;
	                html.removeChild(script);
	                script = null;
	            };
	            html.appendChild(script);
	        };
	    }

	    function installSetTimeoutImplementation() {
	        registerImmediate = function(handle) {
	            setTimeout(runIfPresent, 0, handle);
	        };
	    }

	    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
	    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
	    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

	    // Don't get fooled by e.g. browserify environments.
	    if ({}.toString.call(global.process) === "[object process]") {
	        // For Node.js before 0.9
	        installNextTickImplementation();

	    } else if (canUsePostMessage()) {
	        // For non-IE10 modern browsers
	        installPostMessageImplementation();

	    } else if (global.MessageChannel) {
	        // For web workers, where supported
	        installMessageChannelImplementation();

	    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
	        // For IE 6–8
	        installReadyStateChangeImplementation();

	    } else {
	        // For older browsers
	        installSetTimeoutImplementation();
	    }

	    attachTo.setImmediate = setImmediate;
	    attachTo.clearImmediate = clearImmediate;
	}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(4)))

/***/ }),
/* 4 */
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	/*!
	 * vue-resource v1.3.5
	 * https://github.com/pagekit/vue-resource
	 * Released under the MIT License.
	 */

	'use strict';

	/**
	 * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)
	 */

	var RESOLVED = 0;
	var REJECTED = 1;
	var PENDING  = 2;

	function Promise$1(executor) {

	    this.state = PENDING;
	    this.value = undefined;
	    this.deferred = [];

	    var promise = this;

	    try {
	        executor(function (x) {
	            promise.resolve(x);
	        }, function (r) {
	            promise.reject(r);
	        });
	    } catch (e) {
	        promise.reject(e);
	    }
	}

	Promise$1.reject = function (r) {
	    return new Promise$1(function (resolve, reject) {
	        reject(r);
	    });
	};

	Promise$1.resolve = function (x) {
	    return new Promise$1(function (resolve, reject) {
	        resolve(x);
	    });
	};

	Promise$1.all = function all(iterable) {
	    return new Promise$1(function (resolve, reject) {
	        var count = 0, result = [];

	        if (iterable.length === 0) {
	            resolve(result);
	        }

	        function resolver(i) {
	            return function (x) {
	                result[i] = x;
	                count += 1;

	                if (count === iterable.length) {
	                    resolve(result);
	                }
	            };
	        }

	        for (var i = 0; i < iterable.length; i += 1) {
	            Promise$1.resolve(iterable[i]).then(resolver(i), reject);
	        }
	    });
	};

	Promise$1.race = function race(iterable) {
	    return new Promise$1(function (resolve, reject) {
	        for (var i = 0; i < iterable.length; i += 1) {
	            Promise$1.resolve(iterable[i]).then(resolve, reject);
	        }
	    });
	};

	var p$1 = Promise$1.prototype;

	p$1.resolve = function resolve(x) {
	    var promise = this;

	    if (promise.state === PENDING) {
	        if (x === promise) {
	            throw new TypeError('Promise settled with itself.');
	        }

	        var called = false;

	        try {
	            var then = x && x['then'];

	            if (x !== null && typeof x === 'object' && typeof then === 'function') {
	                then.call(x, function (x) {
	                    if (!called) {
	                        promise.resolve(x);
	                    }
	                    called = true;

	                }, function (r) {
	                    if (!called) {
	                        promise.reject(r);
	                    }
	                    called = true;
	                });
	                return;
	            }
	        } catch (e) {
	            if (!called) {
	                promise.reject(e);
	            }
	            return;
	        }

	        promise.state = RESOLVED;
	        promise.value = x;
	        promise.notify();
	    }
	};

	p$1.reject = function reject(reason) {
	    var promise = this;

	    if (promise.state === PENDING) {
	        if (reason === promise) {
	            throw new TypeError('Promise settled with itself.');
	        }

	        promise.state = REJECTED;
	        promise.value = reason;
	        promise.notify();
	    }
	};

	p$1.notify = function notify() {
	    var promise = this;

	    nextTick(function () {
	        if (promise.state !== PENDING) {
	            while (promise.deferred.length) {
	                var deferred = promise.deferred.shift(),
	                    onResolved = deferred[0],
	                    onRejected = deferred[1],
	                    resolve = deferred[2],
	                    reject = deferred[3];

	                try {
	                    if (promise.state === RESOLVED) {
	                        if (typeof onResolved === 'function') {
	                            resolve(onResolved.call(undefined, promise.value));
	                        } else {
	                            resolve(promise.value);
	                        }
	                    } else if (promise.state === REJECTED) {
	                        if (typeof onRejected === 'function') {
	                            resolve(onRejected.call(undefined, promise.value));
	                        } else {
	                            reject(promise.value);
	                        }
	                    }
	                } catch (e) {
	                    reject(e);
	                }
	            }
	        }
	    });
	};

	p$1.then = function then(onResolved, onRejected) {
	    var promise = this;

	    return new Promise$1(function (resolve, reject) {
	        promise.deferred.push([onResolved, onRejected, resolve, reject]);
	        promise.notify();
	    });
	};

	p$1.catch = function (onRejected) {
	    return this.then(undefined, onRejected);
	};

	/**
	 * Promise adapter.
	 */

	if (typeof Promise === 'undefined') {
	    window.Promise = Promise$1;
	}

	function PromiseObj(executor, context) {

	    if (executor instanceof Promise) {
	        this.promise = executor;
	    } else {
	        this.promise = new Promise(executor.bind(context));
	    }

	    this.context = context;
	}

	PromiseObj.all = function (iterable, context) {
	    return new PromiseObj(Promise.all(iterable), context);
	};

	PromiseObj.resolve = function (value, context) {
	    return new PromiseObj(Promise.resolve(value), context);
	};

	PromiseObj.reject = function (reason, context) {
	    return new PromiseObj(Promise.reject(reason), context);
	};

	PromiseObj.race = function (iterable, context) {
	    return new PromiseObj(Promise.race(iterable), context);
	};

	var p = PromiseObj.prototype;

	p.bind = function (context) {
	    this.context = context;
	    return this;
	};

	p.then = function (fulfilled, rejected) {

	    if (fulfilled && fulfilled.bind && this.context) {
	        fulfilled = fulfilled.bind(this.context);
	    }

	    if (rejected && rejected.bind && this.context) {
	        rejected = rejected.bind(this.context);
	    }

	    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);
	};

	p.catch = function (rejected) {

	    if (rejected && rejected.bind && this.context) {
	        rejected = rejected.bind(this.context);
	    }

	    return new PromiseObj(this.promise.catch(rejected), this.context);
	};

	p.finally = function (callback) {

	    return this.then(function (value) {
	            callback.call(this);
	            return value;
	        }, function (reason) {
	            callback.call(this);
	            return Promise.reject(reason);
	        }
	    );
	};

	/**
	 * Utility functions.
	 */

	var ref = {};
	var hasOwnProperty = ref.hasOwnProperty;

	var ref$1 = [];
	var slice = ref$1.slice;
	var debug = false;
	var ntick;

	var inBrowser = typeof window !== 'undefined';

	function Util (ref) {
	    var config = ref.config;
	    var nextTick = ref.nextTick;

	    ntick = nextTick;
	    debug = config.debug || !config.silent;
	}

	function warn(msg) {
	    if (typeof console !== 'undefined' && debug) {
	        console.warn('[VueResource warn]: ' + msg);
	    }
	}

	function error(msg) {
	    if (typeof console !== 'undefined') {
	        console.error(msg);
	    }
	}

	function nextTick(cb, ctx) {
	    return ntick(cb, ctx);
	}

	function trim(str) {
	    return str ? str.replace(/^\s*|\s*$/g, '') : '';
	}

	function trimEnd(str, chars) {

	    if (str && chars === undefined) {
	        return str.replace(/\s+$/, '');
	    }

	    if (!str || !chars) {
	        return str;
	    }

	    return str.replace(new RegExp(("[" + chars + "]+$")), '');
	}

	function toLower(str) {
	    return str ? str.toLowerCase() : '';
	}

	function toUpper(str) {
	    return str ? str.toUpperCase() : '';
	}

	var isArray = Array.isArray;

	function isString(val) {
	    return typeof val === 'string';
	}



	function isFunction(val) {
	    return typeof val === 'function';
	}

	function isObject(obj) {
	    return obj !== null && typeof obj === 'object';
	}

	function isPlainObject(obj) {
	    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;
	}

	function isBlob(obj) {
	    return typeof Blob !== 'undefined' && obj instanceof Blob;
	}

	function isFormData(obj) {
	    return typeof FormData !== 'undefined' && obj instanceof FormData;
	}

	function when(value, fulfilled, rejected) {

	    var promise = PromiseObj.resolve(value);

	    if (arguments.length < 2) {
	        return promise;
	    }

	    return promise.then(fulfilled, rejected);
	}

	function options(fn, obj, opts) {

	    opts = opts || {};

	    if (isFunction(opts)) {
	        opts = opts.call(obj);
	    }

	    return merge(fn.bind({$vm: obj, $options: opts}), fn, {$options: opts});
	}

	function each(obj, iterator) {

	    var i, key;

	    if (isArray(obj)) {
	        for (i = 0; i < obj.length; i++) {
	            iterator.call(obj[i], obj[i], i);
	        }
	    } else if (isObject(obj)) {
	        for (key in obj) {
	            if (hasOwnProperty.call(obj, key)) {
	                iterator.call(obj[key], obj[key], key);
	            }
	        }
	    }

	    return obj;
	}

	var assign = Object.assign || _assign;

	function merge(target) {

	    var args = slice.call(arguments, 1);

	    args.forEach(function (source) {
	        _merge(target, source, true);
	    });

	    return target;
	}

	function defaults(target) {

	    var args = slice.call(arguments, 1);

	    args.forEach(function (source) {

	        for (var key in source) {
	            if (target[key] === undefined) {
	                target[key] = source[key];
	            }
	        }

	    });

	    return target;
	}

	function _assign(target) {

	    var args = slice.call(arguments, 1);

	    args.forEach(function (source) {
	        _merge(target, source);
	    });

	    return target;
	}

	function _merge(target, source, deep) {
	    for (var key in source) {
	        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {
	            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {
	                target[key] = {};
	            }
	            if (isArray(source[key]) && !isArray(target[key])) {
	                target[key] = [];
	            }
	            _merge(target[key], source[key], deep);
	        } else if (source[key] !== undefined) {
	            target[key] = source[key];
	        }
	    }
	}

	/**
	 * Root Prefix Transform.
	 */

	function root (options$$1, next) {

	    var url = next(options$$1);

	    if (isString(options$$1.root) && !/^(https?:)?\//.test(url)) {
	        url = trimEnd(options$$1.root, '/') + '/' + url;
	    }

	    return url;
	}

	/**
	 * Query Parameter Transform.
	 */

	function query (options$$1, next) {

	    var urlParams = Object.keys(Url.options.params), query = {}, url = next(options$$1);

	    each(options$$1.params, function (value, key) {
	        if (urlParams.indexOf(key) === -1) {
	            query[key] = value;
	        }
	    });

	    query = Url.params(query);

	    if (query) {
	        url += (url.indexOf('?') == -1 ? '?' : '&') + query;
	    }

	    return url;
	}

	/**
	 * URL Template v2.0.6 (https://github.com/bramstein/url-template)
	 */

	function expand(url, params, variables) {

	    var tmpl = parse(url), expanded = tmpl.expand(params);

	    if (variables) {
	        variables.push.apply(variables, tmpl.vars);
	    }

	    return expanded;
	}

	function parse(template) {

	    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];

	    return {
	        vars: variables,
	        expand: function expand(context) {
	            return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function (_, expression, literal) {
	                if (expression) {

	                    var operator = null, values = [];

	                    if (operators.indexOf(expression.charAt(0)) !== -1) {
	                        operator = expression.charAt(0);
	                        expression = expression.substr(1);
	                    }

	                    expression.split(/,/g).forEach(function (variable) {
	                        var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
	                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
	                        variables.push(tmp[1]);
	                    });

	                    if (operator && operator !== '+') {

	                        var separator = ',';

	                        if (operator === '?') {
	                            separator = '&';
	                        } else if (operator !== '#') {
	                            separator = operator;
	                        }

	                        return (values.length !== 0 ? operator : '') + values.join(separator);
	                    } else {
	                        return values.join(',');
	                    }

	                } else {
	                    return encodeReserved(literal);
	                }
	            });
	        }
	    };
	}

	function getValues(context, operator, key, modifier) {

	    var value = context[key], result = [];

	    if (isDefined(value) && value !== '') {
	        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {
	            value = value.toString();

	            if (modifier && modifier !== '*') {
	                value = value.substring(0, parseInt(modifier, 10));
	            }

	            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));
	        } else {
	            if (modifier === '*') {
	                if (Array.isArray(value)) {
	                    value.filter(isDefined).forEach(function (value) {
	                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));
	                    });
	                } else {
	                    Object.keys(value).forEach(function (k) {
	                        if (isDefined(value[k])) {
	                            result.push(encodeValue(operator, value[k], k));
	                        }
	                    });
	                }
	            } else {
	                var tmp = [];

	                if (Array.isArray(value)) {
	                    value.filter(isDefined).forEach(function (value) {
	                        tmp.push(encodeValue(operator, value));
	                    });
	                } else {
	                    Object.keys(value).forEach(function (k) {
	                        if (isDefined(value[k])) {
	                            tmp.push(encodeURIComponent(k));
	                            tmp.push(encodeValue(operator, value[k].toString()));
	                        }
	                    });
	                }

	                if (isKeyOperator(operator)) {
	                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));
	                } else if (tmp.length !== 0) {
	                    result.push(tmp.join(','));
	                }
	            }
	        }
	    } else {
	        if (operator === ';') {
	            result.push(encodeURIComponent(key));
	        } else if (value === '' && (operator === '&' || operator === '?')) {
	            result.push(encodeURIComponent(key) + '=');
	        } else if (value === '') {
	            result.push('');
	        }
	    }

	    return result;
	}

	function isDefined(value) {
	    return value !== undefined && value !== null;
	}

	function isKeyOperator(operator) {
	    return operator === ';' || operator === '&' || operator === '?';
	}

	function encodeValue(operator, value, key) {

	    value = (operator === '+' || operator === '#') ? encodeReserved(value) : encodeURIComponent(value);

	    if (key) {
	        return encodeURIComponent(key) + '=' + value;
	    } else {
	        return value;
	    }
	}

	function encodeReserved(str) {
	    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {
	        if (!/%[0-9A-Fa-f]/.test(part)) {
	            part = encodeURI(part);
	        }
	        return part;
	    }).join('');
	}

	/**
	 * URL Template (RFC 6570) Transform.
	 */

	function template (options) {

	    var variables = [], url = expand(options.url, options.params, variables);

	    variables.forEach(function (key) {
	        delete options.params[key];
	    });

	    return url;
	}

	/**
	 * Service for URL templating.
	 */

	function Url(url, params) {

	    var self = this || {}, options$$1 = url, transform;

	    if (isString(url)) {
	        options$$1 = {url: url, params: params};
	    }

	    options$$1 = merge({}, Url.options, self.$options, options$$1);

	    Url.transforms.forEach(function (handler) {

	        if (isString(handler)) {
	            handler = Url.transform[handler];
	        }

	        if (isFunction(handler)) {
	            transform = factory(handler, transform, self.$vm);
	        }

	    });

	    return transform(options$$1);
	}

	/**
	 * Url options.
	 */

	Url.options = {
	    url: '',
	    root: null,
	    params: {}
	};

	/**
	 * Url transforms.
	 */

	Url.transform = {template: template, query: query, root: root};
	Url.transforms = ['template', 'query', 'root'];

	/**
	 * Encodes a Url parameter string.
	 *
	 * @param {Object} obj
	 */

	Url.params = function (obj) {

	    var params = [], escape = encodeURIComponent;

	    params.add = function (key, value) {

	        if (isFunction(value)) {
	            value = value();
	        }

	        if (value === null) {
	            value = '';
	        }

	        this.push(escape(key) + '=' + escape(value));
	    };

	    serialize(params, obj);

	    return params.join('&').replace(/%20/g, '+');
	};

	/**
	 * Parse a URL and return its components.
	 *
	 * @param {String} url
	 */

	Url.parse = function (url) {

	    var el = document.createElement('a');

	    if (document.documentMode) {
	        el.href = url;
	        url = el.href;
	    }

	    el.href = url;

	    return {
	        href: el.href,
	        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',
	        port: el.port,
	        host: el.host,
	        hostname: el.hostname,
	        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,
	        search: el.search ? el.search.replace(/^\?/, '') : '',
	        hash: el.hash ? el.hash.replace(/^#/, '') : ''
	    };
	};

	function factory(handler, next, vm) {
	    return function (options$$1) {
	        return handler.call(vm, options$$1, next);
	    };
	}

	function serialize(params, obj, scope) {

	    var array = isArray(obj), plain = isPlainObject(obj), hash;

	    each(obj, function (value, key) {

	        hash = isObject(value) || isArray(value);

	        if (scope) {
	            key = scope + '[' + (plain || hash ? key : '') + ']';
	        }

	        if (!scope && array) {
	            params.add(value.name, value.value);
	        } else if (hash) {
	            serialize(params, value, key);
	        } else {
	            params.add(key, value);
	        }
	    });
	}

	/**
	 * XDomain client (Internet Explorer).
	 */

	function xdrClient (request) {
	    return new PromiseObj(function (resolve) {

	        var xdr = new XDomainRequest(), handler = function (ref) {
	            var type = ref.type;


	            var status = 0;

	            if (type === 'load') {
	                status = 200;
	            } else if (type === 'error') {
	                status = 500;
	            }

	            resolve(request.respondWith(xdr.responseText, {status: status}));
	        };

	        request.abort = function () { return xdr.abort(); };

	        xdr.open(request.method, request.getUrl());

	        if (request.timeout) {
	            xdr.timeout = request.timeout;
	        }

	        xdr.onload = handler;
	        xdr.onabort = handler;
	        xdr.onerror = handler;
	        xdr.ontimeout = handler;
	        xdr.onprogress = function () {};
	        xdr.send(request.getBody());
	    });
	}

	/**
	 * CORS Interceptor.
	 */

	var SUPPORTS_CORS = inBrowser && 'withCredentials' in new XMLHttpRequest();

	function cors (request, next) {

	    if (inBrowser) {

	        var orgUrl = Url.parse(location.href);
	        var reqUrl = Url.parse(request.getUrl());

	        if (reqUrl.protocol !== orgUrl.protocol || reqUrl.host !== orgUrl.host) {

	            request.crossOrigin = true;
	            request.emulateHTTP = false;

	            if (!SUPPORTS_CORS) {
	                request.client = xdrClient;
	            }
	        }
	    }

	    next();
	}

	/**
	 * Form data Interceptor.
	 */

	function form (request, next) {

	    if (isFormData(request.body)) {

	        request.headers.delete('Content-Type');

	    } else if (isObject(request.body) && request.emulateJSON) {

	        request.body = Url.params(request.body);
	        request.headers.set('Content-Type', 'application/x-www-form-urlencoded');
	    }

	    next();
	}

	/**
	 * JSON Interceptor.
	 */

	function json (request, next) {

	    var type = request.headers.get('Content-Type') || '';

	    if (isObject(request.body) && type.indexOf('application/json') === 0) {
	        request.body = JSON.stringify(request.body);
	    }

	    next(function (response) {

	        return response.bodyText ? when(response.text(), function (text) {

	            type = response.headers.get('Content-Type') || '';

	            if (type.indexOf('application/json') === 0 || isJson(text)) {

	                try {
	                    response.body = JSON.parse(text);
	                } catch (e) {
	                    response.body = null;
	                }

	            } else {
	                response.body = text;
	            }

	            return response;

	        }) : response;

	    });
	}

	function isJson(str) {

	    var start = str.match(/^\s*(\[|\{)/);
	    var end = {'[': /]\s*$/, '{': /}\s*$/};

	    return start && end[start[1]].test(str);
	}

	/**
	 * JSONP client (Browser).
	 */

	function jsonpClient (request) {
	    return new PromiseObj(function (resolve) {

	        var name = request.jsonp || 'callback', callback = request.jsonpCallback || '_jsonp' + Math.random().toString(36).substr(2), body = null, handler, script;

	        handler = function (ref) {
	            var type = ref.type;


	            var status = 0;

	            if (type === 'load' && body !== null) {
	                status = 200;
	            } else if (type === 'error') {
	                status = 500;
	            }

	            if (status && window[callback]) {
	                delete window[callback];
	                document.body.removeChild(script);
	            }

	            resolve(request.respondWith(body, {status: status}));
	        };

	        window[callback] = function (result) {
	            body = JSON.stringify(result);
	        };

	        request.abort = function () {
	            handler({type: 'abort'});
	        };

	        request.params[name] = callback;

	        if (request.timeout) {
	            setTimeout(request.abort, request.timeout);
	        }

	        script = document.createElement('script');
	        script.src = request.getUrl();
	        script.type = 'text/javascript';
	        script.async = true;
	        script.onload = handler;
	        script.onerror = handler;

	        document.body.appendChild(script);
	    });
	}

	/**
	 * JSONP Interceptor.
	 */

	function jsonp (request, next) {

	    if (request.method == 'JSONP') {
	        request.client = jsonpClient;
	    }

	    next();
	}

	/**
	 * Before Interceptor.
	 */

	function before (request, next) {

	    if (isFunction(request.before)) {
	        request.before.call(this, request);
	    }

	    next();
	}

	/**
	 * HTTP method override Interceptor.
	 */

	function method (request, next) {

	    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {
	        request.headers.set('X-HTTP-Method-Override', request.method);
	        request.method = 'POST';
	    }

	    next();
	}

	/**
	 * Header Interceptor.
	 */

	function header (request, next) {

	    var headers = assign({}, Http.headers.common,
	        !request.crossOrigin ? Http.headers.custom : {},
	        Http.headers[toLower(request.method)]
	    );

	    each(headers, function (value, name) {
	        if (!request.headers.has(name)) {
	            request.headers.set(name, value);
	        }
	    });

	    next();
	}

	/**
	 * XMLHttp client (Browser).
	 */

	function xhrClient (request) {
	    return new PromiseObj(function (resolve) {

	        var xhr = new XMLHttpRequest(), handler = function (event) {

	            var response = request.respondWith(
	                'response' in xhr ? xhr.response : xhr.responseText, {
	                    status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug
	                    statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)
	                }
	            );

	            each(trim(xhr.getAllResponseHeaders()).split('\n'), function (row) {
	                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));
	            });

	            resolve(response);
	        };

	        request.abort = function () { return xhr.abort(); };

	        if (request.progress) {
	            if (request.method === 'GET') {
	                xhr.addEventListener('progress', request.progress);
	            } else if (/^(POST|PUT)$/i.test(request.method)) {
	                xhr.upload.addEventListener('progress', request.progress);
	            }
	        }

	        xhr.open(request.method, request.getUrl(), true);

	        if (request.timeout) {
	            xhr.timeout = request.timeout;
	        }

	        if (request.responseType && 'responseType' in xhr) {
	            xhr.responseType = request.responseType;
	        }

	        if (request.withCredentials || request.credentials) {
	            xhr.withCredentials = true;
	        }

	        if (!request.crossOrigin) {
	            request.headers.set('X-Requested-With', 'XMLHttpRequest');
	        }

	        request.headers.forEach(function (value, name) {
	            xhr.setRequestHeader(name, value);
	        });

	        xhr.onload = handler;
	        xhr.onabort = handler;
	        xhr.onerror = handler;
	        xhr.ontimeout = handler;
	        xhr.send(request.getBody());
	    });
	}

	/**
	 * Http client (Node).
	 */

	function nodeClient (request) {

	    var client = __webpack_require__(6);

	    return new PromiseObj(function (resolve) {

	        var url = request.getUrl();
	        var body = request.getBody();
	        var method = request.method;
	        var headers = {}, handler;

	        request.headers.forEach(function (value, name) {
	            headers[name] = value;
	        });

	        client(url, {body: body, method: method, headers: headers}).then(handler = function (resp) {

	            var response = request.respondWith(resp.body, {
	                    status: resp.statusCode,
	                    statusText: trim(resp.statusMessage)
	                }
	            );

	            each(resp.headers, function (value, name) {
	                response.headers.set(name, value);
	            });

	            resolve(response);

	        }, function (error$$1) { return handler(error$$1.response); });
	    });
	}

	/**
	 * Base client.
	 */

	function Client (context) {

	    var reqHandlers = [sendRequest], resHandlers = [], handler;

	    if (!isObject(context)) {
	        context = null;
	    }

	    function Client(request) {
	        return new PromiseObj(function (resolve, reject) {

	            function exec() {

	                handler = reqHandlers.pop();

	                if (isFunction(handler)) {
	                    handler.call(context, request, next);
	                } else {
	                    warn(("Invalid interceptor of type " + (typeof handler) + ", must be a function"));
	                    next();
	                }
	            }

	            function next(response) {

	                if (isFunction(response)) {

	                    resHandlers.unshift(response);

	                } else if (isObject(response)) {

	                    resHandlers.forEach(function (handler) {
	                        response = when(response, function (response) {
	                            return handler.call(context, response) || response;
	                        }, reject);
	                    });

	                    when(response, resolve, reject);

	                    return;
	                }

	                exec();
	            }

	            exec();

	        }, context);
	    }

	    Client.use = function (handler) {
	        reqHandlers.push(handler);
	    };

	    return Client;
	}

	function sendRequest(request, resolve) {

	    var client = request.client || (inBrowser ? xhrClient : nodeClient);

	    resolve(client(request));
	}

	/**
	 * HTTP Headers.
	 */

	var Headers = function Headers(headers) {
	    var this$1 = this;


	    this.map = {};

	    each(headers, function (value, name) { return this$1.append(name, value); });
	};

	Headers.prototype.has = function has (name) {
	    return getName(this.map, name) !== null;
	};

	Headers.prototype.get = function get (name) {

	    var list = this.map[getName(this.map, name)];

	    return list ? list.join() : null;
	};

	Headers.prototype.getAll = function getAll (name) {
	    return this.map[getName(this.map, name)] || [];
	};

	Headers.prototype.set = function set (name, value) {
	    this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];
	};

	Headers.prototype.append = function append (name, value){

	    var list = this.map[getName(this.map, name)];

	    if (list) {
	        list.push(trim(value));
	    } else {
	        this.set(name, value);
	    }
	};

	Headers.prototype.delete = function delete$1 (name){
	    delete this.map[getName(this.map, name)];
	};

	Headers.prototype.deleteAll = function deleteAll (){
	    this.map = {};
	};

	Headers.prototype.forEach = function forEach (callback, thisArg) {
	        var this$1 = this;

	    each(this.map, function (list, name) {
	        each(list, function (value) { return callback.call(thisArg, value, name, this$1); });
	    });
	};

	function getName(map, name) {
	    return Object.keys(map).reduce(function (prev, curr) {
	        return toLower(name) === toLower(curr) ? curr : prev;
	    }, null);
	}

	function normalizeName(name) {

	    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
	        throw new TypeError('Invalid character in header field name');
	    }

	    return trim(name);
	}

	/**
	 * HTTP Response.
	 */

	var Response = function Response(body, ref) {
	    var url = ref.url;
	    var headers = ref.headers;
	    var status = ref.status;
	    var statusText = ref.statusText;


	    this.url = url;
	    this.ok = status >= 200 && status < 300;
	    this.status = status || 0;
	    this.statusText = statusText || '';
	    this.headers = new Headers(headers);
	    this.body = body;

	    if (isString(body)) {

	        this.bodyText = body;

	    } else if (isBlob(body)) {

	        this.bodyBlob = body;

	        if (isBlobText(body)) {
	            this.bodyText = blobText(body);
	        }
	    }
	};

	Response.prototype.blob = function blob () {
	    return when(this.bodyBlob);
	};

	Response.prototype.text = function text () {
	    return when(this.bodyText);
	};

	Response.prototype.json = function json () {
	    return when(this.text(), function (text) { return JSON.parse(text); });
	};

	Object.defineProperty(Response.prototype, 'data', {

	    get: function get() {
	        return this.body;
	    },

	    set: function set(body) {
	        this.body = body;
	    }

	});

	function blobText(body) {
	    return new PromiseObj(function (resolve) {

	        var reader = new FileReader();

	        reader.readAsText(body);
	        reader.onload = function () {
	            resolve(reader.result);
	        };

	    });
	}

	function isBlobText(body) {
	    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;
	}

	/**
	 * HTTP Request.
	 */

	var Request = function Request(options$$1) {

	    this.body = null;
	    this.params = {};

	    assign(this, options$$1, {
	        method: toUpper(options$$1.method || 'GET')
	    });

	    if (!(this.headers instanceof Headers)) {
	        this.headers = new Headers(this.headers);
	    }
	};

	Request.prototype.getUrl = function getUrl (){
	    return Url(this);
	};

	Request.prototype.getBody = function getBody (){
	    return this.body;
	};

	Request.prototype.respondWith = function respondWith (body, options$$1) {
	    return new Response(body, assign(options$$1 || {}, {url: this.getUrl()}));
	};

	/**
	 * Service for sending network requests.
	 */

	var COMMON_HEADERS = {'Accept': 'application/json, text/plain, */*'};
	var JSON_CONTENT_TYPE = {'Content-Type': 'application/json;charset=utf-8'};

	function Http(options$$1) {

	    var self = this || {}, client = Client(self.$vm);

	    defaults(options$$1 || {}, self.$options, Http.options);

	    Http.interceptors.forEach(function (handler) {

	        if (isString(handler)) {
	            handler = Http.interceptor[handler];
	        }

	        if (isFunction(handler)) {
	            client.use(handler);
	        }

	    });

	    return client(new Request(options$$1)).then(function (response) {

	        return response.ok ? response : PromiseObj.reject(response);

	    }, function (response) {

	        if (response instanceof Error) {
	            error(response);
	        }

	        return PromiseObj.reject(response);
	    });
	}

	Http.options = {};

	Http.headers = {
	    put: JSON_CONTENT_TYPE,
	    post: JSON_CONTENT_TYPE,
	    patch: JSON_CONTENT_TYPE,
	    delete: JSON_CONTENT_TYPE,
	    common: COMMON_HEADERS,
	    custom: {}
	};

	Http.interceptor = {before: before, method: method, jsonp: jsonp, json: json, form: form, header: header, cors: cors};
	Http.interceptors = ['before', 'method', 'jsonp', 'json', 'form', 'header', 'cors'];

	['get', 'delete', 'head', 'jsonp'].forEach(function (method$$1) {

	    Http[method$$1] = function (url, options$$1) {
	        return this(assign(options$$1 || {}, {url: url, method: method$$1}));
	    };

	});

	['post', 'put', 'patch'].forEach(function (method$$1) {

	    Http[method$$1] = function (url, body, options$$1) {
	        return this(assign(options$$1 || {}, {url: url, method: method$$1, body: body}));
	    };

	});

	/**
	 * Service for interacting with RESTful services.
	 */

	function Resource(url, params, actions, options$$1) {

	    var self = this || {}, resource = {};

	    actions = assign({},
	        Resource.actions,
	        actions
	    );

	    each(actions, function (action, name) {

	        action = merge({url: url, params: assign({}, params)}, options$$1, action);

	        resource[name] = function () {
	            return (self.$http || Http)(opts(action, arguments));
	        };
	    });

	    return resource;
	}

	function opts(action, args) {

	    var options$$1 = assign({}, action), params = {}, body;

	    switch (args.length) {

	        case 2:

	            params = args[0];
	            body = args[1];

	            break;

	        case 1:

	            if (/^(POST|PUT|PATCH)$/i.test(options$$1.method)) {
	                body = args[0];
	            } else {
	                params = args[0];
	            }

	            break;

	        case 0:

	            break;

	        default:

	            throw 'Expected up to 2 arguments [params, body], got ' + args.length + ' arguments';
	    }

	    options$$1.body = body;
	    options$$1.params = assign({}, options$$1.params, params);

	    return options$$1;
	}

	Resource.actions = {

	    get: {method: 'GET'},
	    save: {method: 'POST'},
	    query: {method: 'GET'},
	    update: {method: 'PUT'},
	    remove: {method: 'DELETE'},
	    delete: {method: 'DELETE'}

	};

	/**
	 * Install plugin.
	 */

	function plugin(Vue) {

	    if (plugin.installed) {
	        return;
	    }

	    Util(Vue);

	    Vue.url = Url;
	    Vue.http = Http;
	    Vue.resource = Resource;
	    Vue.Promise = PromiseObj;

	    Object.defineProperties(Vue.prototype, {

	        $url: {
	            get: function get() {
	                return options(Vue.url, this, this.$options.url);
	            }
	        },

	        $http: {
	            get: function get() {
	                return options(Vue.http, this, this.$options.http);
	            }
	        },

	        $resource: {
	            get: function get() {
	                return Vue.resource.bind(this);
	            }
	        },

	        $promise: {
	            get: function get() {
	                var this$1 = this;

	                return function (executor) { return new Vue.Promise(executor, this$1); };
	            }
	        }

	    });
	}

	if (typeof window !== 'undefined' && window.Vue) {
	    window.Vue.use(plugin);
	}

	module.exports = plugin;


/***/ }),
/* 6 */
/***/ (function(module, exports) {

	/* (ignored) */

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	  * vue-router v2.8.1
	  * (c) 2017 Evan You
	  * @license MIT
	  */
	'use strict';

	/*  */

	function assert (condition, message) {
	  if (!condition) {
	    throw new Error(("[vue-router] " + message))
	  }
	}

	function warn (condition, message) {
	  if (process.env.NODE_ENV !== 'production' && !condition) {
	    typeof console !== 'undefined' && console.warn(("[vue-router] " + message));
	  }
	}

	function isError (err) {
	  return Object.prototype.toString.call(err).indexOf('Error') > -1
	}

	var View = {
	  name: 'router-view',
	  functional: true,
	  props: {
	    name: {
	      type: String,
	      default: 'default'
	    }
	  },
	  render: function render (_, ref) {
	    var props = ref.props;
	    var children = ref.children;
	    var parent = ref.parent;
	    var data = ref.data;

	    data.routerView = true;

	    // directly use parent context's createElement() function
	    // so that components rendered by router-view can resolve named slots
	    var h = parent.$createElement;
	    var name = props.name;
	    var route = parent.$route;
	    var cache = parent._routerViewCache || (parent._routerViewCache = {});

	    // determine current view depth, also check to see if the tree
	    // has been toggled inactive but kept-alive.
	    var depth = 0;
	    var inactive = false;
	    while (parent && parent._routerRoot !== parent) {
	      if (parent.$vnode && parent.$vnode.data.routerView) {
	        depth++;
	      }
	      if (parent._inactive) {
	        inactive = true;
	      }
	      parent = parent.$parent;
	    }
	    data.routerViewDepth = depth;

	    // render previous view if the tree is inactive and kept-alive
	    if (inactive) {
	      return h(cache[name], data, children)
	    }

	    var matched = route.matched[depth];
	    // render empty node if no matched route
	    if (!matched) {
	      cache[name] = null;
	      return h()
	    }

	    var component = cache[name] = matched.components[name];

	    // attach instance registration hook
	    // this will be called in the instance's injected lifecycle hooks
	    data.registerRouteInstance = function (vm, val) {
	      // val could be undefined for unregistration
	      var current = matched.instances[name];
	      if (
	        (val && current !== vm) ||
	        (!val && current === vm)
	      ) {
	        matched.instances[name] = val;
	      }
	    }

	    // also register instance in prepatch hook
	    // in case the same component instance is reused across different routes
	    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {
	      matched.instances[name] = vnode.componentInstance;
	    };

	    // resolve props
	    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);
	    if (propsToPass) {
	      // clone to prevent mutation
	      propsToPass = data.props = extend({}, propsToPass);
	      // pass non-declared props as attrs
	      var attrs = data.attrs = data.attrs || {};
	      for (var key in propsToPass) {
	        if (!component.props || !(key in component.props)) {
	          attrs[key] = propsToPass[key];
	          delete propsToPass[key];
	        }
	      }
	    }

	    return h(component, data, children)
	  }
	};

	function resolveProps (route, config) {
	  switch (typeof config) {
	    case 'undefined':
	      return
	    case 'object':
	      return config
	    case 'function':
	      return config(route)
	    case 'boolean':
	      return config ? route.params : undefined
	    default:
	      if (process.env.NODE_ENV !== 'production') {
	        warn(
	          false,
	          "props in \"" + (route.path) + "\" is a " + (typeof config) + ", " +
	          "expecting an object, function or boolean."
	        );
	      }
	  }
	}

	function extend (to, from) {
	  for (var key in from) {
	    to[key] = from[key];
	  }
	  return to
	}

	/*  */

	var encodeReserveRE = /[!'()*]/g;
	var encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };
	var commaRE = /%2C/g;

	// fixed encodeURIComponent which is more conformant to RFC3986:
	// - escapes [!'()*]
	// - preserve commas
	var encode = function (str) { return encodeURIComponent(str)
	  .replace(encodeReserveRE, encodeReserveReplacer)
	  .replace(commaRE, ','); };

	var decode = decodeURIComponent;

	function resolveQuery (
	  query,
	  extraQuery,
	  _parseQuery
	) {
	  if ( extraQuery === void 0 ) extraQuery = {};

	  var parse = _parseQuery || parseQuery;
	  var parsedQuery;
	  try {
	    parsedQuery = parse(query || '');
	  } catch (e) {
	    process.env.NODE_ENV !== 'production' && warn(false, e.message);
	    parsedQuery = {};
	  }
	  for (var key in extraQuery) {
	    parsedQuery[key] = extraQuery[key];
	  }
	  return parsedQuery
	}

	function parseQuery (query) {
	  var res = {};

	  query = query.trim().replace(/^(\?|#|&)/, '');

	  if (!query) {
	    return res
	  }

	  query.split('&').forEach(function (param) {
	    var parts = param.replace(/\+/g, ' ').split('=');
	    var key = decode(parts.shift());
	    var val = parts.length > 0
	      ? decode(parts.join('='))
	      : null;

	    if (res[key] === undefined) {
	      res[key] = val;
	    } else if (Array.isArray(res[key])) {
	      res[key].push(val);
	    } else {
	      res[key] = [res[key], val];
	    }
	  });

	  return res
	}

	function stringifyQuery (obj) {
	  var res = obj ? Object.keys(obj).map(function (key) {
	    var val = obj[key];

	    if (val === undefined) {
	      return ''
	    }

	    if (val === null) {
	      return encode(key)
	    }

	    if (Array.isArray(val)) {
	      var result = [];
	      val.forEach(function (val2) {
	        if (val2 === undefined) {
	          return
	        }
	        if (val2 === null) {
	          result.push(encode(key));
	        } else {
	          result.push(encode(key) + '=' + encode(val2));
	        }
	      });
	      return result.join('&')
	    }

	    return encode(key) + '=' + encode(val)
	  }).filter(function (x) { return x.length > 0; }).join('&') : null;
	  return res ? ("?" + res) : ''
	}

	/*  */


	var trailingSlashRE = /\/?$/;

	function createRoute (
	  record,
	  location,
	  redirectedFrom,
	  router
	) {
	  var stringifyQuery$$1 = router && router.options.stringifyQuery;

	  var query = location.query || {};
	  try {
	    query = clone(query);
	  } catch (e) {}

	  var route = {
	    name: location.name || (record && record.name),
	    meta: (record && record.meta) || {},
	    path: location.path || '/',
	    hash: location.hash || '',
	    query: query,
	    params: location.params || {},
	    fullPath: getFullPath(location, stringifyQuery$$1),
	    matched: record ? formatMatch(record) : []
	  };
	  if (redirectedFrom) {
	    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);
	  }
	  return Object.freeze(route)
	}

	function clone (value) {
	  if (Array.isArray(value)) {
	    return value.map(clone)
	  } else if (value && typeof value === 'object') {
	    var res = {};
	    for (var key in value) {
	      res[key] = clone(value[key]);
	    }
	    return res
	  } else {
	    return value
	  }
	}

	// the starting route that represents the initial state
	var START = createRoute(null, {
	  path: '/'
	});

	function formatMatch (record) {
	  var res = [];
	  while (record) {
	    res.unshift(record);
	    record = record.parent;
	  }
	  return res
	}

	function getFullPath (
	  ref,
	  _stringifyQuery
	) {
	  var path = ref.path;
	  var query = ref.query; if ( query === void 0 ) query = {};
	  var hash = ref.hash; if ( hash === void 0 ) hash = '';

	  var stringify = _stringifyQuery || stringifyQuery;
	  return (path || '/') + stringify(query) + hash
	}

	function isSameRoute (a, b) {
	  if (b === START) {
	    return a === b
	  } else if (!b) {
	    return false
	  } else if (a.path && b.path) {
	    return (
	      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&
	      a.hash === b.hash &&
	      isObjectEqual(a.query, b.query)
	    )
	  } else if (a.name && b.name) {
	    return (
	      a.name === b.name &&
	      a.hash === b.hash &&
	      isObjectEqual(a.query, b.query) &&
	      isObjectEqual(a.params, b.params)
	    )
	  } else {
	    return false
	  }
	}

	function isObjectEqual (a, b) {
	  if ( a === void 0 ) a = {};
	  if ( b === void 0 ) b = {};

	  // handle null value #1566
	  if (!a || !b) { return a === b }
	  var aKeys = Object.keys(a);
	  var bKeys = Object.keys(b);
	  if (aKeys.length !== bKeys.length) {
	    return false
	  }
	  return aKeys.every(function (key) {
	    var aVal = a[key];
	    var bVal = b[key];
	    // check nested equality
	    if (typeof aVal === 'object' && typeof bVal === 'object') {
	      return isObjectEqual(aVal, bVal)
	    }
	    return String(aVal) === String(bVal)
	  })
	}

	function isIncludedRoute (current, target) {
	  return (
	    current.path.replace(trailingSlashRE, '/').indexOf(
	      target.path.replace(trailingSlashRE, '/')
	    ) === 0 &&
	    (!target.hash || current.hash === target.hash) &&
	    queryIncludes(current.query, target.query)
	  )
	}

	function queryIncludes (current, target) {
	  for (var key in target) {
	    if (!(key in current)) {
	      return false
	    }
	  }
	  return true
	}

	/*  */

	// work around weird flow bug
	var toTypes = [String, Object];
	var eventTypes = [String, Array];

	var Link = {
	  name: 'router-link',
	  props: {
	    to: {
	      type: toTypes,
	      required: true
	    },
	    tag: {
	      type: String,
	      default: 'a'
	    },
	    exact: Boolean,
	    append: Boolean,
	    replace: Boolean,
	    activeClass: String,
	    exactActiveClass: String,
	    event: {
	      type: eventTypes,
	      default: 'click'
	    }
	  },
	  render: function render (h) {
	    var this$1 = this;

	    var router = this.$router;
	    var current = this.$route;
	    var ref = router.resolve(this.to, current, this.append);
	    var location = ref.location;
	    var route = ref.route;
	    var href = ref.href;

	    var classes = {};
	    var globalActiveClass = router.options.linkActiveClass;
	    var globalExactActiveClass = router.options.linkExactActiveClass;
	    // Support global empty active class
	    var activeClassFallback = globalActiveClass == null
	            ? 'router-link-active'
	            : globalActiveClass;
	    var exactActiveClassFallback = globalExactActiveClass == null
	            ? 'router-link-exact-active'
	            : globalExactActiveClass;
	    var activeClass = this.activeClass == null
	            ? activeClassFallback
	            : this.activeClass;
	    var exactActiveClass = this.exactActiveClass == null
	            ? exactActiveClassFallback
	            : this.exactActiveClass;
	    var compareTarget = location.path
	      ? createRoute(null, location, null, router)
	      : route;

	    classes[exactActiveClass] = isSameRoute(current, compareTarget);
	    classes[activeClass] = this.exact
	      ? classes[exactActiveClass]
	      : isIncludedRoute(current, compareTarget);

	    var handler = function (e) {
	      if (guardEvent(e)) {
	        if (this$1.replace) {
	          router.replace(location);
	        } else {
	          router.push(location);
	        }
	      }
	    };

	    var on = { click: guardEvent };
	    if (Array.isArray(this.event)) {
	      this.event.forEach(function (e) { on[e] = handler; });
	    } else {
	      on[this.event] = handler;
	    }

	    var data = {
	      class: classes
	    };

	    if (this.tag === 'a') {
	      data.on = on;
	      data.attrs = { href: href };
	    } else {
	      // find the first <a> child and apply listener and href
	      var a = findAnchor(this.$slots.default);
	      if (a) {
	        // in case the <a> is a static node
	        a.isStatic = false;
	        var extend = _Vue.util.extend;
	        var aData = a.data = extend({}, a.data);
	        aData.on = on;
	        var aAttrs = a.data.attrs = extend({}, a.data.attrs);
	        aAttrs.href = href;
	      } else {
	        // doesn't have <a> child, apply listener to self
	        data.on = on;
	      }
	    }

	    return h(this.tag, data, this.$slots.default)
	  }
	};

	function guardEvent (e) {
	  // don't redirect with control keys
	  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }
	  // don't redirect when preventDefault called
	  if (e.defaultPrevented) { return }
	  // don't redirect on right click
	  if (e.button !== undefined && e.button !== 0) { return }
	  // don't redirect if `target="_blank"`
	  if (e.currentTarget && e.currentTarget.getAttribute) {
	    var target = e.currentTarget.getAttribute('target');
	    if (/\b_blank\b/i.test(target)) { return }
	  }
	  // this may be a Weex event which doesn't have this method
	  if (e.preventDefault) {
	    e.preventDefault();
	  }
	  return true
	}

	function findAnchor (children) {
	  if (children) {
	    var child;
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      if (child.tag === 'a') {
	        return child
	      }
	      if (child.children && (child = findAnchor(child.children))) {
	        return child
	      }
	    }
	  }
	}

	var _Vue;

	function install (Vue) {
	  if (install.installed && _Vue === Vue) { return }
	  install.installed = true;

	  _Vue = Vue;

	  var isDef = function (v) { return v !== undefined; };

	  var registerInstance = function (vm, callVal) {
	    var i = vm.$options._parentVnode;
	    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {
	      i(vm, callVal);
	    }
	  };

	  Vue.mixin({
	    beforeCreate: function beforeCreate () {
	      if (isDef(this.$options.router)) {
	        this._routerRoot = this;
	        this._router = this.$options.router;
	        this._router.init(this);
	        Vue.util.defineReactive(this, '_route', this._router.history.current);
	      } else {
	        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;
	      }
	      registerInstance(this, this);
	    },
	    destroyed: function destroyed () {
	      registerInstance(this);
	    }
	  });

	  Object.defineProperty(Vue.prototype, '$router', {
	    get: function get () { return this._routerRoot._router }
	  });

	  Object.defineProperty(Vue.prototype, '$route', {
	    get: function get () { return this._routerRoot._route }
	  });

	  Vue.component('router-view', View);
	  Vue.component('router-link', Link);

	  var strats = Vue.config.optionMergeStrategies;
	  // use the same hook merging strategy for route hooks
	  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;
	}

	/*  */

	var inBrowser = typeof window !== 'undefined';

	/*  */

	function resolvePath (
	  relative,
	  base,
	  append
	) {
	  var firstChar = relative.charAt(0);
	  if (firstChar === '/') {
	    return relative
	  }

	  if (firstChar === '?' || firstChar === '#') {
	    return base + relative
	  }

	  var stack = base.split('/');

	  // remove trailing segment if:
	  // - not appending
	  // - appending to trailing slash (last segment is empty)
	  if (!append || !stack[stack.length - 1]) {
	    stack.pop();
	  }

	  // resolve relative path
	  var segments = relative.replace(/^\//, '').split('/');
	  for (var i = 0; i < segments.length; i++) {
	    var segment = segments[i];
	    if (segment === '..') {
	      stack.pop();
	    } else if (segment !== '.') {
	      stack.push(segment);
	    }
	  }

	  // ensure leading slash
	  if (stack[0] !== '') {
	    stack.unshift('');
	  }

	  return stack.join('/')
	}

	function parsePath (path) {
	  var hash = '';
	  var query = '';

	  var hashIndex = path.indexOf('#');
	  if (hashIndex >= 0) {
	    hash = path.slice(hashIndex);
	    path = path.slice(0, hashIndex);
	  }

	  var queryIndex = path.indexOf('?');
	  if (queryIndex >= 0) {
	    query = path.slice(queryIndex + 1);
	    path = path.slice(0, queryIndex);
	  }

	  return {
	    path: path,
	    query: query,
	    hash: hash
	  }
	}

	function cleanPath (path) {
	  return path.replace(/\/\//g, '/')
	}

	var isarray = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};

	/**
	 * Expose `pathToRegexp`.
	 */
	var pathToRegexp_1 = pathToRegexp;
	var parse_1 = parse;
	var compile_1 = compile;
	var tokensToFunction_1 = tokensToFunction;
	var tokensToRegExp_1 = tokensToRegExp;

	/**
	 * The main path matching regexp utility.
	 *
	 * @type {RegExp}
	 */
	var PATH_REGEXP = new RegExp([
	  // Match escaped characters that would otherwise appear in future matches.
	  // This allows the user to escape special characters that won't transform.
	  '(\\\\.)',
	  // Match Express-style parameters and un-named parameters with a prefix
	  // and optional suffixes. Matches appear as:
	  //
	  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
	  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
	  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
	  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
	].join('|'), 'g');

	/**
	 * Parse a string for the raw tokens.
	 *
	 * @param  {string}  str
	 * @param  {Object=} options
	 * @return {!Array}
	 */
	function parse (str, options) {
	  var tokens = [];
	  var key = 0;
	  var index = 0;
	  var path = '';
	  var defaultDelimiter = options && options.delimiter || '/';
	  var res;

	  while ((res = PATH_REGEXP.exec(str)) != null) {
	    var m = res[0];
	    var escaped = res[1];
	    var offset = res.index;
	    path += str.slice(index, offset);
	    index = offset + m.length;

	    // Ignore already escaped sequences.
	    if (escaped) {
	      path += escaped[1];
	      continue
	    }

	    var next = str[index];
	    var prefix = res[2];
	    var name = res[3];
	    var capture = res[4];
	    var group = res[5];
	    var modifier = res[6];
	    var asterisk = res[7];

	    // Push the current path onto the tokens.
	    if (path) {
	      tokens.push(path);
	      path = '';
	    }

	    var partial = prefix != null && next != null && next !== prefix;
	    var repeat = modifier === '+' || modifier === '*';
	    var optional = modifier === '?' || modifier === '*';
	    var delimiter = res[2] || defaultDelimiter;
	    var pattern = capture || group;

	    tokens.push({
	      name: name || key++,
	      prefix: prefix || '',
	      delimiter: delimiter,
	      optional: optional,
	      repeat: repeat,
	      partial: partial,
	      asterisk: !!asterisk,
	      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
	    });
	  }

	  // Match any characters still remaining.
	  if (index < str.length) {
	    path += str.substr(index);
	  }

	  // If the path exists, push it onto the end.
	  if (path) {
	    tokens.push(path);
	  }

	  return tokens
	}

	/**
	 * Compile a string to a template function for the path.
	 *
	 * @param  {string}             str
	 * @param  {Object=}            options
	 * @return {!function(Object=, Object=)}
	 */
	function compile (str, options) {
	  return tokensToFunction(parse(str, options))
	}

	/**
	 * Prettier encoding of URI path segments.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeURIComponentPretty (str) {
	  return encodeURI(str).replace(/[\/?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}

	/**
	 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeAsterisk (str) {
	  return encodeURI(str).replace(/[?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}

	/**
	 * Expose a method for transforming tokens into the path function.
	 */
	function tokensToFunction (tokens) {
	  // Compile all the tokens into regexps.
	  var matches = new Array(tokens.length);

	  // Compile all the patterns before compilation.
	  for (var i = 0; i < tokens.length; i++) {
	    if (typeof tokens[i] === 'object') {
	      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
	    }
	  }

	  return function (obj, opts) {
	    var path = '';
	    var data = obj || {};
	    var options = opts || {};
	    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;

	    for (var i = 0; i < tokens.length; i++) {
	      var token = tokens[i];

	      if (typeof token === 'string') {
	        path += token;

	        continue
	      }

	      var value = data[token.name];
	      var segment;

	      if (value == null) {
	        if (token.optional) {
	          // Prepend partial segment prefixes.
	          if (token.partial) {
	            path += token.prefix;
	          }

	          continue
	        } else {
	          throw new TypeError('Expected "' + token.name + '" to be defined')
	        }
	      }

	      if (isarray(value)) {
	        if (!token.repeat) {
	          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
	        }

	        if (value.length === 0) {
	          if (token.optional) {
	            continue
	          } else {
	            throw new TypeError('Expected "' + token.name + '" to not be empty')
	          }
	        }

	        for (var j = 0; j < value.length; j++) {
	          segment = encode(value[j]);

	          if (!matches[i].test(segment)) {
	            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
	          }

	          path += (j === 0 ? token.prefix : token.delimiter) + segment;
	        }

	        continue
	      }

	      segment = token.asterisk ? encodeAsterisk(value) : encode(value);

	      if (!matches[i].test(segment)) {
	        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
	      }

	      path += token.prefix + segment;
	    }

	    return path
	  }
	}

	/**
	 * Escape a regular expression string.
	 *
	 * @param  {string} str
	 * @return {string}
	 */
	function escapeString (str) {
	  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
	}

	/**
	 * Escape the capturing group by escaping special characters and meaning.
	 *
	 * @param  {string} group
	 * @return {string}
	 */
	function escapeGroup (group) {
	  return group.replace(/([=!:$\/()])/g, '\\$1')
	}

	/**
	 * Attach the keys as a property of the regexp.
	 *
	 * @param  {!RegExp} re
	 * @param  {Array}   keys
	 * @return {!RegExp}
	 */
	function attachKeys (re, keys) {
	  re.keys = keys;
	  return re
	}

	/**
	 * Get the flags for a regexp from the options.
	 *
	 * @param  {Object} options
	 * @return {string}
	 */
	function flags (options) {
	  return options.sensitive ? '' : 'i'
	}

	/**
	 * Pull out keys from a regexp.
	 *
	 * @param  {!RegExp} path
	 * @param  {!Array}  keys
	 * @return {!RegExp}
	 */
	function regexpToRegexp (path, keys) {
	  // Use a negative lookahead to match only capturing groups.
	  var groups = path.source.match(/\((?!\?)/g);

	  if (groups) {
	    for (var i = 0; i < groups.length; i++) {
	      keys.push({
	        name: i,
	        prefix: null,
	        delimiter: null,
	        optional: false,
	        repeat: false,
	        partial: false,
	        asterisk: false,
	        pattern: null
	      });
	    }
	  }

	  return attachKeys(path, keys)
	}

	/**
	 * Transform an array into a regexp.
	 *
	 * @param  {!Array}  path
	 * @param  {Array}   keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function arrayToRegexp (path, keys, options) {
	  var parts = [];

	  for (var i = 0; i < path.length; i++) {
	    parts.push(pathToRegexp(path[i], keys, options).source);
	  }

	  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));

	  return attachKeys(regexp, keys)
	}

	/**
	 * Create a path regexp from string input.
	 *
	 * @param  {string}  path
	 * @param  {!Array}  keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function stringToRegexp (path, keys, options) {
	  return tokensToRegExp(parse(path, options), keys, options)
	}

	/**
	 * Expose a function for taking tokens and returning a RegExp.
	 *
	 * @param  {!Array}          tokens
	 * @param  {(Array|Object)=} keys
	 * @param  {Object=}         options
	 * @return {!RegExp}
	 */
	function tokensToRegExp (tokens, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options);
	    keys = [];
	  }

	  options = options || {};

	  var strict = options.strict;
	  var end = options.end !== false;
	  var route = '';

	  // Iterate over the tokens and create our regexp string.
	  for (var i = 0; i < tokens.length; i++) {
	    var token = tokens[i];

	    if (typeof token === 'string') {
	      route += escapeString(token);
	    } else {
	      var prefix = escapeString(token.prefix);
	      var capture = '(?:' + token.pattern + ')';

	      keys.push(token);

	      if (token.repeat) {
	        capture += '(?:' + prefix + capture + ')*';
	      }

	      if (token.optional) {
	        if (!token.partial) {
	          capture = '(?:' + prefix + '(' + capture + '))?';
	        } else {
	          capture = prefix + '(' + capture + ')?';
	        }
	      } else {
	        capture = prefix + '(' + capture + ')';
	      }

	      route += capture;
	    }
	  }

	  var delimiter = escapeString(options.delimiter || '/');
	  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

	  // In non-strict mode we allow a slash at the end of match. If the path to
	  // match already ends with a slash, we remove it for consistency. The slash
	  // is valid at the end of a path match, not in the middle. This is important
	  // in non-ending mode, where "/test/" shouldn't match "/test//route".
	  if (!strict) {
	    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';
	  }

	  if (end) {
	    route += '$';
	  } else {
	    // In non-ending mode, we need the capturing groups to match as much as
	    // possible by using a positive lookahead to the end or next path segment.
	    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
	  }

	  return attachKeys(new RegExp('^' + route, flags(options)), keys)
	}

	/**
	 * Normalize the given path string, returning a regular expression.
	 *
	 * An empty array can be passed in for the keys, which will hold the
	 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
	 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
	 *
	 * @param  {(string|RegExp|Array)} path
	 * @param  {(Array|Object)=}       keys
	 * @param  {Object=}               options
	 * @return {!RegExp}
	 */
	function pathToRegexp (path, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options);
	    keys = [];
	  }

	  options = options || {};

	  if (path instanceof RegExp) {
	    return regexpToRegexp(path, /** @type {!Array} */ (keys))
	  }

	  if (isarray(path)) {
	    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
	  }

	  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
	}

	pathToRegexp_1.parse = parse_1;
	pathToRegexp_1.compile = compile_1;
	pathToRegexp_1.tokensToFunction = tokensToFunction_1;
	pathToRegexp_1.tokensToRegExp = tokensToRegExp_1;

	/*  */

	// $flow-disable-line
	var regexpCompileCache = Object.create(null);

	function fillParams (
	  path,
	  params,
	  routeMsg
	) {
	  try {
	    var filler =
	      regexpCompileCache[path] ||
	      (regexpCompileCache[path] = pathToRegexp_1.compile(path));
	    return filler(params || {}, { pretty: true })
	  } catch (e) {
	    if (process.env.NODE_ENV !== 'production') {
	      warn(false, ("missing param for " + routeMsg + ": " + (e.message)));
	    }
	    return ''
	  }
	}

	/*  */

	function createRouteMap (
	  routes,
	  oldPathList,
	  oldPathMap,
	  oldNameMap
	) {
	  // the path list is used to control path matching priority
	  var pathList = oldPathList || [];
	  // $flow-disable-line
	  var pathMap = oldPathMap || Object.create(null);
	  // $flow-disable-line
	  var nameMap = oldNameMap || Object.create(null);

	  routes.forEach(function (route) {
	    addRouteRecord(pathList, pathMap, nameMap, route);
	  });

	  // ensure wildcard routes are always at the end
	  for (var i = 0, l = pathList.length; i < l; i++) {
	    if (pathList[i] === '*') {
	      pathList.push(pathList.splice(i, 1)[0]);
	      l--;
	      i--;
	    }
	  }

	  return {
	    pathList: pathList,
	    pathMap: pathMap,
	    nameMap: nameMap
	  }
	}

	function addRouteRecord (
	  pathList,
	  pathMap,
	  nameMap,
	  route,
	  parent,
	  matchAs
	) {
	  var path = route.path;
	  var name = route.name;
	  if (process.env.NODE_ENV !== 'production') {
	    assert(path != null, "\"path\" is required in a route configuration.");
	    assert(
	      typeof route.component !== 'string',
	      "route config \"component\" for path: " + (String(path || name)) + " cannot be a " +
	      "string id. Use an actual component instead."
	    );
	  }

	  var pathToRegexpOptions = route.pathToRegexpOptions || {};
	  var normalizedPath = normalizePath(
	    path,
	    parent,
	    pathToRegexpOptions.strict
	  );

	  if (typeof route.caseSensitive === 'boolean') {
	    pathToRegexpOptions.sensitive = route.caseSensitive;
	  }

	  var record = {
	    path: normalizedPath,
	    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),
	    components: route.components || { default: route.component },
	    instances: {},
	    name: name,
	    parent: parent,
	    matchAs: matchAs,
	    redirect: route.redirect,
	    beforeEnter: route.beforeEnter,
	    meta: route.meta || {},
	    props: route.props == null
	      ? {}
	      : route.components
	        ? route.props
	        : { default: route.props }
	  };

	  if (route.children) {
	    // Warn if route is named, does not redirect and has a default child route.
	    // If users navigate to this route by name, the default child will
	    // not be rendered (GH Issue #629)
	    if (process.env.NODE_ENV !== 'production') {
	      if (route.name && !route.redirect && route.children.some(function (child) { return /^\/?$/.test(child.path); })) {
	        warn(
	          false,
	          "Named Route '" + (route.name) + "' has a default child route. " +
	          "When navigating to this named route (:to=\"{name: '" + (route.name) + "'\"), " +
	          "the default child route will not be rendered. Remove the name from " +
	          "this route and use the name of the default child route for named " +
	          "links instead."
	        );
	      }
	    }
	    route.children.forEach(function (child) {
	      var childMatchAs = matchAs
	        ? cleanPath((matchAs + "/" + (child.path)))
	        : undefined;
	      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);
	    });
	  }

	  if (route.alias !== undefined) {
	    var aliases = Array.isArray(route.alias)
	      ? route.alias
	      : [route.alias];

	    aliases.forEach(function (alias) {
	      var aliasRoute = {
	        path: alias,
	        children: route.children
	      };
	      addRouteRecord(
	        pathList,
	        pathMap,
	        nameMap,
	        aliasRoute,
	        parent,
	        record.path || '/' // matchAs
	      );
	    });
	  }

	  if (!pathMap[record.path]) {
	    pathList.push(record.path);
	    pathMap[record.path] = record;
	  }

	  if (name) {
	    if (!nameMap[name]) {
	      nameMap[name] = record;
	    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {
	      warn(
	        false,
	        "Duplicate named routes definition: " +
	        "{ name: \"" + name + "\", path: \"" + (record.path) + "\" }"
	      );
	    }
	  }
	}

	function compileRouteRegex (path, pathToRegexpOptions) {
	  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);
	  if (process.env.NODE_ENV !== 'production') {
	    var keys = Object.create(null);
	    regex.keys.forEach(function (key) {
	      warn(!keys[key.name], ("Duplicate param keys in route with path: \"" + path + "\""));
	      keys[key.name] = true;
	    });
	  }
	  return regex
	}

	function normalizePath (path, parent, strict) {
	  if (!strict) { path = path.replace(/\/$/, ''); }
	  if (path[0] === '/') { return path }
	  if (parent == null) { return path }
	  return cleanPath(((parent.path) + "/" + path))
	}

	/*  */


	function normalizeLocation (
	  raw,
	  current,
	  append,
	  router
	) {
	  var next = typeof raw === 'string' ? { path: raw } : raw;
	  // named target
	  if (next.name || next._normalized) {
	    return next
	  }

	  // relative params
	  if (!next.path && next.params && current) {
	    next = assign({}, next);
	    next._normalized = true;
	    var params = assign(assign({}, current.params), next.params);
	    if (current.name) {
	      next.name = current.name;
	      next.params = params;
	    } else if (current.matched.length) {
	      var rawPath = current.matched[current.matched.length - 1].path;
	      next.path = fillParams(rawPath, params, ("path " + (current.path)));
	    } else if (process.env.NODE_ENV !== 'production') {
	      warn(false, "relative params navigation requires a current route.");
	    }
	    return next
	  }

	  var parsedPath = parsePath(next.path || '');
	  var basePath = (current && current.path) || '/';
	  var path = parsedPath.path
	    ? resolvePath(parsedPath.path, basePath, append || next.append)
	    : basePath;

	  var query = resolveQuery(
	    parsedPath.query,
	    next.query,
	    router && router.options.parseQuery
	  );

	  var hash = next.hash || parsedPath.hash;
	  if (hash && hash.charAt(0) !== '#') {
	    hash = "#" + hash;
	  }

	  return {
	    _normalized: true,
	    path: path,
	    query: query,
	    hash: hash
	  }
	}

	function assign (a, b) {
	  for (var key in b) {
	    a[key] = b[key];
	  }
	  return a
	}

	/*  */


	function createMatcher (
	  routes,
	  router
	) {
	  var ref = createRouteMap(routes);
	  var pathList = ref.pathList;
	  var pathMap = ref.pathMap;
	  var nameMap = ref.nameMap;

	  function addRoutes (routes) {
	    createRouteMap(routes, pathList, pathMap, nameMap);
	  }

	  function match (
	    raw,
	    currentRoute,
	    redirectedFrom
	  ) {
	    var location = normalizeLocation(raw, currentRoute, false, router);
	    var name = location.name;

	    if (name) {
	      var record = nameMap[name];
	      if (process.env.NODE_ENV !== 'production') {
	        warn(record, ("Route with name '" + name + "' does not exist"));
	      }
	      if (!record) { return _createRoute(null, location) }
	      var paramNames = record.regex.keys
	        .filter(function (key) { return !key.optional; })
	        .map(function (key) { return key.name; });

	      if (typeof location.params !== 'object') {
	        location.params = {};
	      }

	      if (currentRoute && typeof currentRoute.params === 'object') {
	        for (var key in currentRoute.params) {
	          if (!(key in location.params) && paramNames.indexOf(key) > -1) {
	            location.params[key] = currentRoute.params[key];
	          }
	        }
	      }

	      if (record) {
	        location.path = fillParams(record.path, location.params, ("named route \"" + name + "\""));
	        return _createRoute(record, location, redirectedFrom)
	      }
	    } else if (location.path) {
	      location.params = {};
	      for (var i = 0; i < pathList.length; i++) {
	        var path = pathList[i];
	        var record$1 = pathMap[path];
	        if (matchRoute(record$1.regex, location.path, location.params)) {
	          return _createRoute(record$1, location, redirectedFrom)
	        }
	      }
	    }
	    // no match
	    return _createRoute(null, location)
	  }

	  function redirect (
	    record,
	    location
	  ) {
	    var originalRedirect = record.redirect;
	    var redirect = typeof originalRedirect === 'function'
	        ? originalRedirect(createRoute(record, location, null, router))
	        : originalRedirect;

	    if (typeof redirect === 'string') {
	      redirect = { path: redirect };
	    }

	    if (!redirect || typeof redirect !== 'object') {
	      if (process.env.NODE_ENV !== 'production') {
	        warn(
	          false, ("invalid redirect option: " + (JSON.stringify(redirect)))
	        );
	      }
	      return _createRoute(null, location)
	    }

	    var re = redirect;
	    var name = re.name;
	    var path = re.path;
	    var query = location.query;
	    var hash = location.hash;
	    var params = location.params;
	    query = re.hasOwnProperty('query') ? re.query : query;
	    hash = re.hasOwnProperty('hash') ? re.hash : hash;
	    params = re.hasOwnProperty('params') ? re.params : params;

	    if (name) {
	      // resolved named direct
	      var targetRecord = nameMap[name];
	      if (process.env.NODE_ENV !== 'production') {
	        assert(targetRecord, ("redirect failed: named route \"" + name + "\" not found."));
	      }
	      return match({
	        _normalized: true,
	        name: name,
	        query: query,
	        hash: hash,
	        params: params
	      }, undefined, location)
	    } else if (path) {
	      // 1. resolve relative redirect
	      var rawPath = resolveRecordPath(path, record);
	      // 2. resolve params
	      var resolvedPath = fillParams(rawPath, params, ("redirect route with path \"" + rawPath + "\""));
	      // 3. rematch with existing query and hash
	      return match({
	        _normalized: true,
	        path: resolvedPath,
	        query: query,
	        hash: hash
	      }, undefined, location)
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        warn(false, ("invalid redirect option: " + (JSON.stringify(redirect))));
	      }
	      return _createRoute(null, location)
	    }
	  }

	  function alias (
	    record,
	    location,
	    matchAs
	  ) {
	    var aliasedPath = fillParams(matchAs, location.params, ("aliased route with path \"" + matchAs + "\""));
	    var aliasedMatch = match({
	      _normalized: true,
	      path: aliasedPath
	    });
	    if (aliasedMatch) {
	      var matched = aliasedMatch.matched;
	      var aliasedRecord = matched[matched.length - 1];
	      location.params = aliasedMatch.params;
	      return _createRoute(aliasedRecord, location)
	    }
	    return _createRoute(null, location)
	  }

	  function _createRoute (
	    record,
	    location,
	    redirectedFrom
	  ) {
	    if (record && record.redirect) {
	      return redirect(record, redirectedFrom || location)
	    }
	    if (record && record.matchAs) {
	      return alias(record, location, record.matchAs)
	    }
	    return createRoute(record, location, redirectedFrom, router)
	  }

	  return {
	    match: match,
	    addRoutes: addRoutes
	  }
	}

	function matchRoute (
	  regex,
	  path,
	  params
	) {
	  var m = path.match(regex);

	  if (!m) {
	    return false
	  } else if (!params) {
	    return true
	  }

	  for (var i = 1, len = m.length; i < len; ++i) {
	    var key = regex.keys[i - 1];
	    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];
	    if (key) {
	      params[key.name] = val;
	    }
	  }

	  return true
	}

	function resolveRecordPath (path, record) {
	  return resolvePath(path, record.parent ? record.parent.path : '/', true)
	}

	/*  */


	var positionStore = Object.create(null);

	function setupScroll () {
	  // Fix for #1585 for Firefox
	  window.history.replaceState({ key: getStateKey() }, '');
	  window.addEventListener('popstate', function (e) {
	    saveScrollPosition();
	    if (e.state && e.state.key) {
	      setStateKey(e.state.key);
	    }
	  });
	}

	function handleScroll (
	  router,
	  to,
	  from,
	  isPop
	) {
	  if (!router.app) {
	    return
	  }

	  var behavior = router.options.scrollBehavior;
	  if (!behavior) {
	    return
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    assert(typeof behavior === 'function', "scrollBehavior must be a function");
	  }

	  // wait until re-render finishes before scrolling
	  router.app.$nextTick(function () {
	    var position = getScrollPosition();
	    var shouldScroll = behavior(to, from, isPop ? position : null);

	    if (!shouldScroll) {
	      return
	    }

	    if (typeof shouldScroll.then === 'function') {
	      shouldScroll.then(function (shouldScroll) {
	        scrollToPosition((shouldScroll), position);
	      }).catch(function (err) {
	        if (process.env.NODE_ENV !== 'production') {
	          assert(false, err.toString());
	        }
	      });
	    } else {
	      scrollToPosition(shouldScroll, position);
	    }
	  });
	}

	function saveScrollPosition () {
	  var key = getStateKey();
	  if (key) {
	    positionStore[key] = {
	      x: window.pageXOffset,
	      y: window.pageYOffset
	    };
	  }
	}

	function getScrollPosition () {
	  var key = getStateKey();
	  if (key) {
	    return positionStore[key]
	  }
	}

	function getElementPosition (el, offset) {
	  var docEl = document.documentElement;
	  var docRect = docEl.getBoundingClientRect();
	  var elRect = el.getBoundingClientRect();
	  return {
	    x: elRect.left - docRect.left - offset.x,
	    y: elRect.top - docRect.top - offset.y
	  }
	}

	function isValidPosition (obj) {
	  return isNumber(obj.x) || isNumber(obj.y)
	}

	function normalizePosition (obj) {
	  return {
	    x: isNumber(obj.x) ? obj.x : window.pageXOffset,
	    y: isNumber(obj.y) ? obj.y : window.pageYOffset
	  }
	}

	function normalizeOffset (obj) {
	  return {
	    x: isNumber(obj.x) ? obj.x : 0,
	    y: isNumber(obj.y) ? obj.y : 0
	  }
	}

	function isNumber (v) {
	  return typeof v === 'number'
	}

	function scrollToPosition (shouldScroll, position) {
	  var isObject = typeof shouldScroll === 'object';
	  if (isObject && typeof shouldScroll.selector === 'string') {
	    var el = document.querySelector(shouldScroll.selector);
	    if (el) {
	      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};
	      offset = normalizeOffset(offset);
	      position = getElementPosition(el, offset);
	    } else if (isValidPosition(shouldScroll)) {
	      position = normalizePosition(shouldScroll);
	    }
	  } else if (isObject && isValidPosition(shouldScroll)) {
	    position = normalizePosition(shouldScroll);
	  }

	  if (position) {
	    window.scrollTo(position.x, position.y);
	  }
	}

	/*  */

	var supportsPushState = inBrowser && (function () {
	  var ua = window.navigator.userAgent;

	  if (
	    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&
	    ua.indexOf('Mobile Safari') !== -1 &&
	    ua.indexOf('Chrome') === -1 &&
	    ua.indexOf('Windows Phone') === -1
	  ) {
	    return false
	  }

	  return window.history && 'pushState' in window.history
	})();

	// use User Timing api (if present) for more accurate key precision
	var Time = inBrowser && window.performance && window.performance.now
	  ? window.performance
	  : Date;

	var _key = genKey();

	function genKey () {
	  return Time.now().toFixed(3)
	}

	function getStateKey () {
	  return _key
	}

	function setStateKey (key) {
	  _key = key;
	}

	function pushState (url, replace) {
	  saveScrollPosition();
	  // try...catch the pushState call to get around Safari
	  // DOM Exception 18 where it limits to 100 pushState calls
	  var history = window.history;
	  try {
	    if (replace) {
	      history.replaceState({ key: _key }, '', url);
	    } else {
	      _key = genKey();
	      history.pushState({ key: _key }, '', url);
	    }
	  } catch (e) {
	    window.location[replace ? 'replace' : 'assign'](url);
	  }
	}

	function replaceState (url) {
	  pushState(url, true);
	}

	/*  */

	function runQueue (queue, fn, cb) {
	  var step = function (index) {
	    if (index >= queue.length) {
	      cb();
	    } else {
	      if (queue[index]) {
	        fn(queue[index], function () {
	          step(index + 1);
	        });
	      } else {
	        step(index + 1);
	      }
	    }
	  };
	  step(0);
	}

	/*  */

	function resolveAsyncComponents (matched) {
	  return function (to, from, next) {
	    var hasAsync = false;
	    var pending = 0;
	    var error = null;

	    flatMapComponents(matched, function (def, _, match, key) {
	      // if it's a function and doesn't have cid attached,
	      // assume it's an async component resolve function.
	      // we are not using Vue's default async resolving mechanism because
	      // we want to halt the navigation until the incoming component has been
	      // resolved.
	      if (typeof def === 'function' && def.cid === undefined) {
	        hasAsync = true;
	        pending++;

	        var resolve = once(function (resolvedDef) {
	          if (isESModule(resolvedDef)) {
	            resolvedDef = resolvedDef.default;
	          }
	          // save resolved on async factory in case it's used elsewhere
	          def.resolved = typeof resolvedDef === 'function'
	            ? resolvedDef
	            : _Vue.extend(resolvedDef);
	          match.components[key] = resolvedDef;
	          pending--;
	          if (pending <= 0) {
	            next();
	          }
	        });

	        var reject = once(function (reason) {
	          var msg = "Failed to resolve async component " + key + ": " + reason;
	          process.env.NODE_ENV !== 'production' && warn(false, msg);
	          if (!error) {
	            error = isError(reason)
	              ? reason
	              : new Error(msg);
	            next(error);
	          }
	        });

	        var res;
	        try {
	          res = def(resolve, reject);
	        } catch (e) {
	          reject(e);
	        }
	        if (res) {
	          if (typeof res.then === 'function') {
	            res.then(resolve, reject);
	          } else {
	            // new syntax in Vue 2.3
	            var comp = res.component;
	            if (comp && typeof comp.then === 'function') {
	              comp.then(resolve, reject);
	            }
	          }
	        }
	      }
	    });

	    if (!hasAsync) { next(); }
	  }
	}

	function flatMapComponents (
	  matched,
	  fn
	) {
	  return flatten(matched.map(function (m) {
	    return Object.keys(m.components).map(function (key) { return fn(
	      m.components[key],
	      m.instances[key],
	      m, key
	    ); })
	  }))
	}

	function flatten (arr) {
	  return Array.prototype.concat.apply([], arr)
	}

	var hasSymbol =
	  typeof Symbol === 'function' &&
	  typeof Symbol.toStringTag === 'symbol';

	function isESModule (obj) {
	  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')
	}

	// in Webpack 2, require.ensure now also returns a Promise
	// so the resolve/reject functions may get called an extra time
	// if the user uses an arrow function shorthand that happens to
	// return that Promise.
	function once (fn) {
	  var called = false;
	  return function () {
	    var args = [], len = arguments.length;
	    while ( len-- ) args[ len ] = arguments[ len ];

	    if (called) { return }
	    called = true;
	    return fn.apply(this, args)
	  }
	}

	/*  */

	var History = function History (router, base) {
	  this.router = router;
	  this.base = normalizeBase(base);
	  // start with a route object that stands for "nowhere"
	  this.current = START;
	  this.pending = null;
	  this.ready = false;
	  this.readyCbs = [];
	  this.readyErrorCbs = [];
	  this.errorCbs = [];
	};

	History.prototype.listen = function listen (cb) {
	  this.cb = cb;
	};

	History.prototype.onReady = function onReady (cb, errorCb) {
	  if (this.ready) {
	    cb();
	  } else {
	    this.readyCbs.push(cb);
	    if (errorCb) {
	      this.readyErrorCbs.push(errorCb);
	    }
	  }
	};

	History.prototype.onError = function onError (errorCb) {
	  this.errorCbs.push(errorCb);
	};

	History.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {
	    var this$1 = this;

	  var route = this.router.match(location, this.current);
	  this.confirmTransition(route, function () {
	    this$1.updateRoute(route);
	    onComplete && onComplete(route);
	    this$1.ensureURL();

	    // fire ready cbs once
	    if (!this$1.ready) {
	      this$1.ready = true;
	      this$1.readyCbs.forEach(function (cb) { cb(route); });
	    }
	  }, function (err) {
	    if (onAbort) {
	      onAbort(err);
	    }
	    if (err && !this$1.ready) {
	      this$1.ready = true;
	      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });
	    }
	  });
	};

	History.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {
	    var this$1 = this;

	  var current = this.current;
	  var abort = function (err) {
	    if (isError(err)) {
	      if (this$1.errorCbs.length) {
	        this$1.errorCbs.forEach(function (cb) { cb(err); });
	      } else {
	        warn(false, 'uncaught error during route navigation:');
	        console.error(err);
	      }
	    }
	    onAbort && onAbort(err);
	  };
	  if (
	    isSameRoute(route, current) &&
	    // in the case the route map has been dynamically appended to
	    route.matched.length === current.matched.length
	  ) {
	    this.ensureURL();
	    return abort()
	  }

	  var ref = resolveQueue(this.current.matched, route.matched);
	    var updated = ref.updated;
	    var deactivated = ref.deactivated;
	    var activated = ref.activated;

	  var queue = [].concat(
	    // in-component leave guards
	    extractLeaveGuards(deactivated),
	    // global before hooks
	    this.router.beforeHooks,
	    // in-component update hooks
	    extractUpdateHooks(updated),
	    // in-config enter guards
	    activated.map(function (m) { return m.beforeEnter; }),
	    // async components
	    resolveAsyncComponents(activated)
	  );

	  this.pending = route;
	  var iterator = function (hook, next) {
	    if (this$1.pending !== route) {
	      return abort()
	    }
	    try {
	      hook(route, current, function (to) {
	        if (to === false || isError(to)) {
	          // next(false) -> abort navigation, ensure current URL
	          this$1.ensureURL(true);
	          abort(to);
	        } else if (
	          typeof to === 'string' ||
	          (typeof to === 'object' && (
	            typeof to.path === 'string' ||
	            typeof to.name === 'string'
	          ))
	        ) {
	          // next('/') or next({ path: '/' }) -> redirect
	          abort();
	          if (typeof to === 'object' && to.replace) {
	            this$1.replace(to);
	          } else {
	            this$1.push(to);
	          }
	        } else {
	          // confirm transition and pass on the value
	          next(to);
	        }
	      });
	    } catch (e) {
	      abort(e);
	    }
	  };

	  runQueue(queue, iterator, function () {
	    var postEnterCbs = [];
	    var isValid = function () { return this$1.current === route; };
	    // wait until async components are resolved before
	    // extracting in-component enter guards
	    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);
	    var queue = enterGuards.concat(this$1.router.resolveHooks);
	    runQueue(queue, iterator, function () {
	      if (this$1.pending !== route) {
	        return abort()
	      }
	      this$1.pending = null;
	      onComplete(route);
	      if (this$1.router.app) {
	        this$1.router.app.$nextTick(function () {
	          postEnterCbs.forEach(function (cb) { cb(); });
	        });
	      }
	    });
	  });
	};

	History.prototype.updateRoute = function updateRoute (route) {
	  var prev = this.current;
	  this.current = route;
	  this.cb && this.cb(route);
	  this.router.afterHooks.forEach(function (hook) {
	    hook && hook(route, prev);
	  });
	};

	function normalizeBase (base) {
	  if (!base) {
	    if (inBrowser) {
	      // respect <base> tag
	      var baseEl = document.querySelector('base');
	      base = (baseEl && baseEl.getAttribute('href')) || '/';
	      // strip full URL origin
	      base = base.replace(/^https?:\/\/[^\/]+/, '');
	    } else {
	      base = '/';
	    }
	  }
	  // make sure there's the starting slash
	  if (base.charAt(0) !== '/') {
	    base = '/' + base;
	  }
	  // remove trailing slash
	  return base.replace(/\/$/, '')
	}

	function resolveQueue (
	  current,
	  next
	) {
	  var i;
	  var max = Math.max(current.length, next.length);
	  for (i = 0; i < max; i++) {
	    if (current[i] !== next[i]) {
	      break
	    }
	  }
	  return {
	    updated: next.slice(0, i),
	    activated: next.slice(i),
	    deactivated: current.slice(i)
	  }
	}

	function extractGuards (
	  records,
	  name,
	  bind,
	  reverse
	) {
	  var guards = flatMapComponents(records, function (def, instance, match, key) {
	    var guard = extractGuard(def, name);
	    if (guard) {
	      return Array.isArray(guard)
	        ? guard.map(function (guard) { return bind(guard, instance, match, key); })
	        : bind(guard, instance, match, key)
	    }
	  });
	  return flatten(reverse ? guards.reverse() : guards)
	}

	function extractGuard (
	  def,
	  key
	) {
	  if (typeof def !== 'function') {
	    // extend now so that global mixins are applied.
	    def = _Vue.extend(def);
	  }
	  return def.options[key]
	}

	function extractLeaveGuards (deactivated) {
	  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)
	}

	function extractUpdateHooks (updated) {
	  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)
	}

	function bindGuard (guard, instance) {
	  if (instance) {
	    return function boundRouteGuard () {
	      return guard.apply(instance, arguments)
	    }
	  }
	}

	function extractEnterGuards (
	  activated,
	  cbs,
	  isValid
	) {
	  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {
	    return bindEnterGuard(guard, match, key, cbs, isValid)
	  })
	}

	function bindEnterGuard (
	  guard,
	  match,
	  key,
	  cbs,
	  isValid
	) {
	  return function routeEnterGuard (to, from, next) {
	    return guard(to, from, function (cb) {
	      next(cb);
	      if (typeof cb === 'function') {
	        cbs.push(function () {
	          // #750
	          // if a router-view is wrapped with an out-in transition,
	          // the instance may not have been registered at this time.
	          // we will need to poll for registration until current route
	          // is no longer valid.
	          poll(cb, match.instances, key, isValid);
	        });
	      }
	    })
	  }
	}

	function poll (
	  cb, // somehow flow cannot infer this is a function
	  instances,
	  key,
	  isValid
	) {
	  if (instances[key]) {
	    cb(instances[key]);
	  } else if (isValid()) {
	    setTimeout(function () {
	      poll(cb, instances, key, isValid);
	    }, 16);
	  }
	}

	/*  */


	var HTML5History = (function (History$$1) {
	  function HTML5History (router, base) {
	    var this$1 = this;

	    History$$1.call(this, router, base);

	    var expectScroll = router.options.scrollBehavior;

	    if (expectScroll) {
	      setupScroll();
	    }

	    var initLocation = getLocation(this.base);
	    window.addEventListener('popstate', function (e) {
	      var current = this$1.current;

	      // Avoiding first `popstate` event dispatched in some browsers but first
	      // history route not updated since async guard at the same time.
	      var location = getLocation(this$1.base);
	      if (this$1.current === START && location === initLocation) {
	        return
	      }

	      this$1.transitionTo(location, function (route) {
	        if (expectScroll) {
	          handleScroll(router, route, current, true);
	        }
	      });
	    });
	  }

	  if ( History$$1 ) HTML5History.__proto__ = History$$1;
	  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );
	  HTML5History.prototype.constructor = HTML5History;

	  HTML5History.prototype.go = function go (n) {
	    window.history.go(n);
	  };

	  HTML5History.prototype.push = function push (location, onComplete, onAbort) {
	    var this$1 = this;

	    var ref = this;
	    var fromRoute = ref.current;
	    this.transitionTo(location, function (route) {
	      pushState(cleanPath(this$1.base + route.fullPath));
	      handleScroll(this$1.router, route, fromRoute, false);
	      onComplete && onComplete(route);
	    }, onAbort);
	  };

	  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {
	    var this$1 = this;

	    var ref = this;
	    var fromRoute = ref.current;
	    this.transitionTo(location, function (route) {
	      replaceState(cleanPath(this$1.base + route.fullPath));
	      handleScroll(this$1.router, route, fromRoute, false);
	      onComplete && onComplete(route);
	    }, onAbort);
	  };

	  HTML5History.prototype.ensureURL = function ensureURL (push) {
	    if (getLocation(this.base) !== this.current.fullPath) {
	      var current = cleanPath(this.base + this.current.fullPath);
	      push ? pushState(current) : replaceState(current);
	    }
	  };

	  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {
	    return getLocation(this.base)
	  };

	  return HTML5History;
	}(History));

	function getLocation (base) {
	  var path = window.location.pathname;
	  if (base && path.indexOf(base) === 0) {
	    path = path.slice(base.length);
	  }
	  return (path || '/') + window.location.search + window.location.hash
	}

	/*  */


	var HashHistory = (function (History$$1) {
	  function HashHistory (router, base, fallback) {
	    History$$1.call(this, router, base);
	    // check history fallback deeplinking
	    if (fallback && checkFallback(this.base)) {
	      return
	    }
	    ensureSlash();
	  }

	  if ( History$$1 ) HashHistory.__proto__ = History$$1;
	  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );
	  HashHistory.prototype.constructor = HashHistory;

	  // this is delayed until the app mounts
	  // to avoid the hashchange listener being fired too early
	  HashHistory.prototype.setupListeners = function setupListeners () {
	    var this$1 = this;

	    var router = this.router;
	    var expectScroll = router.options.scrollBehavior;
	    var supportsScroll = supportsPushState && expectScroll;

	    if (supportsScroll) {
	      setupScroll();
	    }

	    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {
	      var current = this$1.current;
	      if (!ensureSlash()) {
	        return
	      }
	      this$1.transitionTo(getHash(), function (route) {
	        if (supportsScroll) {
	          handleScroll(this$1.router, route, current, true);
	        }
	        if (!supportsPushState) {
	          replaceHash(route.fullPath);
	        }
	      });
	    });
	  };

	  HashHistory.prototype.push = function push (location, onComplete, onAbort) {
	    var this$1 = this;

	    var ref = this;
	    var fromRoute = ref.current;
	    this.transitionTo(location, function (route) {
	      pushHash(route.fullPath);
	      handleScroll(this$1.router, route, fromRoute, false);
	      onComplete && onComplete(route);
	    }, onAbort);
	  };

	  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {
	    var this$1 = this;

	    var ref = this;
	    var fromRoute = ref.current;
	    this.transitionTo(location, function (route) {
	      replaceHash(route.fullPath);
	      handleScroll(this$1.router, route, fromRoute, false);
	      onComplete && onComplete(route);
	    }, onAbort);
	  };

	  HashHistory.prototype.go = function go (n) {
	    window.history.go(n);
	  };

	  HashHistory.prototype.ensureURL = function ensureURL (push) {
	    var current = this.current.fullPath;
	    if (getHash() !== current) {
	      push ? pushHash(current) : replaceHash(current);
	    }
	  };

	  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {
	    return getHash()
	  };

	  return HashHistory;
	}(History));

	function checkFallback (base) {
	  var location = getLocation(base);
	  if (!/^\/#/.test(location)) {
	    window.location.replace(
	      cleanPath(base + '/#' + location)
	    );
	    return true
	  }
	}

	function ensureSlash () {
	  var path = getHash();
	  if (path.charAt(0) === '/') {
	    return true
	  }
	  replaceHash('/' + path);
	  return false
	}

	function getHash () {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  var href = window.location.href;
	  var index = href.indexOf('#');
	  return index === -1 ? '' : href.slice(index + 1)
	}

	function getUrl (path) {
	  var href = window.location.href;
	  var i = href.indexOf('#');
	  var base = i >= 0 ? href.slice(0, i) : href;
	  return (base + "#" + path)
	}

	function pushHash (path) {
	  if (supportsPushState) {
	    pushState(getUrl(path));
	  } else {
	    window.location.hash = path;
	  }
	}

	function replaceHash (path) {
	  if (supportsPushState) {
	    replaceState(getUrl(path));
	  } else {
	    window.location.replace(getUrl(path));
	  }
	}

	/*  */


	var AbstractHistory = (function (History$$1) {
	  function AbstractHistory (router, base) {
	    History$$1.call(this, router, base);
	    this.stack = [];
	    this.index = -1;
	  }

	  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;
	  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );
	  AbstractHistory.prototype.constructor = AbstractHistory;

	  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {
	    var this$1 = this;

	    this.transitionTo(location, function (route) {
	      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);
	      this$1.index++;
	      onComplete && onComplete(route);
	    }, onAbort);
	  };

	  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {
	    var this$1 = this;

	    this.transitionTo(location, function (route) {
	      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);
	      onComplete && onComplete(route);
	    }, onAbort);
	  };

	  AbstractHistory.prototype.go = function go (n) {
	    var this$1 = this;

	    var targetIndex = this.index + n;
	    if (targetIndex < 0 || targetIndex >= this.stack.length) {
	      return
	    }
	    var route = this.stack[targetIndex];
	    this.confirmTransition(route, function () {
	      this$1.index = targetIndex;
	      this$1.updateRoute(route);
	    });
	  };

	  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {
	    var current = this.stack[this.stack.length - 1];
	    return current ? current.fullPath : '/'
	  };

	  AbstractHistory.prototype.ensureURL = function ensureURL () {
	    // noop
	  };

	  return AbstractHistory;
	}(History));

	/*  */

	var VueRouter = function VueRouter (options) {
	  if ( options === void 0 ) options = {};

	  this.app = null;
	  this.apps = [];
	  this.options = options;
	  this.beforeHooks = [];
	  this.resolveHooks = [];
	  this.afterHooks = [];
	  this.matcher = createMatcher(options.routes || [], this);

	  var mode = options.mode || 'hash';
	  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;
	  if (this.fallback) {
	    mode = 'hash';
	  }
	  if (!inBrowser) {
	    mode = 'abstract';
	  }
	  this.mode = mode;

	  switch (mode) {
	    case 'history':
	      this.history = new HTML5History(this, options.base);
	      break
	    case 'hash':
	      this.history = new HashHistory(this, options.base, this.fallback);
	      break
	    case 'abstract':
	      this.history = new AbstractHistory(this, options.base);
	      break
	    default:
	      if (process.env.NODE_ENV !== 'production') {
	        assert(false, ("invalid mode: " + mode));
	      }
	  }
	};

	var prototypeAccessors = { currentRoute: { configurable: true } };

	VueRouter.prototype.match = function match (
	  raw,
	  current,
	  redirectedFrom
	) {
	  return this.matcher.match(raw, current, redirectedFrom)
	};

	prototypeAccessors.currentRoute.get = function () {
	  return this.history && this.history.current
	};

	VueRouter.prototype.init = function init (app /* Vue component instance */) {
	    var this$1 = this;

	  process.env.NODE_ENV !== 'production' && assert(
	    install.installed,
	    "not installed. Make sure to call `Vue.use(VueRouter)` " +
	    "before creating root instance."
	  );

	  this.apps.push(app);

	  // main app already initialized.
	  if (this.app) {
	    return
	  }

	  this.app = app;

	  var history = this.history;

	  if (history instanceof HTML5History) {
	    history.transitionTo(history.getCurrentLocation());
	  } else if (history instanceof HashHistory) {
	    var setupHashListener = function () {
	      history.setupListeners();
	    };
	    history.transitionTo(
	      history.getCurrentLocation(),
	      setupHashListener,
	      setupHashListener
	    );
	  }

	  history.listen(function (route) {
	    this$1.apps.forEach(function (app) {
	      app._route = route;
	    });
	  });
	};

	VueRouter.prototype.beforeEach = function beforeEach (fn) {
	  return registerHook(this.beforeHooks, fn)
	};

	VueRouter.prototype.beforeResolve = function beforeResolve (fn) {
	  return registerHook(this.resolveHooks, fn)
	};

	VueRouter.prototype.afterEach = function afterEach (fn) {
	  return registerHook(this.afterHooks, fn)
	};

	VueRouter.prototype.onReady = function onReady (cb, errorCb) {
	  this.history.onReady(cb, errorCb);
	};

	VueRouter.prototype.onError = function onError (errorCb) {
	  this.history.onError(errorCb);
	};

	VueRouter.prototype.push = function push (location, onComplete, onAbort) {
	  this.history.push(location, onComplete, onAbort);
	};

	VueRouter.prototype.replace = function replace (location, onComplete, onAbort) {
	  this.history.replace(location, onComplete, onAbort);
	};

	VueRouter.prototype.go = function go (n) {
	  this.history.go(n);
	};

	VueRouter.prototype.back = function back () {
	  this.go(-1);
	};

	VueRouter.prototype.forward = function forward () {
	  this.go(1);
	};

	VueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {
	  var route = to
	    ? to.matched
	      ? to
	      : this.resolve(to).route
	    : this.currentRoute;
	  if (!route) {
	    return []
	  }
	  return [].concat.apply([], route.matched.map(function (m) {
	    return Object.keys(m.components).map(function (key) {
	      return m.components[key]
	    })
	  }))
	};

	VueRouter.prototype.resolve = function resolve (
	  to,
	  current,
	  append
	) {
	  var location = normalizeLocation(
	    to,
	    current || this.history.current,
	    append,
	    this
	  );
	  var route = this.match(location, current);
	  var fullPath = route.redirectedFrom || route.fullPath;
	  var base = this.history.base;
	  var href = createHref(base, fullPath, this.mode);
	  return {
	    location: location,
	    route: route,
	    href: href,
	    // for backwards compat
	    normalizedTo: location,
	    resolved: route
	  }
	};

	VueRouter.prototype.addRoutes = function addRoutes (routes) {
	  this.matcher.addRoutes(routes);
	  if (this.history.current !== START) {
	    this.history.transitionTo(this.history.getCurrentLocation());
	  }
	};

	Object.defineProperties( VueRouter.prototype, prototypeAccessors );

	function registerHook (list, fn) {
	  list.push(fn);
	  return function () {
	    var i = list.indexOf(fn);
	    if (i > -1) { list.splice(i, 1); }
	  }
	}

	function createHref (base, fullPath, mode) {
	  var path = mode === 'hash' ? '#' + fullPath : fullPath;
	  return base ? cleanPath(base + '/' + path) : path
	}

	VueRouter.install = install;
	VueRouter.version = '2.8.1';

	if (inBrowser && window.Vue) {
	  window.Vue.use(VueRouter);
	}

	module.exports = VueRouter;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	var __vue_styles__ = {}
	__webpack_require__(9)
	__vue_script__ = __webpack_require__(13)
	if (Object.keys(__vue_script__).some(function (key) { return key !== "default" && key !== "__esModule" })) {
	  console.warn("[vue-loader] app/components/app-container.vue: named exports in *.vue files are ignored.")}
	__vue_template__ = __webpack_require__(14)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	var __vue_options__ = typeof module.exports === "function" ? (module.exports.options || (module.exports.options = {})) : module.exports
	if (__vue_template__) {
	__vue_options__.template = __vue_template__
	}
	if (!__vue_options__.computed) __vue_options__.computed = {}
	Object.keys(__vue_styles__).forEach(function (key) {
	var module = __vue_styles__[key]
	__vue_options__.computed[key] = function () { return module }
	})
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  var id = "_v-2891744b/app-container.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(10);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(12)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-rewriter.js!../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app-container.vue", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-rewriter.js!../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app-container.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(11)();
	// imports


	// module
	exports.push([module.id, "\n\n", ""]);

	// exports


/***/ }),
/* 11 */
/***/ (function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
		var sourceMap = obj.sourceMap;

		if (media) {
			styleElement.setAttribute("media", media);
		}

		if (sourceMap) {
			// https://developer.chrome.com/devtools/docs/javascript-debugging
			// this makes source maps inside style tags work properly in Chrome
			css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */';
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}


/***/ }),
/* 13 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {};

/***/ }),
/* 14 */
/***/ (function(module, exports) {

	module.exports = "\n\n\n\n\n<router-view :key=\"$route.fullPath\"></router-view>\n";

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	var __vue_styles__ = {}
	__webpack_require__(16)
	__vue_script__ = __webpack_require__(18)
	if (Object.keys(__vue_script__).some(function (key) { return key !== "default" && key !== "__esModule" })) {
	  console.warn("[vue-loader] app/components/demo-page.vue: named exports in *.vue files are ignored.")}
	__vue_template__ = __webpack_require__(19)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	var __vue_options__ = typeof module.exports === "function" ? (module.exports.options || (module.exports.options = {})) : module.exports
	if (__vue_template__) {
	__vue_options__.template = __vue_template__
	}
	if (!__vue_options__.computed) __vue_options__.computed = {}
	Object.keys(__vue_styles__).forEach(function (key) {
	var module = __vue_styles__[key]
	__vue_options__.computed[key] = function () { return module }
	})
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  var id = "_v-3b8509af/demo-page.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(17);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(12)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-rewriter.js!../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./demo-page.vue", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/vue-loader/lib/style-rewriter.js!../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./demo-page.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(11)();
	// imports


	// module
	exports.push([module.id, "\n  * {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background-color: #64666e;\n  color: #555;\n  font-size: 1.1em;\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.nav-link {\n  display: block;\n  margin-bottom: 0.5em;\n}\n\nh3 {\n  margin-bottom: 0.5em;  \n}\n\np {\n  line-height: 1.5;\n  margin-bottom: 1em;\n}\n\n.container {\n  display: -ms-grid;\n  display: grid;\n  -ms-grid-columns: 8em auto 8em;\n      grid-template-columns: 8em auto 8em;\n  -ms-grid-rows: 5em auto auto auto 3em;\n      grid-template-rows: 5em auto auto auto 3em;\n}\n\nheader {\n  background-color: lemonchiffon;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n\nnav {\n  background-color: mistyrose;\n  padding: 0.5em;\n}\n\narticle {\n  padding: 0.5em;\n  background: #fff;\n}\n\naside {\n  background-color: lavender;\n  padding: 0.5em;\n  \n}\n\nfooter {\n  background-color: silver;\n  text-align: center;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  \n  grid-column: 1 / 4;\n  -ms-grid-row: 5;\n      grid-row: 5;\n}\n\n@media screen and (max-width: 479px) {\n  header {\n    grid-column: 1 / 4;\n  }\n  \n  article {\n    grid-column: 1 / 4;\n    -ms-grid-row: 2;\n        grid-row: 2;\n  }\n  \n  aside {\n    grid-column: 1 / 4;\n    -ms-grid-row: 3;\n        grid-row: 3;\n  }\n  \n  nav {\n    grid-column: 1 / 4;\n    -ms-grid-row: 4;\n        grid-row: 4;\n  }\n}\n\n@media screen and (min-width: 480px) and (max-width: 639px) {\n  nav {\n    -ms-grid-column: 1;\n        grid-column: 1;\n    -ms-grid-row: 2;\n        grid-row: 2;\n  }\n  \n  aside {\n    -ms-grid-column: 1;\n        grid-column: 1;\n    grid-row: 3 / 5;\n  }\n\n  article {\n    grid-column: 2 / 4;\n    grid-row: 1 / 5;\n  }\n}\n\n@media screen and (min-width: 640px) {\n  header {\n    grid-column: 1 / 4;\n  }\n\n  nav {\n    grid-row: 2 / 5;\n    -ms-grid-column: 1;\n        grid-column: 1;\n  }\n  \n  aside { \n    grid-row: 2 / 5;\n    -ms-grid-column: 3;\n        grid-column: 3;\n  }\n\n  article {\n    grid-row: 2 / 5;\n    -ms-grid-column: 2;\n        grid-column: 2;\n  }\n}\n\n", ""]);

	// exports


/***/ }),
/* 18 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {};

/***/ }),
/* 19 */
/***/ (function(module, exports) {

	module.exports = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  <div class=\"container\">\n  <header>\n    <md-toolbar>\n      <h3 class=\"md-title\" style=\"flex: 1\">Title</h3>\n      <md-button class=\"md-icon-button\">\n        <md-icon>more_vert</md-icon>\n      </md-button>\n    </md-toolbar>\n  </header>\n  <article>\n    <p>“It is very sad then that so many children are hurried along and not given time to think about themselves. People say to them when they think that they have been playing long enough: “You are no longer a child. You must begin to do something.” But although playing is doing nothing, you are really doing something when you play; you are thinking about yourself. Many children play in the wrong way. They make work out of play. They not only seem to be doing something, they really are doing something. They are imitating the grown-ups around them who are always doing as much instead of as little as possible. And they are often encouraged to play in this way by the grown-ups. And they are not learning to be themselves.”</p>\n    <p>“There are many people who are not entirely themselves because as children they were not given time to think about themselves. And because they don’t know everything about themselves they can’t know everything about everything. But no one likes to admit that she doesn’t know everything about everything. And so these people try to make up for not knowing everything about everything by doing things.”</p>\n    <p><small>Source: <em>Four Unposted Letters to Catherine</em> by Laura Riding</small></p>\n  </article>\n  <nav>\n    <h3>Navigation</h3>\n    <a class=\"nav-link\" href=\"javascript:void(0)\">Home</a>\n    <a class=\"nav-link\" href=\"javascript:void(0)\">Chapter 1</a>\n    <a class=\"nav-link\" href=\"javascript:void(0)\">Chapter 2</a>\n    <a class=\"nav-link\" href=\"javascript:void(0)\">Chapter 3</a>\n    <a class=\"nav-link\" href=\"javascript:void(0)\">Chapter 4</a>\n  </nav>\n  <aside>\n    <h3>Sidebar</h3>\n    <p>“A work of art is good if it has sprung from necessity. In this nature of its origin lies the judgment of it: there is no other.”<br>- Rainer Maria Rilke</p>\n  </aside>\n  <footer>Footer</footer>\n</div>\n";

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	/*!
	 * vue-material v1.0.0-beta-7
	 * Made with <3 by marcosmoura 2017
	 * Released under the MIT License.
	 */
	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory(__webpack_require__(1));
		else if(typeof define === 'function' && define.amd)
			define(["vue"], factory);
		else if(typeof exports === 'object')
			exports["VueMaterial"] = factory(require("vue"));
		else
			root["VueMaterial"] = factory(root["Vue"]);
	})(this, function(__WEBPACK_EXTERNAL_MODULE_7__) {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId]) {
	/******/ 			return installedModules[moduleId].exports;
	/******/ 		}
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			i: moduleId,
	/******/ 			l: false,
	/******/ 			exports: {}
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.l = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// define getter function for harmony exports
	/******/ 	__webpack_require__.d = function(exports, name, getter) {
	/******/ 		if(!__webpack_require__.o(exports, name)) {
	/******/ 			Object.defineProperty(exports, name, {
	/******/ 				configurable: false,
	/******/ 				enumerable: true,
	/******/ 				get: getter
	/******/ 			});
	/******/ 		}
	/******/ 	};
	/******/
	/******/ 	// getDefaultExport function for compatibility with non-harmony modules
	/******/ 	__webpack_require__.n = function(module) {
	/******/ 		var getter = module && module.__esModule ?
	/******/ 			function getDefault() { return module['default']; } :
	/******/ 			function getModuleExports() { return module; };
	/******/ 		__webpack_require__.d(getter, 'a', getter);
	/******/ 		return getter;
	/******/ 	};
	/******/
	/******/ 	// Object.prototype.hasOwnProperty.call
	/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(__webpack_require__.s = 54);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ (function(module, exports) {

	/* globals __VUE_SSR_CONTEXT__ */

	// IMPORTANT: Do NOT use ES2015 features in this file.
	// This module is a runtime utility for cleaner component module output and will
	// be included in the final webpack user bundle.

	module.exports = function normalizeComponent (
	  rawScriptExports,
	  compiledTemplate,
	  functionalTemplate,
	  injectStyles,
	  scopeId,
	  moduleIdentifier /* server only */
	) {
	  var esModule
	  var scriptExports = rawScriptExports = rawScriptExports || {}

	  // ES6 modules interop
	  var type = typeof rawScriptExports.default
	  if (type === 'object' || type === 'function') {
	    esModule = rawScriptExports
	    scriptExports = rawScriptExports.default
	  }

	  // Vue.extend constructor export interop
	  var options = typeof scriptExports === 'function'
	    ? scriptExports.options
	    : scriptExports

	  // render functions
	  if (compiledTemplate) {
	    options.render = compiledTemplate.render
	    options.staticRenderFns = compiledTemplate.staticRenderFns
	    options._compiled = true
	  }

	  // functional template
	  if (functionalTemplate) {
	    options.functional = true
	  }

	  // scopedId
	  if (scopeId) {
	    options._scopeId = scopeId
	  }

	  var hook
	  if (moduleIdentifier) { // server build
	    hook = function (context) {
	      // 2.3 injection
	      context =
	        context || // cached call
	        (this.$vnode && this.$vnode.ssrContext) || // stateful
	        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
	      // 2.2 with runInNewContext: true
	      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
	        context = __VUE_SSR_CONTEXT__
	      }
	      // inject component styles
	      if (injectStyles) {
	        injectStyles.call(this, context)
	      }
	      // register component module identifier for async chunk inferrence
	      if (context && context._registeredComponents) {
	        context._registeredComponents.add(moduleIdentifier)
	      }
	    }
	    // used by ssr in case component is cached and beforeCreate
	    // never gets called
	    options._ssrRegister = hook
	  } else if (injectStyles) {
	    hook = injectStyles
	  }

	  if (hook) {
	    var functional = options.functional
	    var existing = functional
	      ? options.render
	      : options.beforeCreate

	    if (!functional) {
	      // inject component registration as beforeCreate hook
	      options.beforeCreate = existing
	        ? [].concat(existing, hook)
	        : [hook]
	    } else {
	      // for template-only hot-reload because in that case the render fn doesn't
	      // go through the normalizer
	      options._injectStyles = hook
	      // register for functioal component in vue file
	      options.render = function renderWithStyleInjection (h, context) {
	        hook.call(context)
	        return existing(h, context)
	      }
	    }
	  }

	  return {
	    esModule: esModule,
	    exports: scriptExports,
	    options: options
	  }
	}


	/***/ }),
	/* 1 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	__webpack_require__(56);

	var _MdReactive = __webpack_require__(28);

	var _MdReactive2 = _interopRequireDefault(_MdReactive);

	var _MdTheme = __webpack_require__(29);

	var _MdTheme2 = _interopRequireDefault(_MdTheme);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var init = function init() {
	  var material = new _MdReactive2.default({
	    ripple: true,
	    theming: {},
	    locale: {
	      startYear: 1900,
	      endYear: 2099,
	      dateFormat: 'YYYY-MM-DD',
	      days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
	      shortDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
	      shorterDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
	      months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
	      shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],
	      shorterMonths: ['J', 'F', 'M', 'A', 'M', 'Ju', 'Ju', 'A', 'Se', 'O', 'N', 'D']
	    }
	  });

	  Object.defineProperties(material.theming, {
	    metaColors: {
	      get: function get() {
	        return _MdTheme2.default.metaColors;
	      },
	      set: function set(metaColors) {
	        _MdTheme2.default.metaColors = metaColors;
	      }
	    },
	    theme: {
	      get: function get() {
	        return _MdTheme2.default.theme;
	      },
	      set: function set(theme) {
	        _MdTheme2.default.theme = theme;
	      }
	    },
	    enabled: {
	      get: function get() {
	        return _MdTheme2.default.enabled;
	      },
	      set: function set(enabled) {
	        _MdTheme2.default.enabled = enabled;
	      }
	    }
	  });

	  return material;
	};

	exports.default = function (Vue) {
	  if (!Vue.material) {
	    Vue.material = init();
	    Vue.prototype.$material = Vue.material;
	  }
	};

	/***/ }),
	/* 2 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (newComponent) {
	  var defaults = {
	    props: {
	      mdTheme: null
	    },
	    computed: {
	      $mdActiveTheme: function $mdActiveTheme() {
	        var enabled = _MdTheme2.default.enabled,
	            getThemeName = _MdTheme2.default.getThemeName,
	            getAncestorTheme = _MdTheme2.default.getAncestorTheme;


	        if (enabled && this.mdTheme !== false) {
	          return getThemeName(this.mdTheme || getAncestorTheme(this));
	        }

	        return null;
	      }
	    }
	  };

	  return (0, _deepmerge2.default)(defaults, newComponent);
	};

	var _MdTheme = __webpack_require__(29);

	var _MdTheme2 = _interopRequireDefault(_MdTheme);

	var _deepmerge = __webpack_require__(30);

	var _deepmerge2 = _interopRequireDefault(_deepmerge);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/***/ }),
	/* 3 */
	/***/ (function(module, exports, __webpack_require__) {

	var isDate = __webpack_require__(36)

	var MILLISECONDS_IN_HOUR = 3600000
	var MILLISECONDS_IN_MINUTE = 60000
	var DEFAULT_ADDITIONAL_DIGITS = 2

	var parseTokenDateTimeDelimeter = /[T ]/
	var parseTokenPlainTime = /:/

	// year tokens
	var parseTokenYY = /^(\d{2})$/
	var parseTokensYYY = [
	  /^([+-]\d{2})$/, // 0 additional digits
	  /^([+-]\d{3})$/, // 1 additional digit
	  /^([+-]\d{4})$/ // 2 additional digits
	]

	var parseTokenYYYY = /^(\d{4})/
	var parseTokensYYYYY = [
	  /^([+-]\d{4})/, // 0 additional digits
	  /^([+-]\d{5})/, // 1 additional digit
	  /^([+-]\d{6})/ // 2 additional digits
	]

	// date tokens
	var parseTokenMM = /^-(\d{2})$/
	var parseTokenDDD = /^-?(\d{3})$/
	var parseTokenMMDD = /^-?(\d{2})-?(\d{2})$/
	var parseTokenWww = /^-?W(\d{2})$/
	var parseTokenWwwD = /^-?W(\d{2})-?(\d{1})$/

	// time tokens
	var parseTokenHH = /^(\d{2}([.,]\d*)?)$/
	var parseTokenHHMM = /^(\d{2}):?(\d{2}([.,]\d*)?)$/
	var parseTokenHHMMSS = /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/

	// timezone tokens
	var parseTokenTimezone = /([Z+-].*)$/
	var parseTokenTimezoneZ = /^(Z)$/
	var parseTokenTimezoneHH = /^([+-])(\d{2})$/
	var parseTokenTimezoneHHMM = /^([+-])(\d{2}):?(\d{2})$/

	/**
	 * @category Common Helpers
	 * @summary Convert the given argument to an instance of Date.
	 *
	 * @description
	 * Convert the given argument to an instance of Date.
	 *
	 * If the argument is an instance of Date, the function returns its clone.
	 *
	 * If the argument is a number, it is treated as a timestamp.
	 *
	 * If an argument is a string, the function tries to parse it.
	 * Function accepts complete ISO 8601 formats as well as partial implementations.
	 * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
	 *
	 * If all above fails, the function passes the given argument to Date constructor.
	 *
	 * @param {Date|String|Number} argument - the value to convert
	 * @param {Object} [options] - the object with options
	 * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format
	 * @returns {Date} the parsed date in the local time zone
	 *
	 * @example
	 * // Convert string '2014-02-11T11:30:30' to date:
	 * var result = parse('2014-02-11T11:30:30')
	 * //=> Tue Feb 11 2014 11:30:30
	 *
	 * @example
	 * // Parse string '+02014101',
	 * // if the additional number of digits in the extended year format is 1:
	 * var result = parse('+02014101', {additionalDigits: 1})
	 * //=> Fri Apr 11 2014 00:00:00
	 */
	function parse (argument, dirtyOptions) {
	  if (isDate(argument)) {
	    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
	    return new Date(argument.getTime())
	  } else if (typeof argument !== 'string') {
	    return new Date(argument)
	  }

	  var options = dirtyOptions || {}
	  var additionalDigits = options.additionalDigits
	  if (additionalDigits == null) {
	    additionalDigits = DEFAULT_ADDITIONAL_DIGITS
	  } else {
	    additionalDigits = Number(additionalDigits)
	  }

	  var dateStrings = splitDateString(argument)

	  var parseYearResult = parseYear(dateStrings.date, additionalDigits)
	  var year = parseYearResult.year
	  var restDateString = parseYearResult.restDateString

	  var date = parseDate(restDateString, year)

	  if (date) {
	    var timestamp = date.getTime()
	    var time = 0
	    var offset

	    if (dateStrings.time) {
	      time = parseTime(dateStrings.time)
	    }

	    if (dateStrings.timezone) {
	      offset = parseTimezone(dateStrings.timezone)
	    } else {
	      // get offset accurate to hour in timezones that change offset
	      offset = new Date(timestamp + time).getTimezoneOffset()
	      offset = new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE).getTimezoneOffset()
	    }

	    return new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE)
	  } else {
	    return new Date(argument)
	  }
	}

	function splitDateString (dateString) {
	  var dateStrings = {}
	  var array = dateString.split(parseTokenDateTimeDelimeter)
	  var timeString

	  if (parseTokenPlainTime.test(array[0])) {
	    dateStrings.date = null
	    timeString = array[0]
	  } else {
	    dateStrings.date = array[0]
	    timeString = array[1]
	  }

	  if (timeString) {
	    var token = parseTokenTimezone.exec(timeString)
	    if (token) {
	      dateStrings.time = timeString.replace(token[1], '')
	      dateStrings.timezone = token[1]
	    } else {
	      dateStrings.time = timeString
	    }
	  }

	  return dateStrings
	}

	function parseYear (dateString, additionalDigits) {
	  var parseTokenYYY = parseTokensYYY[additionalDigits]
	  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]

	  var token

	  // YYYY or ±YYYYY
	  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)
	  if (token) {
	    var yearString = token[1]
	    return {
	      year: parseInt(yearString, 10),
	      restDateString: dateString.slice(yearString.length)
	    }
	  }

	  // YY or ±YYY
	  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)
	  if (token) {
	    var centuryString = token[1]
	    return {
	      year: parseInt(centuryString, 10) * 100,
	      restDateString: dateString.slice(centuryString.length)
	    }
	  }

	  // Invalid ISO-formatted year
	  return {
	    year: null
	  }
	}

	function parseDate (dateString, year) {
	  // Invalid ISO-formatted year
	  if (year === null) {
	    return null
	  }

	  var token
	  var date
	  var month
	  var week

	  // YYYY
	  if (dateString.length === 0) {
	    date = new Date(0)
	    date.setUTCFullYear(year)
	    return date
	  }

	  // YYYY-MM
	  token = parseTokenMM.exec(dateString)
	  if (token) {
	    date = new Date(0)
	    month = parseInt(token[1], 10) - 1
	    date.setUTCFullYear(year, month)
	    return date
	  }

	  // YYYY-DDD or YYYYDDD
	  token = parseTokenDDD.exec(dateString)
	  if (token) {
	    date = new Date(0)
	    var dayOfYear = parseInt(token[1], 10)
	    date.setUTCFullYear(year, 0, dayOfYear)
	    return date
	  }

	  // YYYY-MM-DD or YYYYMMDD
	  token = parseTokenMMDD.exec(dateString)
	  if (token) {
	    date = new Date(0)
	    month = parseInt(token[1], 10) - 1
	    var day = parseInt(token[2], 10)
	    date.setUTCFullYear(year, month, day)
	    return date
	  }

	  // YYYY-Www or YYYYWww
	  token = parseTokenWww.exec(dateString)
	  if (token) {
	    week = parseInt(token[1], 10) - 1
	    return dayOfISOYear(year, week)
	  }

	  // YYYY-Www-D or YYYYWwwD
	  token = parseTokenWwwD.exec(dateString)
	  if (token) {
	    week = parseInt(token[1], 10) - 1
	    var dayOfWeek = parseInt(token[2], 10) - 1
	    return dayOfISOYear(year, week, dayOfWeek)
	  }

	  // Invalid ISO-formatted date
	  return null
	}

	function parseTime (timeString) {
	  var token
	  var hours
	  var minutes

	  // hh
	  token = parseTokenHH.exec(timeString)
	  if (token) {
	    hours = parseFloat(token[1].replace(',', '.'))
	    return (hours % 24) * MILLISECONDS_IN_HOUR
	  }

	  // hh:mm or hhmm
	  token = parseTokenHHMM.exec(timeString)
	  if (token) {
	    hours = parseInt(token[1], 10)
	    minutes = parseFloat(token[2].replace(',', '.'))
	    return (hours % 24) * MILLISECONDS_IN_HOUR +
	      minutes * MILLISECONDS_IN_MINUTE
	  }

	  // hh:mm:ss or hhmmss
	  token = parseTokenHHMMSS.exec(timeString)
	  if (token) {
	    hours = parseInt(token[1], 10)
	    minutes = parseInt(token[2], 10)
	    var seconds = parseFloat(token[3].replace(',', '.'))
	    return (hours % 24) * MILLISECONDS_IN_HOUR +
	      minutes * MILLISECONDS_IN_MINUTE +
	      seconds * 1000
	  }

	  // Invalid ISO-formatted time
	  return null
	}

	function parseTimezone (timezoneString) {
	  var token
	  var absoluteOffset

	  // Z
	  token = parseTokenTimezoneZ.exec(timezoneString)
	  if (token) {
	    return 0
	  }

	  // ±hh
	  token = parseTokenTimezoneHH.exec(timezoneString)
	  if (token) {
	    absoluteOffset = parseInt(token[2], 10) * 60
	    return (token[1] === '+') ? -absoluteOffset : absoluteOffset
	  }

	  // ±hh:mm or ±hhmm
	  token = parseTokenTimezoneHHMM.exec(timezoneString)
	  if (token) {
	    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)
	    return (token[1] === '+') ? -absoluteOffset : absoluteOffset
	  }

	  return 0
	}

	function dayOfISOYear (isoYear, week, day) {
	  week = week || 0
	  day = day || 0
	  var date = new Date(0)
	  date.setUTCFullYear(isoYear, 0, 4)
	  var fourthOfJanuaryDay = date.getUTCDay() || 7
	  var diff = week * 7 + day + 1 - fourthOfJanuaryDay
	  date.setUTCDate(date.getUTCDate() + diff)
	  return date
	}

	module.exports = parse


	/***/ }),
	/* 4 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _vue = __webpack_require__(7);

	var _vue2 = _interopRequireDefault(_vue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (name, options) {
	  return {
	    validator: function validator(value) {
	      if (options.includes(value)) {
	        return true;
	      }

	      _vue2.default.util.warn('The ' + name + ' prop is invalid. Given value: ' + value + '. Available options: ' + options.join(', ') + '.', undefined);

	      return false;
	    }
	  };
	};

	/***/ }),
	/* 5 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdIcon/MdIcon.vue
	var MdIcon = __webpack_require__(150);
	var MdIcon_default = /*#__PURE__*/__webpack_require__.n(MdIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-59c14b8f","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdIcon/MdIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm.mdSrc
	    ? _c("md-svg-loader", {
	        staticClass: "md-icon md-icon-image",
	        class: [_vm.$mdActiveTheme],
	        attrs: { "md-src": _vm.mdSrc },
	        on: {
	          "md-loaded": function($event) {
	            _vm.$emit("md-loaded")
	          }
	        }
	      })
	    : _c(
	        "i",
	        { staticClass: "md-icon md-icon-font", class: [_vm.$mdActiveTheme] },
	        [_vm._t("default")],
	        2
	      )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdIcon_MdIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-59c14b8f", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdIcon/MdIcon.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(149)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdIcon_default.a,
	  MdIcon_MdIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdIcon/MdIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-59c14b8f", Component.options)
	  } else {
	    hotAPI.reload("data-v-59c14b8f", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdIcon_MdIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 6 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var MdUuid = function MdUuid() {
	  return Math.random().toString(36).slice(4);
	};

	exports.default = MdUuid;

	/***/ }),
	/* 7 */
	/***/ (function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_7__;

	/***/ }),
	/* 8 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdRipple/MdRipple.vue
	var MdRipple = __webpack_require__(93);
	var MdRipple_default = /*#__PURE__*/__webpack_require__.n(MdRipple);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-7692b1af","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdRipple/MdRipple.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    {
	      staticClass: "md-ripple",
	      class: _vm.rippleClasses,
	      on: {
	        "&touchstart": function($event) {
	          $event.stopPropagation()
	          _vm.touchStartCheck($event)
	        },
	        "&touchmove": function($event) {
	          $event.stopPropagation()
	          _vm.touchMoveCheck($event)
	        },
	        "&mousedown": function($event) {
	          $event.stopPropagation()
	          _vm.startRipple($event)
	        }
	      }
	    },
	    [
	      _vm._t("default"),
	      _vm._v(" "),
	      !_vm.isDisabled
	        ? _c(
	            "transition",
	            {
	              attrs: { name: "md-ripple" },
	              on: { "after-enter": _vm.clearWave }
	            },
	            [
	              _vm.animating
	                ? _c("span", {
	                    ref: "rippleWave",
	                    staticClass: "md-ripple-wave",
	                    class: _vm.waveClasses,
	                    style: _vm.waveStyles
	                  })
	                : _vm._e()
	            ]
	          )
	        : _vm._e()
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdRipple_MdRipple = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-7692b1af", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdRipple/MdRipple.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(92)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdRipple_default.a,
	  MdRipple_MdRipple,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdRipple/MdRipple.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-7692b1af", Component.options)
	  } else {
	    hotAPI.reload("data-v-7692b1af", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdRipple_MdRipple = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 9 */
	/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__(65)
	  , root = typeof window === 'undefined' ? global : window
	  , vendors = ['moz', 'webkit']
	  , suffix = 'AnimationFrame'
	  , raf = root['request' + suffix]
	  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]

	for(var i = 0; !raf && i < vendors.length; i++) {
	  raf = root[vendors[i] + 'Request' + suffix]
	  caf = root[vendors[i] + 'Cancel' + suffix]
	      || root[vendors[i] + 'CancelRequest' + suffix]
	}

	// Some versions of FF have rAF but not cAF
	if(!raf || !caf) {
	  var last = 0
	    , id = 0
	    , queue = []
	    , frameDuration = 1000 / 60

	  raf = function(callback) {
	    if(queue.length === 0) {
	      var _now = now()
	        , next = Math.max(0, frameDuration - (_now - last))
	      last = next + _now
	      setTimeout(function() {
	        var cp = queue.slice(0)
	        // Clear queue here to prevent
	        // callbacks from appending listeners
	        // to the current frame's queue
	        queue.length = 0
	        for(var i = 0; i < cp.length; i++) {
	          if(!cp[i].cancelled) {
	            try{
	              cp[i].callback(last)
	            } catch(e) {
	              setTimeout(function() { throw e }, 0)
	            }
	          }
	        }
	      }, Math.round(next))
	    }
	    queue.push({
	      handle: ++id,
	      callback: callback,
	      cancelled: false
	    })
	    return id
	  }

	  caf = function(handle) {
	    for(var i = 0; i < queue.length; i++) {
	      if(queue[i].handle === handle) {
	        queue[i].cancelled = true
	      }
	    }
	  }
	}

	module.exports = function(fn) {
	  // Wrap in a new function to prevent
	  // `cancel` potentially being assigned
	  // to the native rAF function
	  return raf.call(root, fn)
	}
	module.exports.cancel = function() {
	  caf.apply(root, arguments)
	}
	module.exports.polyfill = function(object) {
	  if (!object) {
	    object = root;
	  }
	  object.requestAnimationFrame = raf
	  object.cancelAnimationFrame = caf
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))

	/***/ }),
	/* 10 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdDialog/MdDialog.vue
	var MdDialog = __webpack_require__(205);
	var MdDialog_default = /*#__PURE__*/__webpack_require__.n(MdDialog);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-f080a6a2","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdDialog/MdDialog.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-portal",
	    [
	      _c("transition", { attrs: { name: "md-dialog" } }, [
	        _vm.mdActive
	          ? _c(
	              "div",
	              _vm._g(
	                {
	                  staticClass: "md-dialog",
	                  class: [_vm.dialogClasses, _vm.$mdActiveTheme],
	                  on: {
	                    keydown: function($event) {
	                      if (
	                        !("button" in $event) &&
	                        _vm._k($event.keyCode, "esc", 27, $event.key)
	                      ) {
	                        return null
	                      }
	                      _vm.onEsc($event)
	                    }
	                  }
	                },
	                _vm.$listeners
	              ),
	              [
	                _c("md-focus-trap", [
	                  _c(
	                    "div",
	                    { staticClass: "md-dialog-container" },
	                    [
	                      _vm._t("default"),
	                      _vm._v(" "),
	                      _c(
	                        "keep-alive",
	                        [
	                          _vm.mdBackdrop
	                            ? _c("md-overlay", {
	                                class: _vm.mdBackdropClass,
	                                attrs: {
	                                  "md-fixed": "",
	                                  "md-active": _vm.mdActive
	                                },
	                                on: { click: _vm.onClick }
	                              })
	                            : _vm._e()
	                        ],
	                        1
	                      )
	                    ],
	                    2
	                  )
	                ])
	              ],
	              1
	            )
	          : _vm._e()
	      ])
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdDialog_MdDialog = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-f080a6a2", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdDialog/MdDialog.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(204)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDialog_default.a,
	  MdDialog_MdDialog,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdDialog/MdDialog.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-f080a6a2", Component.options)
	  } else {
	    hotAPI.reload("data-v-f080a6a2", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdDialog_MdDialog = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 11 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdRipple = __webpack_require__(19);

	var _MdRipple2 = _interopRequireDefault(_MdRipple);

	var _MdListItemContent = __webpack_require__(282);

	var _MdListItemContent2 = _interopRequireDefault(_MdListItemContent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  mixins: [_MdRipple2.default],
	  components: {
	    MdListItemContent: _MdListItemContent2.default
	  },
	  props: {
	    disabled: Boolean
	  },
	  computed: {
	    isDisabled: function isDisabled() {
	      return !this.mdRipple || this.disabled;
	    }
	  }
	};

	/***/ }),
	/* 12 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = function (context, props) {
	  return _extends({}, props, context.$options.components['router-link'].options.props);
	};

	/***/ }),
	/* 13 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdButton_vue__ = __webpack_require__(98);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdButton_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdButton_vue__);
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(97)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */
	var __vue_template__ = null
	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdButton_vue___default.a,
	  __vue_template__,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdButton/MdButton.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-7d2cd822", Component.options)
	  } else {
	    hotAPI.reload("data-v-7d2cd822", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 14 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdField/MdInput/MdInput.vue
	var MdInput = __webpack_require__(158);
	var MdInput_default = /*#__PURE__*/__webpack_require__.n(MdInput);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-69de42aa","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdField/MdInput/MdInput.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "input",
	    _vm._g(
	      _vm._b(
	        {
	          directives: [
	            {
	              name: "model",
	              rawName: "v-model",
	              value: _vm.model,
	              expression: "model"
	            }
	          ],
	          staticClass: "md-input",
	          domProps: { value: _vm.model },
	          on: {
	            focus: _vm.onFocus,
	            blur: _vm.onBlur,
	            input: function($event) {
	              if ($event.target.composing) {
	                return
	              }
	              _vm.model = $event.target.value
	            }
	          }
	        },
	        "input",
	        _vm.attributes,
	        false
	      ),
	      _vm.listeners
	    )
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdInput_MdInput = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-69de42aa", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdField/MdInput/MdInput.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdInput_default.a,
	  MdInput_MdInput,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdField/MdInput/MdInput.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-69de42aa", Component.options)
	  } else {
	    hotAPI.reload("data-v-69de42aa", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdField_MdInput_MdInput = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 15 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = {
	  props: {
	    value: {},
	    placeholder: String,
	    maxlength: [String, Number],
	    readonly: Boolean,
	    required: Boolean,
	    disabled: Boolean,
	    mdCounter: [String, Number]
	  },
	  data: function data() {
	    return {
	      localValue: this.value,
	      textareaHeight: false
	    };
	  },

	  computed: {
	    model: {
	      get: function get() {
	        return this.localValue;
	      },
	      set: function set(value) {
	        var _this = this;

	        if (value.constructor.name.toLowerCase() !== 'inputevent') {
	          this.$nextTick(function () {
	            _this.localValue = value;
	          });
	        }
	      }
	    },
	    clear: function clear() {
	      return this.MdField.clear;
	    },
	    attributes: function attributes() {
	      return _extends({}, this.$attrs, {
	        type: this.type,
	        id: this.id,
	        name: this.name,
	        disabled: this.disabled,
	        required: this.required,
	        placeholder: this.placeholder,
	        readonly: this.readonly,
	        maxlength: this.maxlength
	      });
	    }
	  },
	  watch: {
	    model: function model() {
	      this.setFieldValue();
	    },
	    clear: function clear(_clear) {
	      if (_clear) {
	        this.clearField();
	      }
	    },
	    placeholder: function placeholder() {
	      this.setPlaceholder();
	    },
	    disabled: function disabled() {
	      this.setDisabled();
	    },
	    required: function required() {
	      this.setRequired();
	    },
	    maxlength: function maxlength() {
	      this.setMaxlength();
	    },
	    mdCounter: function mdCounter() {
	      this.setMaxlength();
	    },
	    localValue: function localValue(val) {
	      this.$emit('input', val);
	    },
	    value: function value(val) {
	      this.localValue = val;
	    }
	  },
	  methods: {
	    clearField: function clearField() {
	      this.$el.value = '';
	      this.model = '';
	      this.setFieldValue();
	    },
	    setLabelFor: function setLabelFor() {
	      if (this.$el.parentNode) {
	        var label = this.$el.parentNode.querySelector('label');

	        if (label) {
	          var forAttribute = label.getAttribute('for');

	          if (!forAttribute || forAttribute.indexOf('md-') >= 0) {
	            label.setAttribute('for', this.id);
	          }
	        }
	      }
	    },
	    setFieldValue: function setFieldValue() {
	      this.MdField.value = this.model;
	    },
	    setPlaceholder: function setPlaceholder() {
	      this.MdField.placeholder = Boolean(this.placeholder);
	    },
	    setDisabled: function setDisabled() {
	      this.MdField.disabled = Boolean(this.disabled);
	    },
	    setRequired: function setRequired() {
	      this.MdField.required = Boolean(this.required);
	    },
	    setMaxlength: function setMaxlength() {
	      if (this.mdCounter) {
	        this.MdField.counter = parseInt(this.mdCounter, 10);
	      } else {
	        this.MdField.maxlength = parseInt(this.maxlength, 10);
	      }
	    },
	    onFocus: function onFocus() {
	      this.MdField.focused = true;
	    },
	    onBlur: function onBlur() {
	      this.MdField.focused = false;
	    }
	  },
	  created: function created() {
	    this.setFieldValue();
	    this.setPlaceholder();
	    this.setDisabled();
	    this.setRequired();
	    this.setMaxlength();
	  },
	  mounted: function mounted() {
	    this.setLabelFor();
	  }
	};

	/***/ }),
	/* 16 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _vue = __webpack_require__(7);

	var _vue2 = _interopRequireDefault(_vue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	exports.default = {
	  name: 'MdPortal',
	  abstract: true,
	  props: {
	    mdAttachToParent: Boolean,
	    mdTarget: {
	      type: null,
	      validator: function validator(value) {
	        if (HTMLElement && value && value instanceof HTMLElement) {
	          return true;
	        }

	        _vue2.default.util.warn('The md-target-el prop is invalid. You should pass a valid HTMLElement.', this);

	        return false;
	      }
	    }
	  },
	  data: function data() {
	    return {
	      leaveTimeout: null,
	      originalParentEl: null
	    };
	  },
	  computed: {
	    transitionName: function transitionName() {
	      var childrenComponent = this._vnode.componentOptions.children[0];

	      if (childrenComponent) {
	        var transition = childrenComponent.data.transition;

	        if (transition) {
	          return transition.name;
	        } else {
	          var _transition = childrenComponent.componentOptions.propsData.name;

	          if (_transition) {
	            return _transition;
	          }
	        }
	      }

	      return 'v';
	    },
	    leaveClass: function leaveClass() {
	      return this.transitionName + '-leave';
	    },
	    leaveActiveClass: function leaveActiveClass() {
	      return this.transitionName + '-leave-active';
	    },
	    leaveToClass: function leaveToClass() {
	      return this.transitionName + '-leave-to';
	    }
	  },
	  watch: {
	    mdTarget: function mdTarget(newTarget, oldTarget) {
	      this.changeParentEl(newTarget);

	      if (oldTarget) {
	        this.$forceUpdate();
	      }
	    }
	  },
	  methods: {
	    getTransitionDuration: function getTransitionDuration(el) {
	      var duration = getComputedStyle(el).transitionDuration;
	      var num = parseFloat(duration, 10);
	      var unit = duration.match(/m?s/);
	      var milliseconds = null;

	      if (unit) {
	        unit = unit[0];
	      }

	      switch (unit) {
	        case 's':
	          milliseconds = num * 1000;
	          break;

	        case 'ms':
	          milliseconds = num;
	          break;

	        default:
	          milliseconds = 0;
	          break;
	      }

	      return milliseconds;
	    },
	    killGhostElement: function killGhostElement(el) {
	      if (el.parentNode) {
	        this.changeParentEl(this.originalParentEl);
	        this.$options._parentElm = this.originalParentEl;
	        el.parentNode.removeChild(el);
	      }
	    },
	    initDestroy: function () {
	      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(manualCall) {
	        var _this = this;

	        var el;
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                el = this.$el;


	                if (manualCall && this.$el.constructor.name.toLowerCase() === 'comment') {
	                  el = this.$vnode.elm;
	                }

	                el.classList.add(this.leaveClass);
	                el.classList.add(this.leaveActiveClass);
	                _context.next = 6;
	                return this.$nextTick();

	              case 6:
	                el.classList.add(this.leaveToClass);

	                clearTimeout(this.leaveTimeout);
	                this.leaveTimeout = setTimeout(function () {
	                  _this.destroyElement(el);
	                }, this.getTransitionDuration(el));

	              case 9:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function initDestroy(_x) {
	        return _ref.apply(this, arguments);
	      }

	      return initDestroy;
	    }(),
	    destroyElement: function destroyElement(el) {
	      var _this2 = this;

	      requestAnimationFrame(function () {
	        el.classList.remove(_this2.leaveClass);
	        el.classList.remove(_this2.leaveActiveClass);
	        el.classList.remove(_this2.leaveToClass);
	        _this2.$emit('md-destroy');
	        _this2.killGhostElement(el);
	      });
	    },
	    changeParentEl: function changeParentEl(newTarget) {
	      newTarget && newTarget.appendChild(this.$el);
	    }
	  },
	  mounted: function mounted() {
	    if (!this.originalParentEl) {
	      this.originalParentEl = this.$el.parentNode;
	      this.$emit('md-initial-parent', this.$el.parentNode);
	    }

	    if (this.mdAttachToParent && this.$el.parentNode.parentNode) {
	      this.changeParentEl(this.$el.parentNode.parentNode);
	    } else if (document) {
	      this.changeParentEl(this.mdTarget || document.body);
	    }
	  },
	  beforeDestroy: function beforeDestroy() {
	    if (this.$el.classList) {
	      this.initDestroy();
	    } else {
	      this.killGhostElement(this.$el);
	    }
	  },
	  render: function render(createElement) {
	    var defaultSlot = this.$slots.default;

	    if (defaultSlot && defaultSlot[0]) {
	      return defaultSlot[0];
	    }
	  }
	};

	/***/ }),
	/* 17 */
	/***/ (function(module, exports) {

	var g;

	// This works in non-strict mode
	g = (function() {
		return this;
	})();

	try {
		// This works if eval is allowed (see CSP)
		g = g || Function("return this")() || (1,eval)("this");
	} catch(e) {
		// This works if the window reference is available
		if(typeof window === "object")
			g = window;
	}

	// g can still be undefined, but nothing to do about it...
	// We return undefined, instead of nothing here, so it's
	// easier to handle this case. if(!global) { ...}

	module.exports = g;


	/***/ }),
	/* 18 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  methods: {
	    isAssetIcon: function isAssetIcon(icon) {
	      return (/\w+[/\\.]\w+/.test(icon)
	      );
	    }
	  }
	};

	/***/ }),
	/* 19 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdRipple = __webpack_require__(8);

	var _MdRipple2 = _interopRequireDefault(_MdRipple);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  components: {
	    MdRipple: _MdRipple2.default
	  },
	  props: {
	    mdRipple: {
	      type: Boolean,
	      default: true
	    }
	  }
	};

	/***/ }),
	/* 20 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdField/MdField.vue
	var MdField = __webpack_require__(147);
	var MdField_default = /*#__PURE__*/__webpack_require__.n(MdField);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-2ecd7b97","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdField/MdField.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    {
	      staticClass: "md-field",
	      class: [_vm.$mdActiveTheme, _vm.fieldClasses],
	      on: { blur: _vm.onBlur }
	    },
	    [
	      _vm._t("default"),
	      _vm._v(" "),
	      _vm.hasCounter
	        ? _c("span", { staticClass: "md-count" }, [
	            _vm._v(
	              _vm._s(_vm.valueLength) +
	                " / " +
	                _vm._s(_vm.MdField.maxlength || _vm.MdField.counter)
	            )
	          ])
	        : _vm._e(),
	      _vm._v(" "),
	      _c(
	        "transition",
	        { attrs: { name: "md-input-action", appear: "" } },
	        [
	          _vm.hasValue && _vm.mdClearable
	            ? _c(
	                "md-button",
	                {
	                  staticClass:
	                    "md-icon-button md-dense md-input-action md-clear",
	                  attrs: { tabindex: "-1" },
	                  on: { click: _vm.clearInput }
	                },
	                [_c("md-clear-icon")],
	                1
	              )
	            : _vm._e()
	        ],
	        1
	      ),
	      _vm._v(" "),
	      _c(
	        "transition",
	        { attrs: { name: "md-input-action", appear: "" } },
	        [
	          _vm.hasPasswordToggle
	            ? _c(
	                "md-button",
	                {
	                  staticClass:
	                    "md-icon-button md-dense md-input-action md-toggle-password",
	                  attrs: { tabindex: "-1" },
	                  on: { click: _vm.togglePassword }
	                },
	                [
	                  _vm.MdField.togglePassword
	                    ? _c("md-password-off-icon")
	                    : _c("md-password-on-icon")
	                ],
	                1
	              )
	            : _vm._e()
	        ],
	        1
	      )
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdField_MdField = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-2ecd7b97", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdField/MdField.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(146)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdField_default.a,
	  MdField_MdField,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdField/MdField.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-2ecd7b97", Component.options)
	  } else {
	    hotAPI.reload("data-v-2ecd7b97", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdField_MdField = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 21 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)

	/**
	 * @category Day Helpers
	 * @summary Return the start of a day for the given date.
	 *
	 * @description
	 * Return the start of a day for the given date.
	 * The result will be in the local timezone.
	 *
	 * @param {Date|String|Number} date - the original date
	 * @returns {Date} the start of a day
	 *
	 * @example
	 * // The start of a day for 2 September 2014 11:55:00:
	 * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
	 * //=> Tue Sep 02 2014 00:00:00
	 */
	function startOfDay (dirtyDate) {
	  var date = parse(dirtyDate)
	  date.setHours(0, 0, 0, 0)
	  return date
	}

	module.exports = startOfDay


	/***/ }),
	/* 22 */
	/***/ (function(module, exports, __webpack_require__) {

	var startOfWeek = __webpack_require__(174)

	/**
	 * @category ISO Week Helpers
	 * @summary Return the start of an ISO week for the given date.
	 *
	 * @description
	 * Return the start of an ISO week for the given date.
	 * The result will be in the local timezone.
	 *
	 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
	 *
	 * @param {Date|String|Number} date - the original date
	 * @returns {Date} the start of an ISO week
	 *
	 * @example
	 * // The start of an ISO week for 2 September 2014 11:55:00:
	 * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
	 * //=> Mon Sep 01 2014 00:00:00
	 */
	function startOfISOWeek (dirtyDate) {
	  return startOfWeek(dirtyDate, {weekStartsOn: 1})
	}

	module.exports = startOfISOWeek


	/***/ }),
	/* 23 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdOverlay/MdOverlay.vue
	var MdOverlay = __webpack_require__(181);
	var MdOverlay_default = /*#__PURE__*/__webpack_require__.n(MdOverlay);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-0e05c97a","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdOverlay/MdOverlay.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-portal",
	    { attrs: { "md-attach-to-parent": _vm.mdAttachToParent } },
	    [
	      _c("transition", { attrs: { name: "md-overlay" } }, [
	        _vm.mdActive
	          ? _c(
	              "div",
	              _vm._g(
	                { staticClass: "md-overlay", class: _vm.overlayClasses },
	                _vm.$listeners
	              )
	            )
	          : _vm._e()
	      ])
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdOverlay_MdOverlay = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-0e05c97a", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdOverlay/MdOverlay.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(180)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdOverlay_default.a,
	  MdOverlay_MdOverlay,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdOverlay/MdOverlay.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-0e05c97a", Component.options)
	  } else {
	    hotAPI.reload("data-v-0e05c97a", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdOverlay_MdOverlay = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 24 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)

	/**
	 * @category Month Helpers
	 * @summary Get the number of days in a month of the given date.
	 *
	 * @description
	 * Get the number of days in a month of the given date.
	 *
	 * @param {Date|String|Number} date - the given date
	 * @returns {Number} the number of days in a month
	 *
	 * @example
	 * // How many days are in February 2000?
	 * var result = getDaysInMonth(new Date(2000, 1))
	 * //=> 29
	 */
	function getDaysInMonth (dirtyDate) {
	  var date = parse(dirtyDate)
	  var year = date.getFullYear()
	  var monthIndex = date.getMonth()
	  var lastDayOfMonth = new Date(0)
	  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0)
	  lastDayOfMonth.setHours(0, 0, 0, 0)
	  return lastDayOfMonth.getDate()
	}

	module.exports = getDaysInMonth


	/***/ }),
	/* 25 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdPopover_vue__ = __webpack_require__(198);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdPopover_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdPopover_vue__);
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(197)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */
	var __vue_template__ = null
	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdPopover_vue___default.a,
	  __vue_template__,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdPopover/MdPopover.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-d36236a6", Component.options)
	  } else {
	    hotAPI.reload("data-v-d36236a6", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 26 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (el, config, cb) {
	  if ('MutationObserver' in window) {
	    var observer = new window.MutationObserver(cb);

	    observer.observe(el, config);

	    return {
	      disconnect: function disconnect() {
	        observer.disconnect();
	      }
	    };
	  }
	};

	/***/ }),
	/* 27 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTable/MdTableHead.vue
	var MdTableHead = __webpack_require__(360);
	var MdTableHead_default = /*#__PURE__*/__webpack_require__.n(MdTableHead);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-98ddc082","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTable/MdTableHead.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "th",
	    {
	      staticClass: "md-table-head",
	      class: _vm.headClasses,
	      style: _vm.headStyles,
	      on: { click: _vm.changeSort }
	    },
	    [
	      _vm.$slots.default
	        ? _c("div", { staticClass: "md-table-head-container" }, [
	            _c(
	              "div",
	              { staticClass: "md-table-head-label" },
	              [_vm._t("default")],
	              2
	            )
	          ])
	        : _c(
	            "md-ripple",
	            {
	              staticClass: "md-table-head-container",
	              attrs: { "md-disabled": !_vm.hasSort }
	            },
	            [
	              _c(
	                "div",
	                { staticClass: "md-table-head-label" },
	                [
	                  _vm.hasSort
	                    ? _c(
	                        "md-upward-icon",
	                        { staticClass: "md-table-sortable-icon" },
	                        [_vm._v("arrow_upward")]
	                      )
	                    : _vm._e(),
	                  _vm._v("\n\n      " + _vm._s(_vm.label) + "\n\n      "),
	                  _vm.tooltip
	                    ? _c("md-tooltip", [_vm._v(_vm._s(_vm.tooltip))])
	                    : _vm._e()
	                ],
	                1
	              )
	            ]
	          )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTable_MdTableHead = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-98ddc082", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTable/MdTableHead.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(359)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTableHead_default.a,
	  MdTable_MdTableHead,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTable/MdTableHead.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-98ddc082", Component.options)
	  } else {
	    hotAPI.reload("data-v-98ddc082", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTable_MdTableHead = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 28 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (data) {
	  var Instance = {};

	  _vue2.default.util.defineReactive(Instance, 'reactive', data);

	  return Instance.reactive;
	};

	var _vue = __webpack_require__(7);

	var _vue2 = _interopRequireDefault(_vue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/***/ }),
	/* 29 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _vue = __webpack_require__(7);

	var _vue2 = _interopRequireDefault(_vue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var msColor = null;
	var themeColor = null;
	var maskIcon = null;

	exports.default = new _vue2.default({
	  data: function data() {
	    return {
	      prefix: 'md-theme-',
	      theme: 'default',
	      enabled: true,
	      metaColors: false
	    };
	  },
	  computed: {
	    themeTarget: function themeTarget() {
	      if (!this.$isServer) {
	        return document.documentElement;
	      }

	      return false;
	    },
	    fullThemeName: function fullThemeName() {
	      return this.getThemeName();
	    }
	  },
	  watch: {
	    enabled: {
	      immediate: true,
	      handler: function handler() {
	        var fullThemeName = this.fullThemeName,
	            themeTarget = this.themeTarget,
	            enabled = this.enabled;


	        if (themeTarget) {
	          if (enabled) {
	            themeTarget.classList.add(fullThemeName);
	            this.metaColors && this.setHtmlMetaColors(fullThemeName);
	          } else {
	            themeTarget.classList.remove(fullThemeName);
	            this.metaColors && this.setHtmlMetaColors();
	          }
	        }
	      }
	    },
	    theme: function theme(newTheme, oldTheme) {
	      var getThemeName = this.getThemeName,
	          themeTarget = this.themeTarget;


	      newTheme = getThemeName(newTheme);

	      themeTarget.classList.remove(getThemeName(oldTheme));
	      themeTarget.classList.add(newTheme);

	      if (this.metaColors) {
	        this.setHtmlMetaColors(newTheme);
	      }
	    },
	    metaColors: function metaColors(meta) {
	      if (meta) {
	        this.setHtmlMetaColors(this.fullThemeName);
	      } else {
	        this.setHtmlMetaColors();
	      }
	    }
	  },
	  methods: {
	    getAncestorTheme: function getAncestorTheme(component) {
	      var _this = this;

	      if (component) {
	        var currentTheme = component.mdTheme;
	        var getParentThemeName = function getParentThemeName(parent) {
	          if (parent) {
	            var mdTheme = parent.mdTheme,
	                $parent = parent.$parent;


	            if (mdTheme && mdTheme !== currentTheme) {
	              return mdTheme;
	            }

	            return getParentThemeName($parent);
	          }

	          return _this.theme;
	        };

	        return getParentThemeName(component.$parent);
	      }

	      return null;
	    },
	    getThemeName: function getThemeName(theme) {
	      var themeName = theme || this.theme;

	      return this.prefix + themeName;
	    },
	    setMicrosoftColors: function setMicrosoftColors(primaryColor) {
	      if (msColor) {
	        msColor.setAttribute('content', primaryColor);
	      }
	    },
	    setThemeColors: function setThemeColors(primaryColor) {
	      if (themeColor) {
	        themeColor.setAttribute('content', primaryColor);
	      }
	    },
	    setMaskColors: function setMaskColors(primaryColor) {
	      if (maskIcon) {
	        maskIcon.setAttribute('color', primaryColor);
	      }
	    },
	    setHtmlMetaColors: function setHtmlMetaColors(themeName) {
	      var primaryColor = '#fff';

	      if (themeName) {
	        var computedStyle = window.getComputedStyle(document.documentElement);

	        primaryColor = computedStyle.getPropertyValue('--' + themeName + '-primary');
	      }

	      if (primaryColor) {
	        this.setMicrosoftColors(primaryColor);
	        this.setThemeColors(primaryColor);
	        this.setMaskColors(primaryColor);
	      }
	    }
	  },
	  mounted: function mounted() {
	    var _this2 = this;

	    msColor = document.querySelector('[name="msapplication-TileColor"]');
	    themeColor = document.querySelector('[name="theme-color"]');
	    maskIcon = document.querySelector('[rel="mask-icon"]');

	    if (this.enabled && this.metaColors) {
	      window.addEventListener('load', function () {
	        _this2.setHtmlMetaColors(_this2.fullThemeName);
	      });
	    }
	  }
	});

	/***/ }),
	/* 30 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
	var isMergeableObject = function isMergeableObject(value) {
		return isNonNullObject(value)
			&& !isSpecial(value)
	};

	function isNonNullObject(value) {
		return !!value && typeof value === 'object'
	}

	function isSpecial(value) {
		var stringValue = Object.prototype.toString.call(value);

		return stringValue === '[object RegExp]'
			|| stringValue === '[object Date]'
			|| isReactElement(value)
	}

	// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
	var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
	var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

	function isReactElement(value) {
		return value.$$typeof === REACT_ELEMENT_TYPE
	}

	function emptyTarget(val) {
		return Array.isArray(val) ? [] : {}
	}

	function cloneUnlessOtherwiseSpecified(value, optionsArgument) {
		var clone = !optionsArgument || optionsArgument.clone !== false;

		return (clone && isMergeableObject(value))
			? deepmerge(emptyTarget(value), value, optionsArgument)
			: value
	}

	function defaultArrayMerge(target, source, optionsArgument) {
		return target.concat(source).map(function(element) {
			return cloneUnlessOtherwiseSpecified(element, optionsArgument)
		})
	}

	function mergeObject(target, source, optionsArgument) {
		var destination = {};
		if (isMergeableObject(target)) {
			Object.keys(target).forEach(function(key) {
				destination[key] = cloneUnlessOtherwiseSpecified(target[key], optionsArgument);
			});
		}
		Object.keys(source).forEach(function(key) {
			if (!isMergeableObject(source[key]) || !target[key]) {
				destination[key] = cloneUnlessOtherwiseSpecified(source[key], optionsArgument);
			} else {
				destination[key] = deepmerge(target[key], source[key], optionsArgument);
			}
		});
		return destination
	}

	function deepmerge(target, source, optionsArgument) {
		var sourceIsArray = Array.isArray(source);
		var targetIsArray = Array.isArray(target);
		var options = optionsArgument || { arrayMerge: defaultArrayMerge };
		var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

		if (!sourceAndTargetTypesMatch) {
			return cloneUnlessOtherwiseSpecified(source, optionsArgument)
		} else if (sourceIsArray) {
			var arrayMerge = options.arrayMerge || defaultArrayMerge;
			return arrayMerge(target, source, optionsArgument)
		} else {
			return mergeObject(target, source, optionsArgument)
		}
	}

	deepmerge.all = function deepmergeAll(array, optionsArgument) {
		if (!Array.isArray(array)) {
			throw new Error('first argument should be an array')
		}

		return array.reduce(function(prev, next) {
			return deepmerge(prev, next, optionsArgument)
		}, {})
	};

	var deepmerge_1 = deepmerge;

	/* harmony default export */ __webpack_exports__["default"] = (deepmerge_1);


	/***/ }),
	/* 31 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _raf = __webpack_require__(9);

	var _raf2 = _interopRequireDefault(_raf);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var mdAppModes = ['fixed', 'fixed-last', 'reveal', 'overlap', 'flexible'];

	exports.default = {
	  props: {
	    mdMode: _extends({
	      type: String
	    }, (0, _MdPropValidator2.default)('md-mode', mdAppModes)),
	    mdWaterfall: Boolean,
	    mdScrollbar: {
	      type: Boolean,
	      default: true
	    }
	  },
	  data: function data() {
	    return {
	      revealTimer: null,
	      revealLastPos: 0,
	      manualTick: false,
	      MdApp: {
	        options: {
	          mode: null,
	          waterfall: false,
	          flexible: false
	        },
	        toolbar: {
	          element: null,
	          titleElement: null,
	          height: '0px',
	          initialHeight: 0,
	          top: 0,
	          titleSize: 20,
	          hasElevation: true,
	          revealActive: false,
	          fixedLastActive: false,
	          fixedLastHeight: false,
	          overlapOff: false
	        },
	        drawer: {
	          initialWidth: 0,
	          active: false,
	          mode: 'temporary',
	          width: 0
	        }
	      }
	    };
	  },
	  provide: function provide() {
	    return {
	      MdApp: this.MdApp
	    };
	  },

	  computed: {
	    contentStyles: function contentStyles() {
	      var drawer = this.MdApp.drawer;

	      if (drawer.active && drawer.mode === 'persistent' && drawer.submode === 'full') {
	        return {
	          'padding-left': drawer.width
	        };
	      }
	    },
	    containerStyles: function containerStyles() {
	      var drawer = this.MdApp.drawer;
	      var styles = {};

	      if (this.mdMode && this.mdMode !== 'fixed') {
	        styles['margin-top'] = this.MdApp.toolbar.initialHeight + 'px';
	      }

	      if (drawer.mode === 'persistent' && drawer.submode === 'mini') {
	        styles['padding-left'] = !drawer.active ? drawer.initialWidth + 'px' : 0;
	      }

	      return styles;
	    },
	    scrollerClasses: function scrollerClasses() {
	      if (this.mdScrollbar) {
	        return 'md-scrollbar';
	      }
	    },
	    appClasses: function appClasses() {
	      return {
	        'md-waterfall': this.mdWaterfall,
	        'md-flexible': this.mdMode === 'flexible',
	        'md-fixed': this.mdMode === 'fixed',
	        'md-fixed-last': this.mdMode === 'fixed-last',
	        'md-reveal': this.mdMode === 'reveal',
	        'md-overlap': this.mdMode === 'overlap',
	        'md-drawer-active': this.MdApp.drawer.active
	      };
	    }
	  },
	  watch: {
	    mdMode: function mdMode(mode) {
	      this.MdApp.options.mode = mode;
	    },
	    mdWaterfall: function mdWaterfall(waterfall) {
	      this.MdApp.options.waterfall = waterfall;
	      this.setToolbarElevation();
	    }
	  },
	  methods: {
	    setToolbarElevation: function setToolbarElevation() {
	      this.MdApp.toolbar.hasElevation = !this.mdWaterfall;
	    },
	    setToolbarTimer: function setToolbarTimer(scrollTop) {
	      var _this = this;

	      window.clearTimeout(this.revealTimer);

	      this.revealTimer = window.setTimeout(function () {
	        _this.revealLastPos = scrollTop;
	      }, 100);
	    },
	    setToolbarMarginAndHeight: function setToolbarMarginAndHeight(margin, height) {
	      this.MdApp.toolbar.top = margin;
	      this.MdApp.toolbar.height = height;
	    },
	    getToolbarConstrants: function getToolbarConstrants($event) {
	      var toolbarHeight = this.MdApp.toolbar.element.offsetHeight;
	      var safeAmount = 10;
	      var threshold = toolbarHeight + safeAmount;
	      var scrollTop = $event.target.scrollTop;

	      if (!this.MdApp.toolbar.initialHeight) {
	        this.MdApp.toolbar.initialHeight = toolbarHeight;
	      }

	      return {
	        toolbarHeight: toolbarHeight,
	        safeAmount: safeAmount,
	        threshold: threshold,
	        scrollTop: scrollTop,
	        initialHeight: this.MdApp.toolbar.initialHeight
	      };
	    },
	    handleWaterfallScroll: function handleWaterfallScroll($event) {
	      var _getToolbarConstrants = this.getToolbarConstrants($event),
	          threshold = _getToolbarConstrants.threshold,
	          scrollTop = _getToolbarConstrants.scrollTop;

	      var elevationMark = 4;

	      if (this.mdMode === 'reveal') {
	        elevationMark = threshold;
	      }

	      this.MdApp.toolbar.hasElevation = scrollTop >= elevationMark;
	    },
	    handleFlexibleMode: function handleFlexibleMode($event) {
	      var _getToolbarConstrants2 = this.getToolbarConstrants($event),
	          scrollTop = _getToolbarConstrants2.scrollTop,
	          initialHeight = _getToolbarConstrants2.initialHeight;

	      var toolbar = this.MdApp.toolbar.element;
	      var firstRow = toolbar.querySelector('.md-toolbar-row:first-child');
	      var firstRowHeight = firstRow.offsetHeight;
	      var scrollAmount = initialHeight - scrollTop;
	      var shouldKeepFlexible = scrollTop < initialHeight - firstRowHeight;

	      if (firstRowHeight) {
	        if (shouldKeepFlexible) {
	          toolbar.style.height = scrollAmount + 'px';
	        } else {
	          toolbar.style.height = firstRowHeight + 'px';
	        }
	      }

	      var titleElement = this.MdApp.toolbar.titleElement;
	      if (titleElement) {
	        var targetSize = 20;
	        var initialSize = this.MdApp.toolbar.titleSize;

	        if (shouldKeepFlexible) {
	          var newSize = Math.max(0, 1 - (scrollTop - initialSize) / (scrollAmount + initialSize + 0.000001)) * (initialSize - targetSize) + targetSize;

	          titleElement.style.fontSize = newSize + 'px';
	        } else {
	          titleElement.style.fontSize = '20px';
	        }
	      }

	      var _getToolbarConstrants3 = this.getToolbarConstrants($event),
	          threshold = _getToolbarConstrants3.threshold,
	          toolbarHeight = _getToolbarConstrants3.toolbarHeight;

	      this.setToolbarMarginAndHeight(scrollTop - threshold, toolbarHeight);
	    },
	    handleRevealMode: function handleRevealMode($event) {
	      var _getToolbarConstrants4 = this.getToolbarConstrants($event),
	          toolbarHeight = _getToolbarConstrants4.toolbarHeight,
	          safeAmount = _getToolbarConstrants4.safeAmount,
	          threshold = _getToolbarConstrants4.threshold,
	          scrollTop = _getToolbarConstrants4.scrollTop;

	      this.setToolbarTimer(scrollTop);
	      this.setToolbarMarginAndHeight(scrollTop - threshold, toolbarHeight);

	      if (scrollTop >= threshold) {
	        this.MdApp.toolbar.revealActive = this.revealLastPos > scrollTop + safeAmount;
	      } else {
	        this.MdApp.toolbar.revealActive = true;
	      }
	    },
	    handleFixedLastMode: function handleFixedLastMode($event) {
	      var _getToolbarConstrants5 = this.getToolbarConstrants($event),
	          scrollTop = _getToolbarConstrants5.scrollTop,
	          toolbarHeight = _getToolbarConstrants5.toolbarHeight,
	          safeAmount = _getToolbarConstrants5.safeAmount;

	      var toolbar = this.MdApp.toolbar.element;
	      var firstRow = toolbar.querySelector('.md-toolbar-row:first-child');
	      var firstRowHeight = firstRow.offsetHeight;

	      this.setToolbarTimer(scrollTop);
	      this.setToolbarMarginAndHeight(scrollTop - firstRowHeight, toolbarHeight);
	      this.MdApp.toolbar.fixedLastHeight = firstRowHeight;

	      if (scrollTop >= firstRowHeight) {
	        this.MdApp.toolbar.fixedLastActive = this.revealLastPos > scrollTop + safeAmount;
	      } else {
	        this.MdApp.toolbar.fixedLastActive = true;
	      }
	    },
	    handleOverlapMode: function handleOverlapMode($event) {
	      var _getToolbarConstrants6 = this.getToolbarConstrants($event),
	          toolbarHeight = _getToolbarConstrants6.toolbarHeight,
	          scrollTop = _getToolbarConstrants6.scrollTop,
	          initialHeight = _getToolbarConstrants6.initialHeight;

	      var toolbar = this.MdApp.toolbar.element;
	      var firstRow = toolbar.querySelector('.md-toolbar-row:first-child');
	      var firstRowHeight = firstRow.offsetHeight;
	      var newHeight = initialHeight - scrollTop - scrollTop * 100 / (initialHeight - firstRowHeight - firstRowHeight / 1.5);

	      if (firstRowHeight) {
	        if (scrollTop < initialHeight - firstRowHeight && newHeight >= firstRowHeight) {
	          this.MdApp.toolbar.overlapOff = false;
	          toolbar.style.height = newHeight + 'px';
	        } else {
	          this.MdApp.toolbar.overlapOff = true;
	          toolbar.style.height = firstRowHeight + 'px';
	        }
	      }

	      this.setToolbarMarginAndHeight(scrollTop, toolbarHeight);
	    },
	    handleModeScroll: function handleModeScroll($event) {
	      if (this.mdMode === 'reveal') {
	        this.handleRevealMode($event);
	      } else if (this.mdMode === 'fixed-last') {
	        this.handleFixedLastMode($event);
	      } else if (this.mdMode === 'overlap') {
	        this.handleOverlapMode($event);
	      } else if (this.mdMode === 'flexible') {
	        this.handleFlexibleMode($event);
	      }
	    },
	    handleScroll: function handleScroll($event) {
	      var _this2 = this;

	      if (this.MdApp.toolbar.element) {
	        (0, _raf2.default)(function () {
	          if (_this2.mdWaterfall) {
	            _this2.handleWaterfallScroll($event);
	          }

	          if (_this2.mdMode) {
	            _this2.handleModeScroll($event);
	          }
	        });
	      }
	    }
	  },
	  created: function created() {
	    this.MdApp.options.mode = this.mdMode;
	    this.MdApp.options.waterfall = this.mdWaterfall;
	    this.setToolbarElevation();
	  },
	  mounted: function mounted() {
	    var fakeEvent = {
	      target: {
	        scrollTop: 0
	      }
	    };

	    if (this.mdMode === 'reveal') {
	      this.MdApp.toolbar.revealActive = true;
	      this.handleRevealMode(fakeEvent);
	    }

	    if (this.mdMode === 'flexible') {
	      this.MdApp.toolbar.revealActive = true;
	      this.handleFlexibleMode(fakeEvent);
	    }

	    if (this.mdMode === 'fixed-last') {
	      this.MdApp.toolbar.fixedLastActive = true;
	      this.handleFixedLastMode(fakeEvent);
	    }

	    if (this.mdMode === 'overlap') {
	      this.handleOverlapMode(fakeEvent);
	    }
	  }
	};

	/***/ }),
	/* 32 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdReactive = __webpack_require__(28);

	var _MdReactive2 = _interopRequireDefault(_MdReactive);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var hasEvents = false;
	var eventTarget = null;
	var supportsPassiveEvent = false;
	var MdFocused = new _MdReactive2.default({
	  currentElement: null
	});

	function checkPassiveEventSupport() {
	  try {
	    var opts = Object.defineProperty({}, 'passive', {
	      get: function get() {
	        supportsPassiveEvent = { passive: true };
	      }
	    });
	    window.addEventListener('ghost', null, opts);
	  } catch (e) {}
	}

	function setKeyboardInteraction(_ref) {
	  var keyCode = _ref.keyCode,
	      target = _ref.target;

	  MdFocused.currentElement = target;
	}

	function setMouseAndTouchInteraction(event) {
	  MdFocused.currentElement = null;
	}

	function createKeyboardEvents() {
	  eventTarget.addEventListener('keyup', setKeyboardInteraction);
	}

	function createPointerEvents() {
	  eventTarget.addEventListener('pointerup', setMouseAndTouchInteraction);
	}

	function createMSPointerEvents() {
	  eventTarget.addEventListener('MSPointerUp', setMouseAndTouchInteraction);
	}

	function createMouseAndTouchEvents() {
	  eventTarget.addEventListener('mouseup', setMouseAndTouchInteraction);

	  if ('ontouchend' in window) {
	    eventTarget.addEventListener('touchend', setMouseAndTouchInteraction, supportsPassiveEvent);
	  }
	}

	function bindEvents() {
	  if (window.PointerEvent) {
	    createPointerEvents();
	  } else if (window.MSPointerEvent) {
	    createMSPointerEvents();
	  } else {
	    createMouseAndTouchEvents();
	  }

	  createKeyboardEvents();
	}

	function createEvents() {
	  if (!hasEvents) {
	    eventTarget = document.body;
	    checkPassiveEventSupport();
	    bindEvents();
	    hasEvents = true;
	  }
	}

	exports.default = {
	  data: function data() {
	    return {
	      mdHasFocus: false
	    };
	  },
	  computed: {
	    focusedElement: function focusedElement() {
	      return MdFocused.currentElement;
	    }
	  },
	  watch: {
	    focusedElement: function focusedElement(el) {
	      this.mdHasFocus = el === this.$el;
	    }
	  },
	  mounted: function mounted() {
	    createEvents();
	  }
	};

	/***/ }),
	/* 33 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdRipple = __webpack_require__(8);

	var _MdRipple2 = _interopRequireDefault(_MdRipple);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  components: {
	    MdRipple: _MdRipple2.default
	  },
	  props: {
	    model: [String, Number, Boolean, Array],
	    value: {
	      type: [String, Number, Boolean],
	      default: 'on'
	    },
	    name: [String, Number],
	    required: Boolean,
	    disabled: Boolean
	  },
	  model: {
	    prop: 'model',
	    event: 'change'
	  },
	  data: function data() {
	    return {
	      rippleActive: false
	    };
	  },
	  computed: {
	    isSelected: function isSelected() {
	      if (this.isModelArray) {
	        return this.model.includes(this.value);
	      }

	      if (this.isModelBoolean && this.value === 'on') {
	        return this.model;
	      }

	      return this.model === this.value;
	    },
	    isModelArray: function isModelArray() {
	      return Array.isArray(this.model);
	    },
	    isModelBoolean: function isModelBoolean() {
	      return typeof this.model === 'boolean';
	    },
	    checkClasses: function checkClasses() {
	      return {
	        'md-checked': this.isSelected,
	        'md-disabled': this.disabled,
	        'md-required': this.required
	      };
	    }
	  },
	  methods: {
	    removeItemFromModel: function removeItemFromModel(newModel) {
	      var index = newModel.indexOf(this.value);

	      if (index !== -1) {
	        newModel.splice(index, 1);
	      }
	    },
	    handleArrayCheckbox: function handleArrayCheckbox() {
	      var newModel = this.model;

	      if (!this.isSelected) {
	        newModel.push(this.value);
	      } else {
	        this.removeItemFromModel(newModel);
	      }

	      this.$emit('change', newModel);
	    },
	    handleStringCheckbox: function handleStringCheckbox() {
	      if (!this.isSelected) {
	        this.$emit('change', this.value);
	      } else {
	        this.$emit('change', null);
	      }
	    },
	    handleBooleanCheckbox: function handleBooleanCheckbox() {
	      this.$emit('change', !this.model);
	    },
	    toggleCheck: function toggleCheck() {
	      if (!this.disabled) {
	        this.rippleActive = true;

	        if (this.isModelArray) {
	          this.handleArrayCheckbox();
	        } else if (this.isModelBoolean) {
	          this.handleBooleanCheckbox();
	        } else {
	          this.handleStringCheckbox();
	        }
	      }
	    }
	  }
	};

	/***/ }),
	/* 34 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdClearIcon.vue
	var MdClearIcon = __webpack_require__(148);
	var MdClearIcon_default = /*#__PURE__*/__webpack_require__.n(MdClearIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-f53126ba","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdClearIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(1)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c(
	      "svg",
	      {
	        attrs: {
	          height: "24",
	          viewBox: "0 0 24 24",
	          width: "24",
	          xmlns: "http://www.w3.org/2000/svg"
	        }
	      },
	      [
	        _c("path", {
	          attrs: {
	            d:
	              "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
	          }
	        }),
	        _vm._v(" "),
	        _c("path", { attrs: { d: "M0 0h24v24H0z", fill: "none" } })
	      ]
	    )
	  },
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [_vm._m(0)])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdClearIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-f53126ba", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdClearIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdClearIcon_default.a,
	  icons_MdClearIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdClearIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-f53126ba", Component.options)
	  } else {
	    hotAPI.reload("data-v-f53126ba", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdClearIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 35 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdContent_vue__ = __webpack_require__(163);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdContent_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdContent_vue__);
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */
	var __vue_template__ = null
	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdContent_vue___default.a,
	  __vue_template__,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdContent/MdContent.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-500cc355", Component.options)
	  } else {
	    hotAPI.reload("data-v-500cc355", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 36 */
	/***/ (function(module, exports) {

	/**
	 * @category Common Helpers
	 * @summary Is the given argument an instance of Date?
	 *
	 * @description
	 * Is the given argument an instance of Date?
	 *
	 * @param {*} argument - the argument to check
	 * @returns {Boolean} the given argument is an instance of Date
	 *
	 * @example
	 * // Is 'mayonnaise' a Date?
	 * var result = isDate('mayonnaise')
	 * //=> false
	 */
	function isDate (argument) {
	  return argument instanceof Date
	}

	module.exports = isDate


	/***/ }),
	/* 37 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)
	var startOfISOWeek = __webpack_require__(22)

	/**
	 * @category ISO Week-Numbering Year Helpers
	 * @summary Get the ISO week-numbering year of the given date.
	 *
	 * @description
	 * Get the ISO week-numbering year of the given date,
	 * which always starts 3 days before the year's first Thursday.
	 *
	 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
	 *
	 * @param {Date|String|Number} date - the given date
	 * @returns {Number} the ISO week-numbering year
	 *
	 * @example
	 * // Which ISO-week numbering year is 2 January 2005?
	 * var result = getISOYear(new Date(2005, 0, 2))
	 * //=> 2004
	 */
	function getISOYear (dirtyDate) {
	  var date = parse(dirtyDate)
	  var year = date.getFullYear()

	  var fourthOfJanuaryOfNextYear = new Date(0)
	  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)
	  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)
	  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear)

	  var fourthOfJanuaryOfThisYear = new Date(0)
	  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4)
	  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0)
	  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear)

	  if (date.getTime() >= startOfNextYear.getTime()) {
	    return year + 1
	  } else if (date.getTime() >= startOfThisYear.getTime()) {
	    return year
	  } else {
	    return year - 1
	  }
	}

	module.exports = getISOYear


	/***/ }),
	/* 38 */
	/***/ (function(module, exports, __webpack_require__) {

	var isDate = __webpack_require__(36)

	/**
	 * @category Common Helpers
	 * @summary Is the given date valid?
	 *
	 * @description
	 * Returns false if argument is Invalid Date and true otherwise.
	 * Invalid Date is a Date, whose time value is NaN.
	 *
	 * Time value of Date: http://es5.github.io/#x15.9.1.1
	 *
	 * @param {Date} date - the date to check
	 * @returns {Boolean} the date is valid
	 * @throws {TypeError} argument must be an instance of Date
	 *
	 * @example
	 * // For the valid date:
	 * var result = isValid(new Date(2014, 1, 31))
	 * //=> true
	 *
	 * @example
	 * // For the invalid date:
	 * var result = isValid(new Date(''))
	 * //=> false
	 */
	function isValid (dirtyDate) {
	  if (isDate(dirtyDate)) {
	    return !isNaN(dirtyDate)
	  } else {
	    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date')
	  }
	}

	module.exports = isValid


	/***/ }),
	/* 39 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)
	var getDaysInMonth = __webpack_require__(24)

	/**
	 * @category Month Helpers
	 * @summary Add the specified number of months to the given date.
	 *
	 * @description
	 * Add the specified number of months to the given date.
	 *
	 * @param {Date|String|Number} date - the date to be changed
	 * @param {Number} amount - the amount of months to be added
	 * @returns {Date} the new date with the months added
	 *
	 * @example
	 * // Add 5 months to 1 September 2014:
	 * var result = addMonths(new Date(2014, 8, 1), 5)
	 * //=> Sun Feb 01 2015 00:00:00
	 */
	function addMonths (dirtyDate, dirtyAmount) {
	  var date = parse(dirtyDate)
	  var amount = Number(dirtyAmount)
	  var desiredMonth = date.getMonth() + amount
	  var dateWithDesiredMonth = new Date(0)
	  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1)
	  dateWithDesiredMonth.setHours(0, 0, 0, 0)
	  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)
	  // Set the last day of the new month
	  // if the original date was the last day of the longer month
	  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()))
	  return date
	}

	module.exports = addMonths


	/***/ }),
	/* 40 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _vue = __webpack_require__(7);

	var _vue2 = _interopRequireDefault(_vue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdFocusTrap',
	  abstract: true,
	  methods: {
	    setFocus: function setFocus() {
	      var _this = this;

	      window.setTimeout(function () {
	        if (_this.$el.tagName) {
	          _this.$el.setAttribute('tabindex', '-1');
	          _this.$el.focus();
	        }
	      }, 20);
	    }
	  },
	  mounted: function mounted() {
	    this.setFocus();
	  },
	  render: function render() {
	    try {
	      var defaultSlot = this.$slots.default;

	      if (!defaultSlot) {
	        return null;
	      }

	      if (defaultSlot.length > 1) {
	        throw new Error();
	      }

	      return defaultSlot[0];
	    } catch (e) {
	      _vue2.default.util.warn('MdFocusTrap can only render one, and exactly one child component.', this);
	    }

	    return null;
	  }
	};

	/***/ }),
	/* 41 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdEmptyState/MdEmptyState.vue
	var MdEmptyState = __webpack_require__(239);
	var MdEmptyState_default = /*#__PURE__*/__webpack_require__.n(MdEmptyState);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-d8a893a2","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdEmptyState/MdEmptyState.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c("transition", { attrs: { name: "md-empty-state", appear: "" } }, [
	    _c(
	      "div",
	      {
	        staticClass: "md-empty-state",
	        class: [_vm.emptyStateClasses, _vm.$mdActiveTheme],
	        style: _vm.emptyStateStyles
	      },
	      [
	        _c(
	          "div",
	          { staticClass: "md-empty-state-container" },
	          [
	            _vm.mdIcon
	              ? [
	                  _vm.isAssetIcon(_vm.mdIcon)
	                    ? _c("md-icon", {
	                        staticClass: "md-empty-state-icon",
	                        attrs: { "md-src": _vm.mdIcon }
	                      })
	                    : _c("md-icon", { staticClass: "md-empty-state-icon" }, [
	                        _vm._v(_vm._s(_vm.mdIcon))
	                      ])
	                ]
	              : _vm._e(),
	            _vm._v(" "),
	            _vm.mdLabel
	              ? _c("strong", { staticClass: "md-empty-state-label" }, [
	                  _vm._v(_vm._s(_vm.mdLabel))
	                ])
	              : _vm._e(),
	            _vm._v(" "),
	            _vm.mdDescription
	              ? _c("p", { staticClass: "md-empty-state-description" }, [
	                  _vm._v(_vm._s(_vm.mdDescription))
	                ])
	              : _vm._e(),
	            _vm._v(" "),
	            _vm._t("default")
	          ],
	          2
	        )
	      ]
	    )
	  ])
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdEmptyState_MdEmptyState = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-d8a893a2", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdEmptyState/MdEmptyState.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(238)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdEmptyState_default.a,
	  MdEmptyState_MdEmptyState,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdEmptyState/MdEmptyState.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-d8a893a2", Component.options)
	  } else {
	    hotAPI.reload("data-v-d8a893a2", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdEmptyState_MdEmptyState = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 42 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  mdRounded: Boolean,
	  mdSize: {
	    type: Number,
	    default: 420
	  },
	  mdIcon: String,
	  mdLabel: String,
	  mdDescription: String
	};

	/***/ }),
	/* 43 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdIcon2.default.name, _MdIcon2.default);
	};

	/***/ }),
	/* 44 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdMenu/MdMenu.vue
	var MdMenu = __webpack_require__(248);
	var MdMenu_default = /*#__PURE__*/__webpack_require__.n(MdMenu);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-577c0662","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdMenu/MdMenu.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    _vm._g({ staticClass: "md-menu" }, _vm.$listeners),
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdMenu_MdMenu = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-577c0662", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdMenu/MdMenu.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(247)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdMenu_default.a,
	  MdMenu_MdMenu,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdMenu/MdMenu.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-577c0662", Component.options)
	  } else {
	    hotAPI.reload("data-v-577c0662", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdMenu_MdMenu = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 45 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdMenu/MdMenuContent.vue
	var MdMenuContent = __webpack_require__(250);
	var MdMenuContent_default = /*#__PURE__*/__webpack_require__.n(MdMenuContent);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-2c16774c","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdMenu/MdMenuContent.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-popover",
	    {
	      attrs: {
	        "md-settings": _vm.popperSettings,
	        "md-active": _vm.shouldRender
	      }
	    },
	    [
	      _vm.shouldRender
	        ? _c(
	            "transition",
	            { attrs: { name: "md-menu-content", css: _vm.didMount } },
	            [
	              _c(
	                "div",
	                {
	                  class: [
	                    _vm.menuClasses,
	                    _vm.mdContentClass,
	                    _vm.$mdActiveTheme
	                  ],
	                  style: _vm.menuStyles,
	                  on: {
	                    keydown: [
	                      function($event) {
	                        if (
	                          !("button" in $event) &&
	                          _vm._k(
	                            $event.keyCode,
	                            "arrow-down",
	                            undefined,
	                            $event.key
	                          )
	                        ) {
	                          return null
	                        }
	                        $event.preventDefault()
	                        _vm.setHighlight("down")
	                      },
	                      function($event) {
	                        if (
	                          !("button" in $event) &&
	                          _vm._k(
	                            $event.keyCode,
	                            "arrow-up",
	                            undefined,
	                            $event.key
	                          )
	                        ) {
	                          return null
	                        }
	                        $event.preventDefault()
	                        _vm.setHighlight("up")
	                      },
	                      function($event) {
	                        if (
	                          !("button" in $event) &&
	                          _vm._k($event.keyCode, "space", 32, $event.key)
	                        ) {
	                          return null
	                        }
	                        $event.preventDefault()
	                        _vm.setSelection($event)
	                      },
	                      function($event) {
	                        if (
	                          !("button" in $event) &&
	                          _vm._k($event.keyCode, "enter", 13, $event.key)
	                        ) {
	                          return null
	                        }
	                        $event.preventDefault()
	                        _vm.setSelection($event)
	                      }
	                    ]
	                  }
	                },
	                [
	                  _c(
	                    "div",
	                    {
	                      staticClass: "md-menu-content-container md-scrollbar",
	                      class: _vm.$mdActiveTheme
	                    },
	                    [
	                      _c(
	                        "md-list",
	                        _vm._b(
	                          {
	                            class: _vm.listClasses,
	                            on: {
	                              keydown: function($event) {
	                                if (
	                                  !("button" in $event) &&
	                                  _vm._k($event.keyCode, "esc", 27, $event.key)
	                                ) {
	                                  return null
	                                }
	                                _vm.onEsc($event)
	                              }
	                            }
	                          },
	                          "md-list",
	                          _vm.$attrs,
	                          false
	                        ),
	                        [_vm._t("default")],
	                        2
	                      )
	                    ],
	                    1
	                  )
	                ]
	              )
	            ]
	          )
	        : _vm._e()
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdMenu_MdMenuContent = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-2c16774c", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdMenu/MdMenuContent.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(249)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdMenuContent_default.a,
	  MdMenu_MdMenuContent,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdMenu/MdMenuContent.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-2c16774c", Component.options)
	  } else {
	    hotAPI.reload("data-v-2c16774c", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdMenu_MdMenuContent = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 46 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (el, eventName, observerFn, options) {
	  function killObserver() {
	    el.removeEventListener(eventName, observerFn);
	  }

	  el.addEventListener(eventName, observerFn, options || false);

	  return {
	    destroy: killObserver
	  };
	};

	/***/ }),
	/* 47 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdList/MdList.vue
	var MdList = __webpack_require__(253);
	var MdList_default = /*#__PURE__*/__webpack_require__.n(MdList);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-16ed17ef","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdList/MdList.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "ul",
	    _vm._g(
	      _vm._b(
	        { staticClass: "md-list", class: [_vm.$mdActiveTheme] },
	        "ul",
	        _vm.$attrs,
	        false
	      ),
	      _vm.$listeners
	    ),
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdList_MdList = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-16ed17ef", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdList/MdList.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(252)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdList_default.a,
	  MdList_MdList,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdList/MdList.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-16ed17ef", Component.options)
	  } else {
	    hotAPI.reload("data-v-16ed17ef", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdList_MdList = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 48 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdListItem_vue__ = __webpack_require__(279);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdListItem_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdListItem_vue__);
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(278)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */
	var __vue_template__ = null
	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdListItem_vue___default.a,
	  __vue_template__,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdList/MdListItem/MdListItem.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-cff46336", Component.options)
	  } else {
	    hotAPI.reload("data-v-cff46336", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 49 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = ['click', 'dblclick', 'mousedown', 'mouseup'];

	/***/ }),
	/* 50 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdSteppers/MdStepHeader.vue
	var MdStepHeader = __webpack_require__(332);
	var MdStepHeader_default = /*#__PURE__*/__webpack_require__.n(MdStepHeader);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-43e95866","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdSteppers/MdStepHeader.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-button",
	    _vm._g(
	      _vm._b(
	        {
	          staticClass: "md-stepper-header",
	          class: _vm.classes,
	          attrs: { disabled: _vm.shouldDisable },
	          nativeOn: {
	            click: function($event) {
	              _vm.MdSteppers.setActiveStep(_vm.index)
	            }
	          }
	        },
	        "md-button",
	        _vm.data.props,
	        false
	      ),
	      _vm.data.events
	    ),
	    [
	      _vm.data.error
	        ? _c("md-warning-icon", { staticClass: "md-stepper-icon" })
	        : _c(
	            "div",
	            { staticClass: "md-stepper-number" },
	            [
	              _vm.data.done && _vm.data.editable
	                ? _c("md-edit-icon", { staticClass: "md-stepper-editable" })
	                : _vm.data.done
	                  ? _c("md-check-icon", { staticClass: "md-stepper-done" })
	                  : [_vm._v(_vm._s(_vm.MdSteppers.getStepperNumber(_vm.index)))]
	            ],
	            2
	          ),
	      _vm._v(" "),
	      _c("div", { staticClass: "md-stepper-text" }, [
	        _c("span", { staticClass: "md-stepper-label" }, [
	          _vm._v(_vm._s(_vm.data.label))
	        ]),
	        _vm._v(" "),
	        _vm.data.error
	          ? _c("span", { staticClass: "md-stepper-error" }, [
	              _vm._v(_vm._s(_vm.data.error))
	            ])
	          : _vm.data.description
	            ? _c("span", { staticClass: "md-stepper-description" }, [
	                _vm._v(_vm._s(_vm.data.description))
	              ])
	            : _vm._e()
	      ])
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSteppers_MdStepHeader = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-43e95866", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdSteppers/MdStepHeader.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdStepHeader_default.a,
	  MdSteppers_MdStepHeader,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdSteppers/MdStepHeader.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-43e95866", Component.options)
	  } else {
	    hotAPI.reload("data-v-43e95866", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdSteppers_MdStepHeader = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 51 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTable/MdTableRow.vue
	var MdTableRow = __webpack_require__(369);
	var MdTableRow_default = /*#__PURE__*/__webpack_require__.n(MdTableRow);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-00a4496a","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTable/MdTableRow.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "tr",
	    {
	      staticClass: "md-table-row",
	      class: _vm.rowClasses,
	      on: { click: _vm.onClick }
	    },
	    [
	      _vm.selectableCount
	        ? _c("md-table-cell-selection", {
	            attrs: {
	              "md-disabled": _vm.mdDisabled,
	              "md-selectable": _vm.mdSelectable === "multiple",
	              "md-row-id": _vm.mdIndex
	            },
	            model: {
	              value: _vm.isSelected,
	              callback: function($$v) {
	                _vm.isSelected = $$v
	              },
	              expression: "isSelected"
	            }
	          })
	        : _vm._e(),
	      _vm._v(" "),
	      _vm._t("default")
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTable_MdTableRow = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-00a4496a", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTable/MdTableRow.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(368)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTableRow_default.a,
	  MdTable_MdTableRow,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTable/MdTableRow.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-00a4496a", Component.options)
	  } else {
	    hotAPI.reload("data-v-00a4496a", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTable_MdTableRow = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 52 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTable/MdTableCellSelection.vue
	var MdTableCellSelection = __webpack_require__(371);
	var MdTableCellSelection_default = /*#__PURE__*/__webpack_require__.n(MdTableCellSelection);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-50a4b70a","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTable/MdTableCellSelection.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm.mdSelectable
	    ? _c("td", { staticClass: "md-table-cell md-table-cell-selection" }, [
	        _c(
	          "div",
	          { staticClass: "md-table-cell-container" },
	          [
	            _c("md-checkbox", {
	              attrs: { disabled: !_vm.mdSelectable || _vm.mdDisabled },
	              on: { change: _vm.onChange },
	              model: {
	                value: _vm.isSelected,
	                callback: function($$v) {
	                  _vm.isSelected = $$v
	                },
	                expression: "isSelected"
	              }
	            })
	          ],
	          1
	        )
	      ])
	    : _vm._e()
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTable_MdTableCellSelection = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-50a4b70a", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTable/MdTableCellSelection.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(370)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTableCellSelection_default.a,
	  MdTable_MdTableCellSelection,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTable/MdTableCellSelection.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-50a4b70a", Component.options)
	  } else {
	    hotAPI.reload("data-v-50a4b70a", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTable_MdTableCellSelection = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 53 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdToolbar/MdToolbar.vue
	var MdToolbar = __webpack_require__(378);
	var MdToolbar_default = /*#__PURE__*/__webpack_require__.n(MdToolbar);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-38a0b4d9","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdToolbar/MdToolbar.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    {
	      staticClass: "md-toolbar",
	      class: [_vm.$mdActiveTheme, "md-elevation-" + _vm.mdElevation]
	    },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdToolbar_MdToolbar = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-38a0b4d9", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdToolbar/MdToolbar.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(377)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdToolbar_default.a,
	  MdToolbar_MdToolbar,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdToolbar/MdToolbar.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-38a0b4d9", Component.options)
	  } else {
	    hotAPI.reload("data-v-38a0b4d9", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdToolbar_MdToolbar = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 54 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	__webpack_require__(55);

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _components = __webpack_require__(57);

	var MdComponents = _interopRequireWildcard(_components);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var VueMaterial = function VueMaterial(Vue) {
	  (0, _material2.default)(Vue);

	  Object.values(MdComponents).forEach(function (MdComponent) {
	    Vue.use(MdComponent);
	  });
	};

	VueMaterial.version = '__VERSION__';

	exports.default = VueMaterial;

	/***/ }),
	/* 55 */
	/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * Copyright (c) 2014, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
	 * additional grant of patent rights can be found in the PATENTS file in
	 * the same directory.
	 */

	!(function(global) {
	  "use strict";

	  var Op = Object.prototype;
	  var hasOwn = Op.hasOwnProperty;
	  var undefined; // More compressible than void 0.
	  var $Symbol = typeof Symbol === "function" ? Symbol : {};
	  var iteratorSymbol = $Symbol.iterator || "@@iterator";
	  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
	  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

	  var inModule = typeof module === "object";
	  var runtime = global.regeneratorRuntime;
	  if (runtime) {
	    if (inModule) {
	      // If regeneratorRuntime is defined globally and we're in a module,
	      // make the exports object identical to regeneratorRuntime.
	      module.exports = runtime;
	    }
	    // Don't bother evaluating the rest of this file if the runtime was
	    // already defined globally.
	    return;
	  }

	  // Define the runtime globally (as expected by generated code) as either
	  // module.exports (if we're in a module) or a new, empty object.
	  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

	  function wrap(innerFn, outerFn, self, tryLocsList) {
	    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
	    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
	    var generator = Object.create(protoGenerator.prototype);
	    var context = new Context(tryLocsList || []);

	    // The ._invoke method unifies the implementations of the .next,
	    // .throw, and .return methods.
	    generator._invoke = makeInvokeMethod(innerFn, self, context);

	    return generator;
	  }
	  runtime.wrap = wrap;

	  // Try/catch helper to minimize deoptimizations. Returns a completion
	  // record like context.tryEntries[i].completion. This interface could
	  // have been (and was previously) designed to take a closure to be
	  // invoked without arguments, but in all the cases we care about we
	  // already have an existing method we want to call, so there's no need
	  // to create a new function object. We can even get away with assuming
	  // the method takes exactly one argument, since that happens to be true
	  // in every case, so we don't have to touch the arguments object. The
	  // only additional allocation required is the completion record, which
	  // has a stable shape and so hopefully should be cheap to allocate.
	  function tryCatch(fn, obj, arg) {
	    try {
	      return { type: "normal", arg: fn.call(obj, arg) };
	    } catch (err) {
	      return { type: "throw", arg: err };
	    }
	  }

	  var GenStateSuspendedStart = "suspendedStart";
	  var GenStateSuspendedYield = "suspendedYield";
	  var GenStateExecuting = "executing";
	  var GenStateCompleted = "completed";

	  // Returning this object from the innerFn has the same effect as
	  // breaking out of the dispatch switch statement.
	  var ContinueSentinel = {};

	  // Dummy constructor functions that we use as the .constructor and
	  // .constructor.prototype properties for functions that return Generator
	  // objects. For full spec compliance, you may wish to configure your
	  // minifier not to mangle the names of these two functions.
	  function Generator() {}
	  function GeneratorFunction() {}
	  function GeneratorFunctionPrototype() {}

	  // This is a polyfill for %IteratorPrototype% for environments that
	  // don't natively support it.
	  var IteratorPrototype = {};
	  IteratorPrototype[iteratorSymbol] = function () {
	    return this;
	  };

	  var getProto = Object.getPrototypeOf;
	  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
	  if (NativeIteratorPrototype &&
	      NativeIteratorPrototype !== Op &&
	      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
	    // This environment has a native %IteratorPrototype%; use it instead
	    // of the polyfill.
	    IteratorPrototype = NativeIteratorPrototype;
	  }

	  var Gp = GeneratorFunctionPrototype.prototype =
	    Generator.prototype = Object.create(IteratorPrototype);
	  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	  GeneratorFunctionPrototype.constructor = GeneratorFunction;
	  GeneratorFunctionPrototype[toStringTagSymbol] =
	    GeneratorFunction.displayName = "GeneratorFunction";

	  // Helper for defining the .next, .throw, and .return methods of the
	  // Iterator interface in terms of a single ._invoke method.
	  function defineIteratorMethods(prototype) {
	    ["next", "throw", "return"].forEach(function(method) {
	      prototype[method] = function(arg) {
	        return this._invoke(method, arg);
	      };
	    });
	  }

	  runtime.isGeneratorFunction = function(genFun) {
	    var ctor = typeof genFun === "function" && genFun.constructor;
	    return ctor
	      ? ctor === GeneratorFunction ||
	        // For the native GeneratorFunction constructor, the best we can
	        // do is to check its .name property.
	        (ctor.displayName || ctor.name) === "GeneratorFunction"
	      : false;
	  };

	  runtime.mark = function(genFun) {
	    if (Object.setPrototypeOf) {
	      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	    } else {
	      genFun.__proto__ = GeneratorFunctionPrototype;
	      if (!(toStringTagSymbol in genFun)) {
	        genFun[toStringTagSymbol] = "GeneratorFunction";
	      }
	    }
	    genFun.prototype = Object.create(Gp);
	    return genFun;
	  };

	  // Within the body of any async function, `await x` is transformed to
	  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	  // `hasOwn.call(value, "__await")` to determine if the yielded value is
	  // meant to be awaited.
	  runtime.awrap = function(arg) {
	    return { __await: arg };
	  };

	  function AsyncIterator(generator) {
	    function invoke(method, arg, resolve, reject) {
	      var record = tryCatch(generator[method], generator, arg);
	      if (record.type === "throw") {
	        reject(record.arg);
	      } else {
	        var result = record.arg;
	        var value = result.value;
	        if (value &&
	            typeof value === "object" &&
	            hasOwn.call(value, "__await")) {
	          return Promise.resolve(value.__await).then(function(value) {
	            invoke("next", value, resolve, reject);
	          }, function(err) {
	            invoke("throw", err, resolve, reject);
	          });
	        }

	        return Promise.resolve(value).then(function(unwrapped) {
	          // When a yielded Promise is resolved, its final value becomes
	          // the .value of the Promise<{value,done}> result for the
	          // current iteration. If the Promise is rejected, however, the
	          // result for this iteration will be rejected with the same
	          // reason. Note that rejections of yielded Promises are not
	          // thrown back into the generator function, as is the case
	          // when an awaited Promise is rejected. This difference in
	          // behavior between yield and await is important, because it
	          // allows the consumer to decide what to do with the yielded
	          // rejection (swallow it and continue, manually .throw it back
	          // into the generator, abandon iteration, whatever). With
	          // await, by contrast, there is no opportunity to examine the
	          // rejection reason outside the generator function, so the
	          // only option is to throw it from the await expression, and
	          // let the generator function handle the exception.
	          result.value = unwrapped;
	          resolve(result);
	        }, reject);
	      }
	    }

	    if (typeof global.process === "object" && global.process.domain) {
	      invoke = global.process.domain.bind(invoke);
	    }

	    var previousPromise;

	    function enqueue(method, arg) {
	      function callInvokeWithMethodAndArg() {
	        return new Promise(function(resolve, reject) {
	          invoke(method, arg, resolve, reject);
	        });
	      }

	      return previousPromise =
	        // If enqueue has been called before, then we want to wait until
	        // all previous Promises have been resolved before calling invoke,
	        // so that results are always delivered in the correct order. If
	        // enqueue has not been called before, then it is important to
	        // call invoke immediately, without waiting on a callback to fire,
	        // so that the async generator function has the opportunity to do
	        // any necessary setup in a predictable way. This predictability
	        // is why the Promise constructor synchronously invokes its
	        // executor callback, and why async functions synchronously
	        // execute code before the first await. Since we implement simple
	        // async functions in terms of async generators, it is especially
	        // important to get this right, even though it requires care.
	        previousPromise ? previousPromise.then(
	          callInvokeWithMethodAndArg,
	          // Avoid propagating failures to Promises returned by later
	          // invocations of the iterator.
	          callInvokeWithMethodAndArg
	        ) : callInvokeWithMethodAndArg();
	    }

	    // Define the unified helper method that is used to implement .next,
	    // .throw, and .return (see defineIteratorMethods).
	    this._invoke = enqueue;
	  }

	  defineIteratorMethods(AsyncIterator.prototype);
	  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
	    return this;
	  };
	  runtime.AsyncIterator = AsyncIterator;

	  // Note that simple async functions are implemented on top of
	  // AsyncIterator objects; they just return a Promise for the value of
	  // the final result produced by the iterator.
	  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
	    var iter = new AsyncIterator(
	      wrap(innerFn, outerFn, self, tryLocsList)
	    );

	    return runtime.isGeneratorFunction(outerFn)
	      ? iter // If outerFn is a generator, return the full iterator.
	      : iter.next().then(function(result) {
	          return result.done ? result.value : iter.next();
	        });
	  };

	  function makeInvokeMethod(innerFn, self, context) {
	    var state = GenStateSuspendedStart;

	    return function invoke(method, arg) {
	      if (state === GenStateExecuting) {
	        throw new Error("Generator is already running");
	      }

	      if (state === GenStateCompleted) {
	        if (method === "throw") {
	          throw arg;
	        }

	        // Be forgiving, per 25.3.3.3.3 of the spec:
	        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	        return doneResult();
	      }

	      context.method = method;
	      context.arg = arg;

	      while (true) {
	        var delegate = context.delegate;
	        if (delegate) {
	          var delegateResult = maybeInvokeDelegate(delegate, context);
	          if (delegateResult) {
	            if (delegateResult === ContinueSentinel) continue;
	            return delegateResult;
	          }
	        }

	        if (context.method === "next") {
	          // Setting context._sent for legacy support of Babel's
	          // function.sent implementation.
	          context.sent = context._sent = context.arg;

	        } else if (context.method === "throw") {
	          if (state === GenStateSuspendedStart) {
	            state = GenStateCompleted;
	            throw context.arg;
	          }

	          context.dispatchException(context.arg);

	        } else if (context.method === "return") {
	          context.abrupt("return", context.arg);
	        }

	        state = GenStateExecuting;

	        var record = tryCatch(innerFn, self, context);
	        if (record.type === "normal") {
	          // If an exception is thrown from innerFn, we leave state ===
	          // GenStateExecuting and loop back for another invocation.
	          state = context.done
	            ? GenStateCompleted
	            : GenStateSuspendedYield;

	          if (record.arg === ContinueSentinel) {
	            continue;
	          }

	          return {
	            value: record.arg,
	            done: context.done
	          };

	        } else if (record.type === "throw") {
	          state = GenStateCompleted;
	          // Dispatch the exception by looping back around to the
	          // context.dispatchException(context.arg) call above.
	          context.method = "throw";
	          context.arg = record.arg;
	        }
	      }
	    };
	  }

	  // Call delegate.iterator[context.method](context.arg) and handle the
	  // result, either by returning a { value, done } result from the
	  // delegate iterator, or by modifying context.method and context.arg,
	  // setting context.delegate to null, and returning the ContinueSentinel.
	  function maybeInvokeDelegate(delegate, context) {
	    var method = delegate.iterator[context.method];
	    if (method === undefined) {
	      // A .throw or .return when the delegate iterator has no .throw
	      // method always terminates the yield* loop.
	      context.delegate = null;

	      if (context.method === "throw") {
	        if (delegate.iterator.return) {
	          // If the delegate iterator has a return method, give it a
	          // chance to clean up.
	          context.method = "return";
	          context.arg = undefined;
	          maybeInvokeDelegate(delegate, context);

	          if (context.method === "throw") {
	            // If maybeInvokeDelegate(context) changed context.method from
	            // "return" to "throw", let that override the TypeError below.
	            return ContinueSentinel;
	          }
	        }

	        context.method = "throw";
	        context.arg = new TypeError(
	          "The iterator does not provide a 'throw' method");
	      }

	      return ContinueSentinel;
	    }

	    var record = tryCatch(method, delegate.iterator, context.arg);

	    if (record.type === "throw") {
	      context.method = "throw";
	      context.arg = record.arg;
	      context.delegate = null;
	      return ContinueSentinel;
	    }

	    var info = record.arg;

	    if (! info) {
	      context.method = "throw";
	      context.arg = new TypeError("iterator result is not an object");
	      context.delegate = null;
	      return ContinueSentinel;
	    }

	    if (info.done) {
	      // Assign the result of the finished delegate to the temporary
	      // variable specified by delegate.resultName (see delegateYield).
	      context[delegate.resultName] = info.value;

	      // Resume execution at the desired location (see delegateYield).
	      context.next = delegate.nextLoc;

	      // If context.method was "throw" but the delegate handled the
	      // exception, let the outer generator proceed normally. If
	      // context.method was "next", forget context.arg since it has been
	      // "consumed" by the delegate iterator. If context.method was
	      // "return", allow the original .return call to continue in the
	      // outer generator.
	      if (context.method !== "return") {
	        context.method = "next";
	        context.arg = undefined;
	      }

	    } else {
	      // Re-yield the result returned by the delegate method.
	      return info;
	    }

	    // The delegate iterator is finished, so forget it and continue with
	    // the outer generator.
	    context.delegate = null;
	    return ContinueSentinel;
	  }

	  // Define Generator.prototype.{next,throw,return} in terms of the
	  // unified ._invoke helper method.
	  defineIteratorMethods(Gp);

	  Gp[toStringTagSymbol] = "Generator";

	  // A Generator should always return itself as the iterator object when the
	  // @@iterator function is called on it. Some browsers' implementations of the
	  // iterator prototype chain incorrectly implement this, causing the Generator
	  // object to not be returned from this call. This ensures that doesn't happen.
	  // See https://github.com/facebook/regenerator/issues/274 for more details.
	  Gp[iteratorSymbol] = function() {
	    return this;
	  };

	  Gp.toString = function() {
	    return "[object Generator]";
	  };

	  function pushTryEntry(locs) {
	    var entry = { tryLoc: locs[0] };

	    if (1 in locs) {
	      entry.catchLoc = locs[1];
	    }

	    if (2 in locs) {
	      entry.finallyLoc = locs[2];
	      entry.afterLoc = locs[3];
	    }

	    this.tryEntries.push(entry);
	  }

	  function resetTryEntry(entry) {
	    var record = entry.completion || {};
	    record.type = "normal";
	    delete record.arg;
	    entry.completion = record;
	  }

	  function Context(tryLocsList) {
	    // The root entry object (effectively a try statement without a catch
	    // or a finally block) gives us a place to store values thrown from
	    // locations where there is no enclosing try statement.
	    this.tryEntries = [{ tryLoc: "root" }];
	    tryLocsList.forEach(pushTryEntry, this);
	    this.reset(true);
	  }

	  runtime.keys = function(object) {
	    var keys = [];
	    for (var key in object) {
	      keys.push(key);
	    }
	    keys.reverse();

	    // Rather than returning an object with a next method, we keep
	    // things simple and return the next function itself.
	    return function next() {
	      while (keys.length) {
	        var key = keys.pop();
	        if (key in object) {
	          next.value = key;
	          next.done = false;
	          return next;
	        }
	      }

	      // To avoid creating an additional object, we just hang the .value
	      // and .done properties off the next function object itself. This
	      // also ensures that the minifier will not anonymize the function.
	      next.done = true;
	      return next;
	    };
	  };

	  function values(iterable) {
	    if (iterable) {
	      var iteratorMethod = iterable[iteratorSymbol];
	      if (iteratorMethod) {
	        return iteratorMethod.call(iterable);
	      }

	      if (typeof iterable.next === "function") {
	        return iterable;
	      }

	      if (!isNaN(iterable.length)) {
	        var i = -1, next = function next() {
	          while (++i < iterable.length) {
	            if (hasOwn.call(iterable, i)) {
	              next.value = iterable[i];
	              next.done = false;
	              return next;
	            }
	          }

	          next.value = undefined;
	          next.done = true;

	          return next;
	        };

	        return next.next = next;
	      }
	    }

	    // Return an iterator with no values.
	    return { next: doneResult };
	  }
	  runtime.values = values;

	  function doneResult() {
	    return { value: undefined, done: true };
	  }

	  Context.prototype = {
	    constructor: Context,

	    reset: function(skipTempReset) {
	      this.prev = 0;
	      this.next = 0;
	      // Resetting context._sent for legacy support of Babel's
	      // function.sent implementation.
	      this.sent = this._sent = undefined;
	      this.done = false;
	      this.delegate = null;

	      this.method = "next";
	      this.arg = undefined;

	      this.tryEntries.forEach(resetTryEntry);

	      if (!skipTempReset) {
	        for (var name in this) {
	          // Not sure about the optimal order of these conditions:
	          if (name.charAt(0) === "t" &&
	              hasOwn.call(this, name) &&
	              !isNaN(+name.slice(1))) {
	            this[name] = undefined;
	          }
	        }
	      }
	    },

	    stop: function() {
	      this.done = true;

	      var rootEntry = this.tryEntries[0];
	      var rootRecord = rootEntry.completion;
	      if (rootRecord.type === "throw") {
	        throw rootRecord.arg;
	      }

	      return this.rval;
	    },

	    dispatchException: function(exception) {
	      if (this.done) {
	        throw exception;
	      }

	      var context = this;
	      function handle(loc, caught) {
	        record.type = "throw";
	        record.arg = exception;
	        context.next = loc;

	        if (caught) {
	          // If the dispatched exception was caught by a catch block,
	          // then let that catch block handle the exception normally.
	          context.method = "next";
	          context.arg = undefined;
	        }

	        return !! caught;
	      }

	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        var record = entry.completion;

	        if (entry.tryLoc === "root") {
	          // Exception thrown outside of any try block that could handle
	          // it, so set the completion value of the entire function to
	          // throw the exception.
	          return handle("end");
	        }

	        if (entry.tryLoc <= this.prev) {
	          var hasCatch = hasOwn.call(entry, "catchLoc");
	          var hasFinally = hasOwn.call(entry, "finallyLoc");

	          if (hasCatch && hasFinally) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            } else if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }

	          } else if (hasCatch) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            }

	          } else if (hasFinally) {
	            if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }

	          } else {
	            throw new Error("try statement without catch or finally");
	          }
	        }
	      }
	    },

	    abrupt: function(type, arg) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc <= this.prev &&
	            hasOwn.call(entry, "finallyLoc") &&
	            this.prev < entry.finallyLoc) {
	          var finallyEntry = entry;
	          break;
	        }
	      }

	      if (finallyEntry &&
	          (type === "break" ||
	           type === "continue") &&
	          finallyEntry.tryLoc <= arg &&
	          arg <= finallyEntry.finallyLoc) {
	        // Ignore the finally entry if control is not jumping to a
	        // location outside the try/catch block.
	        finallyEntry = null;
	      }

	      var record = finallyEntry ? finallyEntry.completion : {};
	      record.type = type;
	      record.arg = arg;

	      if (finallyEntry) {
	        this.method = "next";
	        this.next = finallyEntry.finallyLoc;
	        return ContinueSentinel;
	      }

	      return this.complete(record);
	    },

	    complete: function(record, afterLoc) {
	      if (record.type === "throw") {
	        throw record.arg;
	      }

	      if (record.type === "break" ||
	          record.type === "continue") {
	        this.next = record.arg;
	      } else if (record.type === "return") {
	        this.rval = this.arg = record.arg;
	        this.method = "return";
	        this.next = "end";
	      } else if (record.type === "normal" && afterLoc) {
	        this.next = afterLoc;
	      }

	      return ContinueSentinel;
	    },

	    finish: function(finallyLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.finallyLoc === finallyLoc) {
	          this.complete(entry.completion, entry.afterLoc);
	          resetTryEntry(entry);
	          return ContinueSentinel;
	        }
	      }
	    },

	    "catch": function(tryLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc === tryLoc) {
	          var record = entry.completion;
	          if (record.type === "throw") {
	            var thrown = record.arg;
	            resetTryEntry(entry);
	          }
	          return thrown;
	        }
	      }

	      // The context.catch method must only be called with a location
	      // argument that corresponds to a known catch block.
	      throw new Error("illegal catch attempt");
	    },

	    delegateYield: function(iterable, resultName, nextLoc) {
	      this.delegate = {
	        iterator: values(iterable),
	        resultName: resultName,
	        nextLoc: nextLoc
	      };

	      if (this.method === "next") {
	        // Deliberately forget the last sent value so that we don't
	        // accidentally pass it on to the delegate.
	        this.arg = undefined;
	      }

	      return ContinueSentinel;
	    }
	  };
	})(
	  // Among the various tricks for obtaining a reference to the global
	  // object, this seems to be the most reliable technique that does not
	  // use indirect eval (which violates Content Security Policy).
	  typeof global === "object" ? global :
	  typeof window === "object" ? window :
	  typeof self === "object" ? self : this
	);

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))

	/***/ }),
	/* 56 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 57 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.MdTooltip = exports.MdToolbar = exports.MdTabs = exports.MdTable = exports.MdSwitch = exports.MdSubheader = exports.MdSteppers = exports.MdSpeedDial = exports.MdSnackbar = exports.MdRipple = exports.MdRadio = exports.MdProgress = exports.MdMenu = exports.MdList = exports.MdLayout = exports.MdImage = exports.MdIcon = exports.MdHighlightText = exports.MdField = exports.MdEmptyState = exports.MdElevation = exports.MdDrawer = exports.MdDivider = exports.MdDialogPrompt = exports.MdDialogConfirm = exports.MdDialogAlert = exports.MdDialog = exports.MdDatepicker = exports.MdContent = exports.MdChips = exports.MdCheckbox = exports.MdCard = exports.MdButton = exports.MdBottomBar = exports.MdAvatar = exports.MdAutocomplete = exports.MdApp = undefined;

	var _MdApp = __webpack_require__(58);

	var _MdApp2 = _interopRequireDefault(_MdApp);

	var _MdAutocomplete = __webpack_require__(78);

	var _MdAutocomplete2 = _interopRequireDefault(_MdAutocomplete);

	var _MdAvatar = __webpack_require__(84);

	var _MdAvatar2 = _interopRequireDefault(_MdAvatar);

	var _MdBottomBar = __webpack_require__(88);

	var _MdBottomBar2 = _interopRequireDefault(_MdBottomBar);

	var _MdButton = __webpack_require__(96);

	var _MdButton2 = _interopRequireDefault(_MdButton);

	var _MdCard = __webpack_require__(102);

	var _MdCard2 = _interopRequireDefault(_MdCard);

	var _MdCheckbox = __webpack_require__(138);

	var _MdCheckbox2 = _interopRequireDefault(_MdCheckbox);

	var _MdChips = __webpack_require__(142);

	var _MdChips2 = _interopRequireDefault(_MdChips);

	var _MdContent = __webpack_require__(162);

	var _MdContent2 = _interopRequireDefault(_MdContent);

	var _MdDatepicker = __webpack_require__(164);

	var _MdDatepicker2 = _interopRequireDefault(_MdDatepicker);

	var _MdDialog = __webpack_require__(208);

	var _MdDialog2 = _interopRequireDefault(_MdDialog);

	var _MdDialogAlert = __webpack_require__(218);

	var _MdDialogAlert2 = _interopRequireDefault(_MdDialogAlert);

	var _MdDialogConfirm = __webpack_require__(221);

	var _MdDialogConfirm2 = _interopRequireDefault(_MdDialogConfirm);

	var _MdDialogPrompt = __webpack_require__(224);

	var _MdDialogPrompt2 = _interopRequireDefault(_MdDialogPrompt);

	var _MdDivider = __webpack_require__(227);

	var _MdDivider2 = _interopRequireDefault(_MdDivider);

	var _MdDrawer = __webpack_require__(231);

	var _MdDrawer2 = _interopRequireDefault(_MdDrawer);

	var _MdElevation = __webpack_require__(235);

	var _MdElevation2 = _interopRequireDefault(_MdElevation);

	var _MdEmptyState = __webpack_require__(237);

	var _MdEmptyState2 = _interopRequireDefault(_MdEmptyState);

	var _MdField = __webpack_require__(240);

	var _MdField2 = _interopRequireDefault(_MdField);

	var _MdHighlightText = __webpack_require__(267);

	var _MdHighlightText2 = _interopRequireDefault(_MdHighlightText);

	var _MdIcon = __webpack_require__(43);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	var _MdImage = __webpack_require__(271);

	var _MdImage2 = _interopRequireDefault(_MdImage);

	var _MdLayout = __webpack_require__(275);

	var _MdLayout2 = _interopRequireDefault(_MdLayout);

	var _MdList = __webpack_require__(277);

	var _MdList2 = _interopRequireDefault(_MdList);

	var _MdMenu = __webpack_require__(295);

	var _MdMenu2 = _interopRequireDefault(_MdMenu);

	var _MdProgress = __webpack_require__(298);

	var _MdProgress2 = _interopRequireDefault(_MdProgress);

	var _MdRadio = __webpack_require__(306);

	var _MdRadio2 = _interopRequireDefault(_MdRadio);

	var _MdRipple = __webpack_require__(310);

	var _MdRipple2 = _interopRequireDefault(_MdRipple);

	var _MdSnackbar = __webpack_require__(311);

	var _MdSnackbar2 = _interopRequireDefault(_MdSnackbar);

	var _MdSpeedDial = __webpack_require__(318);

	var _MdSpeedDial2 = _interopRequireDefault(_MdSpeedDial);

	var _MdSteppers = __webpack_require__(328);

	var _MdSteppers2 = _interopRequireDefault(_MdSteppers);

	var _MdSubheader = __webpack_require__(342);

	var _MdSubheader2 = _interopRequireDefault(_MdSubheader);

	var _MdSwitch = __webpack_require__(346);

	var _MdSwitch2 = _interopRequireDefault(_MdSwitch);

	var _MdTable = __webpack_require__(350);

	var _MdTable2 = _interopRequireDefault(_MdTable);

	var _MdTabs = __webpack_require__(388);

	var _MdTabs2 = _interopRequireDefault(_MdTabs);

	var _MdToolbar = __webpack_require__(394);

	var _MdToolbar2 = _interopRequireDefault(_MdToolbar);

	var _MdTooltip = __webpack_require__(395);

	var _MdTooltip2 = _interopRequireDefault(_MdTooltip);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.MdApp = _MdApp2.default;
	exports.MdAutocomplete = _MdAutocomplete2.default;
	exports.MdAvatar = _MdAvatar2.default;
	exports.MdBottomBar = _MdBottomBar2.default;
	exports.MdButton = _MdButton2.default;
	exports.MdCard = _MdCard2.default;
	exports.MdCheckbox = _MdCheckbox2.default;
	exports.MdChips = _MdChips2.default;
	exports.MdContent = _MdContent2.default;
	exports.MdDatepicker = _MdDatepicker2.default;
	exports.MdDialog = _MdDialog2.default;
	exports.MdDialogAlert = _MdDialogAlert2.default;
	exports.MdDialogConfirm = _MdDialogConfirm2.default;
	exports.MdDialogPrompt = _MdDialogPrompt2.default;
	exports.MdDivider = _MdDivider2.default;
	exports.MdDrawer = _MdDrawer2.default;
	exports.MdElevation = _MdElevation2.default;
	exports.MdEmptyState = _MdEmptyState2.default;
	exports.MdField = _MdField2.default;
	exports.MdHighlightText = _MdHighlightText2.default;
	exports.MdIcon = _MdIcon2.default;
	exports.MdImage = _MdImage2.default;
	exports.MdLayout = _MdLayout2.default;
	exports.MdList = _MdList2.default;
	exports.MdMenu = _MdMenu2.default;
	exports.MdProgress = _MdProgress2.default;
	exports.MdRadio = _MdRadio2.default;
	exports.MdRipple = _MdRipple2.default;
	exports.MdSnackbar = _MdSnackbar2.default;
	exports.MdSpeedDial = _MdSpeedDial2.default;
	exports.MdSteppers = _MdSteppers2.default;
	exports.MdSubheader = _MdSubheader2.default;
	exports.MdSwitch = _MdSwitch2.default;
	exports.MdTable = _MdTable2.default;
	exports.MdTabs = _MdTabs2.default;
	exports.MdToolbar = _MdToolbar2.default;
	exports.MdTooltip = _MdTooltip2.default;

	/***/ }),
	/* 58 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdApp = __webpack_require__(59);

	var _MdApp2 = _interopRequireDefault(_MdApp);

	var _MdAppToolbar = __webpack_require__(70);

	var _MdAppToolbar2 = _interopRequireDefault(_MdAppToolbar);

	var _MdAppContent = __webpack_require__(73);

	var _MdAppContent2 = _interopRequireDefault(_MdAppContent);

	var _MdAppDrawer = __webpack_require__(76);

	var _MdAppDrawer2 = _interopRequireDefault(_MdAppDrawer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdApp2.default.name, _MdApp2.default);
	  Vue.component(_MdAppToolbar2.default.name, _MdAppToolbar2.default);
	  Vue.component(_MdAppContent2.default.name, _MdAppContent2.default);
	  Vue.component(_MdAppDrawer2.default.name, _MdAppDrawer2.default);
	};

	/***/ }),
	/* 59 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdApp_vue__ = __webpack_require__(61);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdApp_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdApp_vue__);
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(60)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */
	var __vue_template__ = null
	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdApp_vue___default.a,
	  __vue_template__,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdApp/MdApp.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-8b7389b6", Component.options)
	  } else {
	    hotAPI.reload("data-v-8b7389b6", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 60 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 61 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdAppSideDrawer = __webpack_require__(62);

	var _MdAppSideDrawer2 = _interopRequireDefault(_MdAppSideDrawer);

	var _MdAppInternalDrawer = __webpack_require__(67);

	var _MdAppInternalDrawer2 = _interopRequireDefault(_MdAppInternalDrawer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var componentTypes = ['md-app-toolbar', 'md-app-drawer', 'md-app-content'];

	function buildSlots(children, context, functionalContext, options) {
	  var slots = [];

	  if (children) {
	    children.forEach(function (child) {
	      var opts = child.componentOptions;

	      if (opts && componentTypes.includes(opts.tag)) {
	        child.data.slot = opts.tag;
	        child.data.provide = options.Ctor.options.provide;
	        child.context = context;
	        child.functionalContext = functionalContext;

	        slots.push(child);
	      }
	    });
	  }

	  return slots;
	}

	function getDrawers(children) {
	  var drawerVnodes = children.filter(function (child) {
	    return child.componentOptions.tag === 'md-app-drawer';
	  });

	  return drawerVnodes.length ? drawerVnodes : [];
	}

	function hasInternalDrawer(attrs) {
	  var mdPermanent = attrs && attrs['md-permanent'];

	  return mdPermanent && (mdPermanent === 'clipped' || mdPermanent === 'card');
	}

	exports.default = {
	  name: 'MdApp',
	  functional: true,
	  render: function render(createElement, _ref) {
	    var children = _ref.children,
	        props = _ref.props;

	    var appComponent = _MdAppSideDrawer2.default;

	    var _createElement = createElement(appComponent),
	        context = _createElement.context,
	        functionalContext = _createElement.functionalContext,
	        componentOptions = _createElement.componentOptions;

	    var slots = buildSlots(children, context, functionalContext, componentOptions);
	    var drawers = getDrawers(slots);

	    drawers.forEach(function (drawer) {
	      if (drawer && hasInternalDrawer(drawer.data.attrs)) {
	        appComponent = _MdAppInternalDrawer2.default;
	      }
	    });

	    return createElement(appComponent, {
	      attrs: props
	    }, slots);
	  }
	};

	/***/ }),
	/* 62 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdApp/MdAppSideDrawer.vue
	var MdAppSideDrawer = __webpack_require__(64);
	var MdAppSideDrawer_default = /*#__PURE__*/__webpack_require__.n(MdAppSideDrawer);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-2aaa67a6","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdApp/MdAppSideDrawer.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    {
	      staticClass: "md-app md-app-side-drawer md-layout-row",
	      class: [_vm.appClasses, _vm.$mdActiveTheme]
	    },
	    [
	      _vm._t("md-app-drawer"),
	      _vm._v(" "),
	      _c(
	        "main",
	        {
	          staticClass: "md-app-container md-flex md-layout-column",
	          class: [_vm.$mdActiveTheme, _vm.scrollerClasses],
	          style: _vm.contentStyles,
	          on: {
	            "&scroll": function($event) {
	              _vm.handleScroll($event)
	            }
	          }
	        },
	        [
	          _vm._t("md-app-toolbar"),
	          _vm._v(" "),
	          _c(
	            "div",
	            {
	              staticClass: "md-app-scroller md-layout-column md-flex",
	              class: [_vm.$mdActiveTheme, _vm.scrollerClasses],
	              style: _vm.containerStyles,
	              on: {
	                "&scroll": function($event) {
	                  _vm.handleScroll($event)
	                }
	              }
	            },
	            [_vm._t("md-app-content")],
	            2
	          )
	        ],
	        2
	      )
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdApp_MdAppSideDrawer = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-2aaa67a6", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdApp/MdAppSideDrawer.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(63)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdAppSideDrawer_default.a,
	  MdApp_MdAppSideDrawer,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdApp/MdAppSideDrawer.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-2aaa67a6", Component.options)
	  } else {
	    hotAPI.reload("data-v-2aaa67a6", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdApp_MdAppSideDrawer = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 63 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 64 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdAppMixin = __webpack_require__(31);

	var _MdAppMixin2 = _interopRequireDefault(_MdAppMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = new _MdComponent2.default({
	  name: 'MdAppInternalSideDrawer',
	  mixins: [_MdAppMixin2.default]
	});

	/***/ }),
	/* 65 */
	/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2
	(function() {
	  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

	  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
	    module.exports = function() {
	      return performance.now();
	    };
	  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
	    module.exports = function() {
	      return (getNanoSeconds() - nodeLoadTime) / 1e6;
	    };
	    hrtime = process.hrtime;
	    getNanoSeconds = function() {
	      var hr;
	      hr = hrtime();
	      return hr[0] * 1e9 + hr[1];
	    };
	    moduleLoadTime = getNanoSeconds();
	    upTime = process.uptime() * 1e9;
	    nodeLoadTime = moduleLoadTime - upTime;
	  } else if (Date.now) {
	    module.exports = function() {
	      return Date.now() - loadTime;
	    };
	    loadTime = Date.now();
	  } else {
	    module.exports = function() {
	      return new Date().getTime() - loadTime;
	    };
	    loadTime = new Date().getTime();
	  }

	}).call(this);

	//# sourceMappingURL=performance-now.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(66)))

	/***/ }),
	/* 66 */
	/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


	/***/ }),
	/* 67 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdApp/MdAppInternalDrawer.vue
	var MdAppInternalDrawer = __webpack_require__(69);
	var MdAppInternalDrawer_default = /*#__PURE__*/__webpack_require__.n(MdAppInternalDrawer);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-f33ea0da","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdApp/MdAppInternalDrawer.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    {
	      staticClass: "md-app md-app-internal-drawer md-layout-column",
	      class: [_vm.appClasses, _vm.$mdActiveTheme]
	    },
	    [
	      _vm._t("md-app-toolbar"),
	      _vm._v(" "),
	      _c(
	        "main",
	        {
	          staticClass: "md-app-container md-flex md-layout-row",
	          class: [_vm.$mdActiveTheme, _vm.scrollerClasses],
	          style: [_vm.containerStyles, _vm.contentStyles]
	        },
	        [
	          _vm._t("md-app-drawer"),
	          _vm._v(" "),
	          _c(
	            "div",
	            {
	              staticClass: "md-app-scroller md-layout-column md-flex",
	              class: [_vm.$mdActiveTheme, _vm.scrollerClasses]
	            },
	            [_vm._t("md-app-content")],
	            2
	          )
	        ],
	        2
	      )
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdApp_MdAppInternalDrawer = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-f33ea0da", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdApp/MdAppInternalDrawer.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(68)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdAppInternalDrawer_default.a,
	  MdApp_MdAppInternalDrawer,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdApp/MdAppInternalDrawer.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-f33ea0da", Component.options)
	  } else {
	    hotAPI.reload("data-v-f33ea0da", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdApp_MdAppInternalDrawer = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 68 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 69 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdAppMixin = __webpack_require__(31);

	var _MdAppMixin2 = _interopRequireDefault(_MdAppMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = new _MdComponent2.default({
	  name: 'MdAppInternalDrawer',
	  mixins: [_MdAppMixin2.default]
	});

	/***/ }),
	/* 70 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdApp/MdAppToolbar.vue
	var MdAppToolbar = __webpack_require__(72);
	var MdAppToolbar_default = /*#__PURE__*/__webpack_require__.n(MdAppToolbar);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-2d3e4174","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdApp/MdAppToolbar.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-toolbar",
	    _vm._g(
	      _vm._b(
	        {
	          staticClass: "md-app-toolbar",
	          class: _vm.toolbarClasses,
	          style: _vm.toolbarStyles
	        },
	        "md-toolbar",
	        _vm.$attrs,
	        false
	      ),
	      _vm.$listeners
	    ),
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdApp_MdAppToolbar = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-2d3e4174", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdApp/MdAppToolbar.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(71)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdAppToolbar_default.a,
	  MdApp_MdAppToolbar,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdApp/MdAppToolbar.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-2d3e4174", Component.options)
	  } else {
	    hotAPI.reload("data-v-2d3e4174", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdApp_MdAppToolbar = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 71 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 72 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdAppToolbar',
	  inject: ['MdApp'],
	  computed: {
	    toolbarClasses: function toolbarClasses() {
	      return {
	        'md-no-elevation': !this.MdApp.toolbar.hasElevation,
	        'md-reveal-active': this.MdApp.toolbar.revealActive,
	        'md-fixed-last-active': this.MdApp.toolbar.fixedLastActive,
	        'md-overlap-off': this.MdApp.toolbar.overlapOff
	      };
	    },
	    toolbarStyles: function toolbarStyles() {
	      var styles = {
	        'top': this.MdApp.toolbar.top + 'px'
	      };

	      if (this.MdApp.toolbar.fixedLastActive) {
	        styles['transform'] = 'translate3D(0, ' + this.MdApp.toolbar.fixedLastHeight + 'px, 0)';
	      }

	      return styles;
	    }
	  },
	  mounted: function mounted() {
	    var title = this.$el.querySelector('.md-title, .md-display-1, .md-display-2');

	    this.MdApp.toolbar.element = this.$el;
	    this.MdApp.toolbar.titleElement = title;

	    if (title) {
	      this.MdApp.toolbar.titleSize = parseInt(window.getComputedStyle(title).fontSize, 10);
	    }
	  }
	};

	/***/ }),
	/* 73 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdApp/MdAppContent.vue
	var MdAppContent = __webpack_require__(75);
	var MdAppContent_default = /*#__PURE__*/__webpack_require__.n(MdAppContent);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-65f3d944","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdApp/MdAppContent.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm.showCard
	    ? _c(
	        "md-card",
	        _vm._g(
	          _vm._b(
	            { staticClass: "md-app-content md-flex" },
	            "md-card",
	            _vm.$attrs,
	            false
	          ),
	          _vm.$listeners
	        ),
	        [_vm._t("default")],
	        2
	      )
	    : _c(
	        "md-content",
	        _vm._g(
	          _vm._b(
	            { staticClass: "md-app-content md-flex" },
	            "md-content",
	            _vm.$attrs,
	            false
	          ),
	          _vm.$listeners
	        ),
	        [_vm._t("default")],
	        2
	      )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdApp_MdAppContent = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-65f3d944", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdApp/MdAppContent.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(74)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdAppContent_default.a,
	  MdApp_MdAppContent,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdApp/MdAppContent.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-65f3d944", Component.options)
	  } else {
	    hotAPI.reload("data-v-65f3d944", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdApp_MdAppContent = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 74 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 75 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdAppContent',
	  inject: ['MdApp'],
	  computed: {
	    showCard: function showCard() {
	      return this.MdApp.options && this.MdApp.options.mode === 'overlap';
	    }
	  }
	};

	/***/ }),
	/* 76 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdApp/MdAppDrawer.vue
	var MdAppDrawer = __webpack_require__(77);
	var MdAppDrawer_default = /*#__PURE__*/__webpack_require__.n(MdAppDrawer);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-1d41d1f6","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdApp/MdAppDrawer.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-drawer",
	    _vm._g(
	      _vm._b({ staticClass: "md-app-drawer" }, "md-drawer", _vm.$attrs, false),
	      _vm.$listeners
	    ),
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdApp_MdAppDrawer = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-1d41d1f6", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdApp/MdAppDrawer.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdAppDrawer_default.a,
	  MdApp_MdAppDrawer,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdApp/MdAppDrawer.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-1d41d1f6", Component.options)
	  } else {
	    hotAPI.reload("data-v-1d41d1f6", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdApp_MdAppDrawer = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 77 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdAppDrawer',
	  inject: ['MdApp'],
	  data: function data() {
	    return {
	      drawerElement: {
	        mdActive: null,
	        mode: null,
	        submode: null
	      }
	    };
	  },
	  computed: {
	    visible: function visible() {
	      return this.drawerElement.mdActive;
	    },
	    mode: function mode() {
	      return this.drawerElement.mode;
	    },
	    submode: function submode() {
	      return this.drawerElement.submode;
	    }
	  },
	  watch: {
	    visible: function visible(_visible) {
	      this.MdApp.drawer.width = this.getDrawerWidth();
	      this.MdApp.drawer.active = _visible;
	    },
	    mode: function mode(_mode) {
	      this.MdApp.drawer.mode = _mode;
	    },
	    submode: function submode(_submode) {
	      this.MdApp.drawer.submode = _submode;
	    }
	  },
	  methods: {
	    getDrawerWidth: function getDrawerWidth() {
	      if (this.$el) {
	        return window.getComputedStyle(this.$el).width;
	      }

	      return 0;
	    }
	  },
	  mounted: function () {
	    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	      return regeneratorRuntime.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              _context.next = 2;
	              return this.$nextTick();

	            case 2:
	              this.drawerElement = this.$children[0];
	              this.MdApp.drawer.width = this.getDrawerWidth();
	              this.MdApp.drawer.active = this.visible;
	              this.MdApp.drawer.mode = this.mode;
	              this.MdApp.drawer.submode = this.submode;
	              this.MdApp.drawer.initialWidth = this.$el.offsetWidth;

	            case 8:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, _callee, this);
	    }));

	    function mounted() {
	      return _ref.apply(this, arguments);
	    }

	    return mounted;
	  }()
	};

	/***/ }),
	/* 78 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdAutocomplete = __webpack_require__(79);

	var _MdAutocomplete2 = _interopRequireDefault(_MdAutocomplete);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdAutocomplete2.default.name, _MdAutocomplete2.default);
	};

	/***/ }),
	/* 79 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdAutocomplete/MdAutocomplete.vue
	var MdAutocomplete = __webpack_require__(81);
	var MdAutocomplete_default = /*#__PURE__*/__webpack_require__.n(MdAutocomplete);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-130e5ea2","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdAutocomplete/MdAutocomplete.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-field",
	    {
	      staticClass: "md-autocomplete",
	      class: _vm.fieldClasses,
	      attrs: { "md-clearable": "", "md-inline": _vm.isBoxLayout }
	    },
	    [
	      _c(
	        "md-menu",
	        {
	          attrs: {
	            "md-direction": "bottom-start",
	            "md-dense": _vm.mdDense,
	            "md-align-trigger": "",
	            "md-full-width": "",
	            "md-active": _vm.showMenu
	          },
	          on: {
	            "update:mdActive": function($event) {
	              _vm.showMenu = $event
	            }
	          }
	        },
	        [
	          _c(
	            "md-input",
	            _vm._b(
	              {
	                attrs: {
	                  id: _vm.mdInputId,
	                  name: _vm.mdInputName,
	                  maxlength: _vm.mdInputMaxlength,
	                  placeholder: _vm.mdInputPlaceholder
	                },
	                on: {
	                  focus: function($event) {
	                    $event.stopPropagation()
	                    _vm.openOnFocus($event)
	                  },
	                  blur: _vm.hideOptions,
	                  input: _vm.onInput,
	                  click: function($event) {
	                    $event.stopPropagation()
	                    $event.preventDefault()
	                    _vm.openOnFocus($event)
	                  }
	                },
	                model: {
	                  value: _vm.searchTerm,
	                  callback: function($$v) {
	                    _vm.searchTerm = $$v
	                  },
	                  expression: "searchTerm"
	                }
	              },
	              "md-input",
	              _vm.$attrs,
	              false
	            )
	          ),
	          _vm._v(" "),
	          _c(
	            "md-menu-content",
	            {
	              directives: [
	                {
	                  name: "show",
	                  rawName: "v-show",
	                  value: _vm.hasScopedEmptySlot || _vm.hasFilteredItems,
	                  expression: "hasScopedEmptySlot || hasFilteredItems"
	                }
	              ],
	              class: _vm.contentClasses
	            },
	            [
	              _vm.isPromisePending
	                ? _c(
	                    "div",
	                    { staticClass: "md-autocomplete-loading" },
	                    [
	                      _c("md-progress-spinner", {
	                        attrs: {
	                          "md-diameter": 40,
	                          "md-stroke": 4,
	                          "md-mode": "indeterminate"
	                        }
	                      })
	                    ],
	                    1
	                  )
	                : _vm._e(),
	              _vm._v(" "),
	              _vm.hasFilteredItems
	                ? _c(
	                    "div",
	                    { staticClass: "md-autocomplete-items" },
	                    _vm._l(_vm.getOptions(), function(item, index) {
	                      return _c(
	                        "md-menu-item",
	                        {
	                          key: index,
	                          on: {
	                            click: function($event) {
	                              _vm.selectItem(item, $event)
	                            }
	                          }
	                        },
	                        [
	                          _vm.$scopedSlots["md-autocomplete-item"]
	                            ? _vm._t("md-autocomplete-item", null, {
	                                item: item,
	                                term: _vm.searchTerm
	                              })
	                            : [_vm._v(_vm._s(item))]
	                        ],
	                        2
	                      )
	                    })
	                  )
	                : _vm.hasScopedEmptySlot
	                  ? _c("md-menu-item", [
	                      _c(
	                        "div",
	                        { staticClass: "md-autocomplete-empty" },
	                        [
	                          _vm._t("md-autocomplete-empty", null, {
	                            term: _vm.searchTerm
	                          })
	                        ],
	                        2
	                      )
	                    ])
	                  : _vm._e()
	            ],
	            1
	          )
	        ],
	        1
	      ),
	      _vm._v(" "),
	      _vm._t("default")
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdAutocomplete_MdAutocomplete = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-130e5ea2", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdAutocomplete/MdAutocomplete.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(80)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdAutocomplete_default.a,
	  MdAutocomplete_MdAutocomplete,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdAutocomplete/MdAutocomplete.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-130e5ea2", Component.options)
	  } else {
	    hotAPI.reload("data-v-130e5ea2", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdAutocomplete_MdAutocomplete = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 80 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 81 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var _fuzzysearch = __webpack_require__(82);

	var _fuzzysearch2 = _interopRequireDefault(_fuzzysearch);

	var _isPromise2 = __webpack_require__(83);

	var _isPromise3 = _interopRequireDefault(_isPromise2);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	exports.default = {
	  name: 'MdAutocomplete',
	  props: {
	    value: {
	      type: null,
	      required: true
	    },
	    mdDense: Boolean,
	    mdLayout: _extends({
	      type: String,
	      default: 'floating'
	    }, (0, _MdPropValidator2.default)('md-layout', ['floating', 'box'])),
	    mdOpenOnFocus: {
	      type: Boolean,
	      default: true
	    },
	    mdFuzzySearch: {
	      type: Boolean,
	      default: true
	    },
	    mdOptions: {
	      type: [Array, Promise],
	      required: true
	    },
	    mdInputName: String,
	    mdInputId: String,
	    mdInputMaxlength: [String, Number],
	    mdInputPlaceholder: [String, Number]
	  },
	  data: function data() {
	    return {
	      searchTerm: this.value,
	      showMenu: false,
	      triggerPopover: false,
	      isPromisePending: false,
	      filteredAsyncOptions: []
	    };
	  },

	  computed: {
	    isBoxLayout: function isBoxLayout() {
	      return this.mdLayout === 'box';
	    },
	    fieldClasses: function fieldClasses() {
	      if (this.isBoxLayout) {
	        return 'md-autocomplete-box';
	      }
	    },
	    contentClasses: function contentClasses() {
	      if (this.isBoxLayout) {
	        return 'md-autocomplete-box-content';
	      }
	    },
	    filteredStaticOptions: function filteredStaticOptions() {
	      if (this.isPromise(this.mdOptions)) {
	        return false;
	      }

	      var firstItem = this.mdOptions[0];

	      if (this.mdOptions[0] && this.searchTerm) {
	        if (typeof firstItem === 'string') {
	          return this.filterByString();
	        } else if ((typeof firstItem === 'undefined' ? 'undefined' : _typeof(firstItem)) === 'object') {
	          return this.filterByObject();
	        }
	      }

	      return this.mdOptions;
	    },
	    hasFilteredItems: function hasFilteredItems() {
	      return this.filteredStaticOptions.length > 0 || this.filteredAsyncOptions.length > 0;
	    },
	    hasScopedEmptySlot: function hasScopedEmptySlot() {
	      return this.$scopedSlots['md-autocomplete-empty'];
	    }
	  },
	  watch: {
	    mdOptions: {
	      deep: true,
	      immediate: true,
	      handler: function () {
	        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	          return regeneratorRuntime.wrap(function _callee$(_context) {
	            while (1) {
	              switch (_context.prev = _context.next) {
	                case 0:
	                  if (!this.isPromise(this.mdOptions)) {
	                    _context.next = 6;
	                    break;
	                  }

	                  this.isPromisePending = true;
	                  _context.next = 4;
	                  return this.mdOptions;

	                case 4:
	                  this.filteredAsyncOptions = _context.sent;

	                  this.isPromisePending = false;

	                case 6:
	                case 'end':
	                  return _context.stop();
	              }
	            }
	          }, _callee, this);
	        }));

	        function handler() {
	          return _ref.apply(this, arguments);
	        }

	        return handler;
	      }()
	    },

	    value: function value(val) {
	      this.searchTerm = val;
	    }
	  },
	  methods: {
	    getOptions: function getOptions() {
	      if (this.isPromise(this.mdOptions)) {
	        return this.filteredAsyncOptions;
	      }

	      return this.filteredStaticOptions;
	    },
	    isPromise: function isPromise(obj) {
	      return (0, _isPromise3.default)(obj);
	    },
	    matchText: function matchText(item) {
	      var target = item.toLowerCase();
	      var search = this.searchTerm.toLowerCase();

	      if (this.mdFuzzySearch) {
	        return (0, _fuzzysearch2.default)(search, target);
	      }

	      return target.includes(search);
	    },
	    filterByString: function filterByString() {
	      var _this = this;

	      return this.mdOptions.filter(function (item) {
	        return _this.matchText(item);
	      });
	    },
	    filterByObject: function filterByObject() {
	      var _this2 = this;

	      return this.mdOptions.filter(function (item) {
	        var values = Object.values(item);
	        var valuesCount = values.length;

	        for (var i = 0; i <= valuesCount; i++) {
	          if (typeof values[i] === 'string' && _this2.matchText(values[i])) {
	            return true;
	          }
	        }
	      });
	    },
	    openOnFocus: function openOnFocus() {
	      if (this.mdOpenOnFocus) {
	        this.showOptions();
	      }
	    },
	    onInput: function onInput() {
	      if (!this.mdOpenOnFocus) {
	        this.showOptions();
	      }

	      if (this.searchTerm.constructor.name.toLowerCase() !== 'inputevent') {
	        this.$emit('md-changed', this.searchTerm);
	      }
	    },
	    showOptions: function () {
	      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
	        return regeneratorRuntime.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                this.showMenu = true;
	                _context2.next = 3;
	                return this.$nextTick();

	              case 3:
	                this.triggerPopover = true;
	                this.$emit('md-opened');

	              case 5:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, this);
	      }));

	      function showOptions() {
	        return _ref2.apply(this, arguments);
	      }

	      return showOptions;
	    }(),
	    hideOptions: function () {
	      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
	        return regeneratorRuntime.wrap(function _callee3$(_context3) {
	          while (1) {
	            switch (_context3.prev = _context3.next) {
	              case 0:
	                _context3.next = 2;
	                return this.$nextTick();

	              case 2:
	                this.showMenu = false;
	                _context3.next = 5;
	                return this.$nextTick();

	              case 5:
	                this.triggerPopover = false;
	                this.$emit('md-closed');

	              case 7:
	              case 'end':
	                return _context3.stop();
	            }
	          }
	        }, _callee3, this);
	      }));

	      function hideOptions() {
	        return _ref3.apply(this, arguments);
	      }

	      return hideOptions;
	    }(),
	    selectItem: function selectItem(item, $event) {
	      var content = $event.target.textContent.trim();

	      this.searchTerm = content;
	      this.$emit('input', item);
	      this.$emit('md-selected', item);
	      this.hideOptions();
	    }
	  }
	};

	/***/ }),
	/* 82 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	function fuzzysearch (needle, haystack) {
	  var tlen = haystack.length;
	  var qlen = needle.length;
	  if (qlen > tlen) {
	    return false;
	  }
	  if (qlen === tlen) {
	    return needle === haystack;
	  }
	  outer: for (var i = 0, j = 0; i < qlen; i++) {
	    var nch = needle.charCodeAt(i);
	    while (j < tlen) {
	      if (haystack.charCodeAt(j++) === nch) {
	        continue outer;
	      }
	    }
	    return false;
	  }
	  return true;
	}

	module.exports = fuzzysearch;


	/***/ }),
	/* 83 */
	/***/ (function(module, exports) {

	module.exports = isPromise;

	function isPromise(obj) {
	  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
	}


	/***/ }),
	/* 84 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdAvatar = __webpack_require__(85);

	var _MdAvatar2 = _interopRequireDefault(_MdAvatar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdAvatar2.default.name, _MdAvatar2.default);
	};

	/***/ }),
	/* 85 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdAvatar/MdAvatar.vue
	var MdAvatar = __webpack_require__(87);
	var MdAvatar_default = /*#__PURE__*/__webpack_require__.n(MdAvatar);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-2bc61fcf","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdAvatar/MdAvatar.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-avatar", class: [_vm.$mdActiveTheme] },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdAvatar_MdAvatar = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-2bc61fcf", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdAvatar/MdAvatar.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(86)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdAvatar_default.a,
	  MdAvatar_MdAvatar,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdAvatar/MdAvatar.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-2bc61fcf", Component.options)
	  } else {
	    hotAPI.reload("data-v-2bc61fcf", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdAvatar_MdAvatar = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 86 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 87 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdAvatar'
	}); //
	//
	//
	//
	//
	//

	/***/ }),
	/* 88 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdBottomBar = __webpack_require__(89);

	var _MdBottomBar2 = _interopRequireDefault(_MdBottomBar);

	var _MdBottomBarItem = __webpack_require__(94);

	var _MdBottomBarItem2 = _interopRequireDefault(_MdBottomBarItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdBottomBar2.default.name, _MdBottomBar2.default);
	  Vue.component(_MdBottomBarItem2.default.name, _MdBottomBarItem2.default);
	};

	/***/ }),
	/* 89 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdBottomBar/MdBottomBar.vue
	var MdBottomBar = __webpack_require__(91);
	var MdBottomBar_default = /*#__PURE__*/__webpack_require__.n(MdBottomBar);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-0fac6773","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdBottomBar/MdBottomBar.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    {
	      staticClass: "md-bottom-bar",
	      class: [_vm.$mdActiveTheme, _vm.barClasses]
	    },
	    [
	      _c(
	        "md-ripple",
	        {
	          attrs: {
	            "md-disabled": _vm.mdType === "fixed",
	            "md-active": _vm.MdBottomBar.mouseEvent
	          }
	        },
	        [_vm._t("default")],
	        2
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdBottomBar_MdBottomBar = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-0fac6773", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdBottomBar/MdBottomBar.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(90)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdBottomBar_default.a,
	  MdBottomBar_MdBottomBar,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdBottomBar/MdBottomBar.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-0fac6773", Component.options)
	  } else {
	    hotAPI.reload("data-v-0fac6773", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdBottomBar_MdBottomBar = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 90 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 91 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	var _MdRipple = __webpack_require__(8);

	var _MdRipple2 = _interopRequireDefault(_MdRipple);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	exports.default = new _MdComponent2.default({
	  name: 'MdBottomBar',
	  components: {
	    MdRipple: _MdRipple2.default
	  },
	  props: {
	    mdSyncRoute: Boolean,
	    mdActiveItem: [String, Number],
	    mdType: _extends({
	      type: String,
	      default: 'fixed'
	    }, (0, _MdPropValidator2.default)('md-type', ['fixed', 'shift']))
	  },
	  data: function data() {
	    return {
	      MdBottomBar: {
	        mouseEvent: null,
	        activeItem: null,
	        items: {}
	      }
	    };
	  },
	  provide: function provide() {
	    return {
	      MdBottomBar: this.MdBottomBar
	    };
	  },

	  computed: {
	    activeItem: function activeItem() {
	      return this.MdBottomBar.activeItem;
	    },
	    barClasses: function barClasses() {
	      return _defineProperty({}, 'md-type-' + this.mdType, true);
	    }
	  },
	  watch: {
	    activeItem: function activeItem() {
	      this.$emit('md-changed', this.activeItem);
	    }
	  },
	  methods: {
	    setupWatchers: function setupWatchers() {
	      if (this.mdSyncRoute) {
	        this.$watch('$route', {
	          deep: true,
	          handler: function handler() {
	            if (this.mdSyncRoute) {
	              this.setActiveItemByRoute();
	            }
	          }
	        });
	      }
	    },
	    hasActiveItem: function hasActiveItem() {
	      return this.MdBottomBar.activeItem || this.mdActiveItem;
	    },
	    getItemsAndKeys: function getItemsAndKeys() {
	      var items = this.MdBottomBar.items;

	      return {
	        items: items,
	        keys: Object.keys(items)
	      };
	    },
	    setActiveItemByIndex: function setActiveItemByIndex(index) {
	      var _getItemsAndKeys = this.getItemsAndKeys(),
	          keys = _getItemsAndKeys.keys;

	      if (!this.mdActiveItem) {
	        this.MdBottomBar.activeItem = keys[index];
	      } else {
	        this.MdBottomBar.activeItem = this.mdActiveItem;
	      }
	    },
	    setActiveItemByRoute: function setActiveItemByRoute() {
	      var _this = this;

	      var _getItemsAndKeys2 = this.getItemsAndKeys(),
	          items = _getItemsAndKeys2.items,
	          keys = _getItemsAndKeys2.keys;

	      var tabIndex = null;

	      if (this.$router) {
	        keys.forEach(function (key, index) {
	          var item = items[key];
	          var toProp = item.props.to;

	          if (toProp && toProp === _this.$route.path) {
	            tabIndex = index;
	          }
	        });
	      }

	      if (!this.hasActiveItem()) {
	        if (keys[tabIndex]) {
	          this.MdBottomBar.activeItem = keys[tabIndex];
	        } else {
	          this.MdBottomBar.activeItem = keys[0];
	        }
	      } else if (keys[tabIndex]) {
	        this.MdBottomBar.activeItem = keys[tabIndex];
	      }
	    }
	  },
	  created: function created() {
	    this.MdBottomBar.type = this.mdType;
	  },
	  mounted: function () {
	    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	      var _this2 = this;

	      return regeneratorRuntime.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              _context.next = 2;
	              return this.$nextTick();

	            case 2:

	              if (this.mdSyncRoute) {
	                this.setActiveItemByRoute();
	              } else {
	                this.setActiveItemByIndex(0);
	              }

	              window.setTimeout(function () {
	                _this2.setupWatchers();
	              }, 100);

	            case 4:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, _callee, this);
	    }));

	    function mounted() {
	      return _ref2.apply(this, arguments);
	    }

	    return mounted;
	  }()
	});

	/***/ }),
	/* 92 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 93 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _raf = __webpack_require__(9);

	var _raf2 = _interopRequireDefault(_raf);

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = new _MdComponent2.default({
	  name: 'MdRipple',
	  props: {
	    mdActive: null,
	    mdDisabled: Boolean,
	    mdCentered: Boolean
	  },
	  data: function data() {
	    return {
	      eventType: null,
	      waveStyles: null,
	      animating: false,
	      touchTimeout: null
	    };
	  },
	  computed: {
	    isDisabled: function isDisabled() {
	      return !this.$material.ripple || this.mdDisabled;
	    },
	    rippleClasses: function rippleClasses() {
	      return {
	        'md-disabled': this.isDisabled
	      };
	    },
	    waveClasses: function waveClasses() {
	      return {
	        'md-centered': this.mdCentered
	      };
	    }
	  },
	  watch: {
	    mdActive: function mdActive(active) {
	      var isBoolean = typeof active === 'boolean';
	      var isEvent = active.constructor.name.toLowerCase() === 'mouseevent';

	      if (isBoolean && this.mdCentered && active) {
	        this.startRipple({
	          type: 'mousedown'
	        });
	        this.$emit('update:mdActive', false);
	      } else if (isEvent) {
	        this.startRipple(active);
	        this.$emit('update:mdActive', false);
	      }
	    }
	  },
	  methods: {
	    touchMoveCheck: function touchMoveCheck() {
	      window.clearTimeout(this.touchTimeout);
	    },
	    touchStartCheck: function touchStartCheck($event) {
	      var _this = this;

	      this.touchTimeout = window.setTimeout(function () {
	        _this.startRipple($event);
	      }, 100);
	    },
	    startRipple: function startRipple($event) {
	      var _this2 = this;

	      (0, _raf2.default)(_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	        var eventType, isDisabled, mdCentered, size, position;
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                eventType = _this2.eventType, isDisabled = _this2.isDisabled, mdCentered = _this2.mdCentered;

	                if (!(!isDisabled && (!eventType || eventType === $event.type))) {
	                  _context.next = 10;
	                  break;
	                }

	                size = _this2.getSize();
	                position = null;


	                if (mdCentered) {
	                  position = _this2.getCenteredPosition(size);
	                } else {
	                  position = _this2.getHitPosition($event, size);
	                }

	                _context.next = 7;
	                return _this2.clearWave();

	              case 7:

	                _this2.eventType = $event.type;
	                _this2.animating = true;
	                _this2.applyStyles(position, size);

	              case 10:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, _this2);
	      })));
	    },
	    applyStyles: function applyStyles(position, size) {
	      size += 'px';

	      this.waveStyles = _extends({}, position, {
	        width: size,
	        height: size
	      });
	    },
	    clearWave: function clearWave() {
	      this.waveStyles = null;
	      this.animating = false;

	      return this.$nextTick();
	    },
	    getSize: function getSize() {
	      var _$el = this.$el,
	          offsetWidth = _$el.offsetWidth,
	          offsetHeight = _$el.offsetHeight;


	      return Math.round(Math.max(offsetWidth, offsetHeight));
	    },
	    getCenteredPosition: function getCenteredPosition(size) {
	      var halfSize = -size / 2 + 'px';

	      return {
	        'margin-top': halfSize,
	        'margin-left': halfSize
	      };
	    },
	    getHitPosition: function getHitPosition($event, elementSize) {
	      var rect = this.$el.getBoundingClientRect();
	      var top = $event.pageY;
	      var left = $event.pageX;

	      if ($event.type === 'touchstart') {
	        top = $event.changedTouches[0].pageY;
	        left = $event.changedTouches[0].pageX;
	      }

	      return {
	        top: top - rect.top - elementSize / 2 - document.documentElement.scrollTop + 'px',
	        left: left - rect.left - elementSize / 2 - document.documentElement.scrollLeft + 'px'
	      };
	    }
	  }
	});

	/***/ }),
	/* 94 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdBottomBar/MdBottomBarItem.vue
	var MdBottomBarItem = __webpack_require__(95);
	var MdBottomBarItem_default = /*#__PURE__*/__webpack_require__.n(MdBottomBarItem);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-7ba29fa6","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdBottomBar/MdBottomBarItem.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-button",
	    _vm._g(
	      _vm._b(
	        {
	          staticClass: "md-bottom-bar-item",
	          class: _vm.itemClasses,
	          attrs: {
	            id: _vm.id,
	            disabled: _vm.mdDisabled,
	            "md-ripple": _vm.MdBottomBar.type === "fixed"
	          },
	          on: { click: _vm.setActiveItem }
	        },
	        "md-button",
	        _vm.$attrs,
	        false
	      ),
	      _vm.$listeners
	    ),
	    [
	      _vm.$slots.default
	        ? _vm._t("default")
	        : [
	            _vm.isAssetIcon(_vm.mdIcon)
	              ? _c("md-icon", {
	                  staticClass: "md-bottom-bar-icon",
	                  attrs: { "md-src": _vm.mdIcon }
	                })
	              : _c("md-icon", { staticClass: "md-bottom-bar-icon" }, [
	                  _vm._v(_vm._s(_vm.mdIcon))
	                ]),
	            _vm._v(" "),
	            _c("span", { staticClass: "md-bottom-bar-label" }, [
	              _vm._v(_vm._s(_vm.mdLabel))
	            ])
	          ]
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdBottomBar_MdBottomBarItem = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-7ba29fa6", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdBottomBar/MdBottomBarItem.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdBottomBarItem_default.a,
	  MdBottomBar_MdBottomBarItem,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdBottomBar/MdBottomBarItem.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-7ba29fa6", Component.options)
	  } else {
	    hotAPI.reload("data-v-7ba29fa6", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdBottomBar_MdBottomBarItem = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 95 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdAssetIcon = __webpack_require__(18);

	var _MdAssetIcon2 = _interopRequireDefault(_MdAssetIcon);

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	var _MdRouterLinkProps = __webpack_require__(12);

	var _MdRouterLinkProps2 = _interopRequireDefault(_MdRouterLinkProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ignoredProps = ['id', 'mdLabel', 'mdIcon', 'mdDisabled']; //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdBottomBarItem',
	  mixins: [_MdAssetIcon2.default],
	  props: {
	    id: {
	      type: String,
	      default: function _default() {
	        return 'md-bottom-bar-item-' + (0, _MdUuid2.default)();
	      }
	    },
	    to: null,
	    mdLabel: String,
	    mdIcon: String,
	    mdDisabled: Boolean
	  },
	  inject: ['MdBottomBar'],
	  watch: {
	    $props: {
	      deep: true,
	      handler: function handler() {
	        this.setItemData();
	      }
	    },
	    $attrs: {
	      deep: true,
	      handler: function handler() {
	        this.setItemData();
	      }
	    }
	  },
	  computed: {
	    itemClasses: function itemClasses() {
	      return {
	        'md-active': this.id === this.MdBottomBar.activeItem
	      };
	    }
	  },
	  methods: {
	    getPropValues: function getPropValues() {
	      var _this = this;

	      var propNames = Object.keys(this.$options.props);
	      var values = {};

	      propNames.forEach(function (prop) {
	        if (!ignoredProps.includes(prop)) {
	          if (_this[prop]) {
	            values[prop] = _this[prop];
	          } else if (_this.$attrs && _this.$attrs.hasOwnProperty(prop)) {
	            if (prop) {
	              values[prop] = _this.$attrs[prop];
	            } else {
	              values[prop] = true;
	            }
	          }
	        }
	      });

	      return values;
	    },
	    setItemData: function setItemData() {
	      this.$set(this.MdBottomBar.items, this.id, {
	        disabled: this.mdDisabled,
	        options: this.mdTemplateOptions,
	        props: this.getPropValues()
	      });
	    },
	    setActiveItem: function setActiveItem($event) {
	      this.MdBottomBar.activeItem = this.id;

	      if (this.MdBottomBar.type === 'shift') {
	        this.MdBottomBar.mouseEvent = $event;
	      }
	    }
	  },
	  beforeCreate: function beforeCreate() {
	    var _this2 = this;

	    if (this.$router && this.$options.propsData.to) {
	      var componentProps = (0, _MdRouterLinkProps2.default)(this, this.$options.props);
	      var propNames = Object.keys(this.$options.propsData);

	      this.$options.props = componentProps;
	      propNames.forEach(function (prop) {
	        if (!ignoredProps.includes(prop)) {
	          _this2.$attrs[prop] = _this2.$options.propsData[prop];
	        }
	      });
	    }
	  },
	  created: function created() {
	    this.setItemData();
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.$delete(this.MdBottomBar.items, this.id);
	  }
	};

	/***/ }),
	/* 96 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdButton = __webpack_require__(13);

	var _MdButton2 = _interopRequireDefault(_MdButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdButton2.default.name, _MdButton2.default);
	};

	/***/ }),
	/* 97 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 98 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdFocused = __webpack_require__(32);

	var _MdFocused2 = _interopRequireDefault(_MdFocused);

	var _MdRipple = __webpack_require__(19);

	var _MdRipple2 = _interopRequireDefault(_MdRipple);

	var _MdRouterLinkProps = __webpack_require__(12);

	var _MdRouterLinkProps2 = _interopRequireDefault(_MdRouterLinkProps);

	var _MdButtonContent = __webpack_require__(99);

	var _MdButtonContent2 = _interopRequireDefault(_MdButtonContent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdButton',
	  components: {
	    MdButtonContent: _MdButtonContent2.default
	  },
	  mixins: [_MdRipple2.default, _MdFocused2.default],
	  props: {
	    href: String,
	    type: {
	      type: String,
	      default: 'button'
	    },
	    disabled: Boolean,
	    to: null
	  },
	  render: function render(createElement) {
	    var buttonContent = createElement('md-button-content', {
	      attrs: {
	        mdRipple: this.mdRipple,
	        disabled: this.disabled
	      }
	    }, this.$slots.default);
	    var buttonAttrs = {
	      staticClass: 'md-button',
	      class: [this.$mdActiveTheme, {
	        'md-ripple-off': !this.mdRipple,
	        'md-focused': this.mdHasFocus
	      }],
	      attrs: _extends({}, this.attrs, {
	        href: this.href,
	        disabled: this.disabled,
	        type: !this.href && (this.type || 'button')
	      }),
	      on: this.$listeners
	    };
	    var tag = 'button';

	    if (this.href) {
	      tag = 'a';
	    } else if (this.$router && this.to) {
	      this.$options.props = (0, _MdRouterLinkProps2.default)(this, this.$options.props);

	      tag = 'router-link';
	      buttonAttrs.props = this.$props;
	      delete buttonAttrs.props.type;
	      delete buttonAttrs.attrs.type;
	      delete buttonAttrs.props.href;
	      delete buttonAttrs.attrs.href;
	    }

	    return createElement(tag, buttonAttrs, [buttonContent]);
	  }
	});

	/***/ }),
	/* 99 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdButton/MdButtonContent.vue
	var MdButtonContent = __webpack_require__(101);
	var MdButtonContent_default = /*#__PURE__*/__webpack_require__.n(MdButtonContent);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-008ae93a","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdButton/MdButtonContent.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-ripple",
	    { attrs: { "md-disabled": !_vm.mdRipple || _vm.disabled } },
	    [_c("div", { staticClass: "md-button-content" }, [_vm._t("default")], 2)]
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdButton_MdButtonContent = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-008ae93a", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdButton/MdButtonContent.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(100)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdButtonContent_default.a,
	  MdButton_MdButtonContent,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdButton/MdButtonContent.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-008ae93a", Component.options)
	  } else {
	    hotAPI.reload("data-v-008ae93a", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdButton_MdButtonContent = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 100 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 101 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdRipple = __webpack_require__(8);

	var _MdRipple2 = _interopRequireDefault(_MdRipple);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdButtonContent',
	  components: {
	    MdRipple: _MdRipple2.default
	  },
	  props: {
	    mdRipple: Boolean,
	    disabled: Boolean
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 102 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdCard = __webpack_require__(103);

	var _MdCard2 = _interopRequireDefault(_MdCard);

	var _MdCardArea = __webpack_require__(106);

	var _MdCardArea2 = _interopRequireDefault(_MdCardArea);

	var _MdCardHeader = __webpack_require__(109);

	var _MdCardHeader2 = _interopRequireDefault(_MdCardHeader);

	var _MdCardHeaderText = __webpack_require__(112);

	var _MdCardHeaderText2 = _interopRequireDefault(_MdCardHeaderText);

	var _MdCardMedia = __webpack_require__(114);

	var _MdCardMedia2 = _interopRequireDefault(_MdCardMedia);

	var _MdCardMediaActions = __webpack_require__(117);

	var _MdCardMediaActions2 = _interopRequireDefault(_MdCardMediaActions);

	var _MdCardMediaCover = __webpack_require__(120);

	var _MdCardMediaCover2 = _interopRequireDefault(_MdCardMediaCover);

	var _MdCardContent = __webpack_require__(123);

	var _MdCardContent2 = _interopRequireDefault(_MdCardContent);

	var _MdCardExpand = __webpack_require__(126);

	var _MdCardExpand2 = _interopRequireDefault(_MdCardExpand);

	var _MdCardExpandTrigger = __webpack_require__(129);

	var _MdCardExpandTrigger2 = _interopRequireDefault(_MdCardExpandTrigger);

	var _MdCardExpandContent = __webpack_require__(132);

	var _MdCardExpandContent2 = _interopRequireDefault(_MdCardExpandContent);

	var _MdCardActions = __webpack_require__(135);

	var _MdCardActions2 = _interopRequireDefault(_MdCardActions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdCard2.default.name, _MdCard2.default);
	  Vue.component(_MdCardArea2.default.name, _MdCardArea2.default);
	  Vue.component(_MdCardHeader2.default.name, _MdCardHeader2.default);
	  Vue.component(_MdCardHeaderText2.default.name, _MdCardHeaderText2.default);
	  Vue.component(_MdCardMedia2.default.name, _MdCardMedia2.default);
	  Vue.component(_MdCardMediaActions2.default.name, _MdCardMediaActions2.default);
	  Vue.component(_MdCardMediaCover2.default.name, _MdCardMediaCover2.default);
	  Vue.component(_MdCardContent2.default.name, _MdCardContent2.default);
	  Vue.component(_MdCardExpand2.default.name, _MdCardExpand2.default);
	  Vue.component(_MdCardExpandTrigger2.default.name, _MdCardExpandTrigger2.default);
	  Vue.component(_MdCardExpandContent2.default.name, _MdCardExpandContent2.default);
	  Vue.component(_MdCardActions2.default.name, _MdCardActions2.default);
	};

	/***/ }),
	/* 103 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdCard/MdCard.vue
	var MdCard = __webpack_require__(105);
	var MdCard_default = /*#__PURE__*/__webpack_require__.n(MdCard);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-24f7f3af","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdCard/MdCard.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-card", class: [_vm.$mdActiveTheme, _vm.cardClasses] },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdCard_MdCard = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-24f7f3af", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdCard/MdCard.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(104)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCard_default.a,
	  MdCard_MdCard,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCard/MdCard.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-24f7f3af", Component.options)
	  } else {
	    hotAPI.reload("data-v-24f7f3af", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdCard_MdCard = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 104 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 105 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdCard',
	  props: {
	    mdWithHover: Boolean
	  },
	  data: function data() {
	    return {
	      MdCard: {
	        expand: false
	      }
	    };
	  },
	  provide: function provide() {
	    return {
	      MdCard: this.MdCard
	    };
	  },

	  computed: {
	    cardClasses: function cardClasses() {
	      return {
	        'md-with-hover': this.mdWithHover,
	        'md-expand-active': this.MdCard.expand
	      };
	    }
	  }
	}); //
	//
	//
	//
	//
	//

	/***/ }),
	/* 106 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdCard/MdCardArea/MdCardArea.vue
	var MdCardArea = __webpack_require__(108);
	var MdCardArea_default = /*#__PURE__*/__webpack_require__.n(MdCardArea);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-132f02d7","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdCard/MdCardArea/MdCardArea.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-card-area", class: _vm.areaClasses },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdCardArea_MdCardArea = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-132f02d7", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdCard/MdCardArea/MdCardArea.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(107)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCardArea_default.a,
	  MdCardArea_MdCardArea,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCard/MdCardArea/MdCardArea.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-132f02d7", Component.options)
	  } else {
	    hotAPI.reload("data-v-132f02d7", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdCard_MdCardArea_MdCardArea = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 107 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 108 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdCardArea',
	  props: {
	    mdInset: Boolean
	  },
	  computed: {
	    areaClasses: function areaClasses() {
	      return {
	        'md-inset': this.mdInset
	      };
	    }
	  }
	};

	/***/ }),
	/* 109 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdCard/MdCardHeader/MdCardHeader.vue
	var MdCardHeader = __webpack_require__(111);
	var MdCardHeader_default = /*#__PURE__*/__webpack_require__.n(MdCardHeader);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-4d103817","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdCard/MdCardHeader/MdCardHeader.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c("div", { staticClass: "md-card-header" }, [_vm._t("default")], 2)
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdCardHeader_MdCardHeader = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-4d103817", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdCard/MdCardHeader/MdCardHeader.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(110)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCardHeader_default.a,
	  MdCardHeader_MdCardHeader,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCard/MdCardHeader/MdCardHeader.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-4d103817", Component.options)
	  } else {
	    hotAPI.reload("data-v-4d103817", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdCard_MdCardHeader_MdCardHeader = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 110 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 111 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdCardHeader'
	};

	/***/ }),
	/* 112 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdCard/MdCardHeader/MdCardHeaderText.vue
	var MdCardHeaderText = __webpack_require__(113);
	var MdCardHeaderText_default = /*#__PURE__*/__webpack_require__.n(MdCardHeaderText);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-49a3ab64","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdCard/MdCardHeader/MdCardHeaderText.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-card-header-text" },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdCardHeader_MdCardHeaderText = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-49a3ab64", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdCard/MdCardHeader/MdCardHeaderText.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCardHeaderText_default.a,
	  MdCardHeader_MdCardHeaderText,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCard/MdCardHeader/MdCardHeaderText.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-49a3ab64", Component.options)
	  } else {
	    hotAPI.reload("data-v-49a3ab64", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdCard_MdCardHeader_MdCardHeaderText = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 113 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdCardHeaderText',
	  data: function data() {
	    return {
	      parentClasses: null
	    };
	  },
	  mounted: function mounted() {
	    this.parentClasses = this.$parent.$el.classList;

	    if (this.parentClasses.contains('md-card-header')) {
	      this.parentClasses.add('md-card-header-flex');
	    }
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.parentClasses.remove('md-card-header-flex');
	  }
	};

	/***/ }),
	/* 114 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdCard/MdCardMedia/MdCardMedia.vue
	var MdCardMedia = __webpack_require__(116);
	var MdCardMedia_default = /*#__PURE__*/__webpack_require__.n(MdCardMedia);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-33e1f253","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdCard/MdCardMedia/MdCardMedia.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-card-media", class: _vm.mediaClasses },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdCardMedia_MdCardMedia = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-33e1f253", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdCard/MdCardMedia/MdCardMedia.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(115)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCardMedia_default.a,
	  MdCardMedia_MdCardMedia,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCard/MdCardMedia/MdCardMedia.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-33e1f253", Component.options)
	  } else {
	    hotAPI.reload("data-v-33e1f253", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdCard_MdCardMedia_MdCardMedia = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 115 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 116 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdCardMedia',
	  props: {
	    mdRatio: _extends({
	      type: String
	    }, (0, _MdPropValidator2.default)('md-ratio', ['16-9', '16/9', '16:9', '4-3', '4/3', '4:3', '1-1', '1/1', '1:1'])),
	    mdMedium: Boolean,
	    mdBig: Boolean
	  },
	  computed: {
	    mediaClasses: function mediaClasses() {
	      var classes = {};

	      if (this.mdRatio) {
	        var ratio = this.getAspectRatio();

	        if (ratio) {
	          var _ratio = _slicedToArray(ratio, 2),
	              horiz = _ratio[0],
	              vert = _ratio[1];

	          classes['md-ratio-' + horiz + '-' + vert] = true;
	        }
	      }

	      if (this.mdMedium || this.mdBig) {
	        classes = {
	          'md-medium': this.mdMedium,
	          'md-big': this.mdBig
	        };
	      }

	      return classes;
	    }
	  },
	  methods: {
	    getAspectRatio: function getAspectRatio() {
	      var ratio = [];

	      if (this.mdRatio.indexOf(':') !== -1) {
	        ratio = this.mdRatio.split(':');
	      } else if (this.mdRatio.indexOf('/') !== -1) {
	        ratio = this.mdRatio.split('/');
	      } else if (this.mdRatio.indexOf('-') !== -1) {
	        ratio = this.mdRatio.split('-');
	      }

	      return ratio.length === 2 ? ratio : null;
	    }
	  }
	};

	/***/ }),
	/* 117 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdCard/MdCardMedia/MdCardMediaActions.vue
	var MdCardMediaActions = __webpack_require__(119);
	var MdCardMediaActions_default = /*#__PURE__*/__webpack_require__.n(MdCardMediaActions);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-102584da","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdCard/MdCardMedia/MdCardMediaActions.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-card-media-actions" },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdCardMedia_MdCardMediaActions = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-102584da", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdCard/MdCardMedia/MdCardMediaActions.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(118)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCardMediaActions_default.a,
	  MdCardMedia_MdCardMediaActions,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCard/MdCardMedia/MdCardMediaActions.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-102584da", Component.options)
	  } else {
	    hotAPI.reload("data-v-102584da", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdCard_MdCardMedia_MdCardMediaActions = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 118 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 119 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdCardMediaActions'
	};

	/***/ }),
	/* 120 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdCard/MdCardMedia/MdCardMediaCover.vue
	var MdCardMediaCover = __webpack_require__(122);
	var MdCardMediaCover_default = /*#__PURE__*/__webpack_require__.n(MdCardMediaCover);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-20dfcfd4","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdCard/MdCardMedia/MdCardMediaCover.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-card-media-cover", class: _vm.coverClasses },
	    [
	      _vm._t("default"),
	      _vm._v(" "),
	      _vm.mdTextScrim
	        ? _c("div", {
	            ref: "backdrop",
	            staticClass: "md-card-backdrop",
	            style: _vm.coverStyles
	          })
	        : _vm._e()
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdCardMedia_MdCardMediaCover = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-20dfcfd4", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdCard/MdCardMedia/MdCardMediaCover.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(121)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCardMediaCover_default.a,
	  MdCardMedia_MdCardMediaCover,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCard/MdCardMedia/MdCardMediaCover.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-20dfcfd4", Component.options)
	  } else {
	    hotAPI.reload("data-v-20dfcfd4", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdCard_MdCardMedia_MdCardMediaCover = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 121 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 122 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdCardMediaCover',
	  props: {
	    mdTextScrim: Boolean,
	    mdSolid: Boolean
	  },
	  data: function data() {
	    return {
	      backdropBackground: {}
	    };
	  },
	  computed: {
	    coverClasses: function coverClasses() {
	      return {
	        'md-text-scrim': this.mdTextScrim,
	        'md-solid': this.mdSolid
	      };
	    },
	    coverStyles: function coverStyles() {
	      return {
	        background: this.backdropBackground
	      };
	    }
	  },
	  methods: {
	    applyScrimColor: function applyScrimColor(darkness) {
	      if (this.$refs.backdrop) {
	        this.backdropBackground = 'linear-gradient(to bottom, rgba(0, 0, 0, 0) 20%, rgba(0, 0, 0, ' + darkness / 2 + ') 66%, rgba(0, 0, 0, ' + darkness + ') 100%)';
	      }
	    },
	    applySolidColor: function applySolidColor(darkness) {
	      var area = this.$el.querySelector('.md-card-area');

	      if (area) {
	        area.style.background = 'rgba(0, 0, 0, ' + darkness + ')';
	      }
	    },
	    getImageLightness: function getImageLightness(image, onLoad, onError) {
	      var canvas = document.createElement('canvas');

	      image.crossOrigin = 'Anonymous';

	      image.onload = function () {
	        var colorSum = 0;
	        var ctx = void 0;
	        var imageData = void 0;
	        var imageMetadata = void 0;
	        var r = void 0;
	        var g = void 0;
	        var b = void 0;
	        var average = void 0;

	        canvas.width = this.width;
	        canvas.height = this.height;
	        ctx = canvas.getContext('2d');

	        ctx.drawImage(this, 0, 0);

	        imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
	        imageMetadata = imageData.data;

	        for (var x = 0, len = imageMetadata.length; x < len; x += 4) {
	          r = imageMetadata[x];
	          g = imageMetadata[x + 1];
	          b = imageMetadata[x + 2];

	          average = Math.floor((r + g + b) / 3);
	          colorSum += average;
	        }

	        onLoad(Math.floor(colorSum / (this.width * this.height)));
	      };

	      image.onerror = onError;
	    }
	  },
	  mounted: function mounted() {
	    var _this = this;

	    var applyBackground = function applyBackground() {
	      var darkness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.6;

	      if (_this.mdTextScrim) {
	        _this.applyScrimColor(darkness);
	      } else if (_this.mdSolid) {
	        _this.applySolidColor(darkness);
	      }
	    };
	    var image = this.$el.querySelector('img');

	    if (image && (this.mdTextScrim || this.mdSolid)) {
	      this.getImageLightness(image, function (lightness) {
	        var limit = 256;
	        var darkness = (Math.abs(limit - lightness) * 100 / limit + 15) / 100;

	        if (darkness >= 0.7) {
	          darkness = 0.7;
	        }

	        applyBackground(darkness);
	      }, applyBackground);
	    }
	  }
	};

	/***/ }),
	/* 123 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdCard/MdCardContent/MdCardContent.vue
	var MdCardContent = __webpack_require__(125);
	var MdCardContent_default = /*#__PURE__*/__webpack_require__.n(MdCardContent);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-36a98486","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdCard/MdCardContent/MdCardContent.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c("div", { staticClass: "md-card-content" }, [_vm._t("default")], 2)
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdCardContent_MdCardContent = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-36a98486", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdCard/MdCardContent/MdCardContent.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(124)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCardContent_default.a,
	  MdCardContent_MdCardContent,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCard/MdCardContent/MdCardContent.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-36a98486", Component.options)
	  } else {
	    hotAPI.reload("data-v-36a98486", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdCard_MdCardContent_MdCardContent = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 124 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 125 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdCardContent'
	};

	/***/ }),
	/* 126 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdCard/MdCardExpand/MdCardExpand.vue
	var MdCardExpand = __webpack_require__(128);
	var MdCardExpand_default = /*#__PURE__*/__webpack_require__.n(MdCardExpand);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-d46d3592","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdCard/MdCardExpand/MdCardExpand.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c("div", { staticClass: "md-card-expand" }, [_vm._t("default")], 2)
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdCardExpand_MdCardExpand = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-d46d3592", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdCard/MdCardExpand/MdCardExpand.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(127)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCardExpand_default.a,
	  MdCardExpand_MdCardExpand,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCard/MdCardExpand/MdCardExpand.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-d46d3592", Component.options)
	  } else {
	    hotAPI.reload("data-v-d46d3592", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdCard_MdCardExpand_MdCardExpand = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 127 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 128 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdCardExpand',
	  inject: ['MdCard']
	};

	/***/ }),
	/* 129 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdCardExpandTrigger_vue__ = __webpack_require__(131);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdCardExpandTrigger_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdCardExpandTrigger_vue__);
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(130)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */
	var __vue_template__ = null
	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdCardExpandTrigger_vue___default.a,
	  __vue_template__,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCard/MdCardExpand/MdCardExpandTrigger.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-4ede00b1", Component.options)
	  } else {
	    hotAPI.reload("data-v-4ede00b1", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 130 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 131 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	exports.default = {
	  name: 'MdCardExpandTrigger',
	  inject: ['MdCard'],
	  render: function render(createElement) {
	    var _this = this;

	    var _$slots$default = _slicedToArray(this.$slots.default, 1),
	        trigger = _$slots$default[0];

	    var staticClass = ' md-card-expand-trigger';
	    var listeners = {
	      click: function click() {
	        _this.MdCard.expand = !_this.MdCard.expand;
	      }
	    };

	    if (trigger) {
	      trigger.componentOptions.listeners = _extends({}, trigger.componentOptions.listeners, listeners);
	      trigger.data.staticClass += staticClass;

	      return trigger;
	    }

	    return createElement('div', {
	      staticClass: staticClass,
	      on: listeners
	    });
	  }
	};

	/***/ }),
	/* 132 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdCard/MdCardExpand/MdCardExpandContent.vue
	var MdCardExpandContent = __webpack_require__(134);
	var MdCardExpandContent_default = /*#__PURE__*/__webpack_require__.n(MdCardExpandContent);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-604296f2","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdCard/MdCardExpand/MdCardExpandContent.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-card-expand-content", style: _vm.contentStyles },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdCardExpand_MdCardExpandContent = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-604296f2", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdCard/MdCardExpand/MdCardExpandContent.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(133)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCardExpandContent_default.a,
	  MdCardExpand_MdCardExpandContent,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCard/MdCardExpand/MdCardExpandContent.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-604296f2", Component.options)
	  } else {
	    hotAPI.reload("data-v-604296f2", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdCard_MdCardExpand_MdCardExpandContent = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 133 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 134 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdCardExpandContent',
	  inject: ['MdCard'],
	  data: function data() {
	    return {
	      marginTop: 0
	    };
	  },
	  computed: {
	    expand: function expand() {
	      return this.MdCard.expand;
	    },
	    contentStyles: function contentStyles() {
	      return {
	        'margin-top': '-' + this.marginTop + 'px',
	        'opacity': this.marginTop === 0 ? 1 : 0
	      };
	    }
	  },
	  watch: {
	    expand: function expand(_expand) {
	      if (!_expand) {
	        this.marginTop = this.$el.children[0].offsetHeight;
	      } else {
	        this.marginTop = 0;
	      }
	    }
	  },
	  mounted: function mounted() {
	    this.marginTop = this.$el.children[0].offsetHeight;
	  }
	};

	/***/ }),
	/* 135 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdCard/MdCardActions/MdCardActions.vue
	var MdCardActions = __webpack_require__(137);
	var MdCardActions_default = /*#__PURE__*/__webpack_require__.n(MdCardActions);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-2894ebc5","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdCard/MdCardActions/MdCardActions.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    {
	      staticClass: "md-card-actions",
	      class: "md-alignment-" + _vm.mdAlignment
	    },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdCardActions_MdCardActions = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-2894ebc5", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdCard/MdCardActions/MdCardActions.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(136)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCardActions_default.a,
	  MdCardActions_MdCardActions,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCard/MdCardActions/MdCardActions.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-2894ebc5", Component.options)
	  } else {
	    hotAPI.reload("data-v-2894ebc5", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdCard_MdCardActions_MdCardActions = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 136 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 137 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var alignments = ['left', 'right', 'space-between'];

	exports.default = {
	  name: 'MdCardActions',
	  props: {
	    mdAlignment: _extends({
	      type: String,
	      default: 'right'
	    }, (0, _MdPropValidator2.default)('md-alignment', alignments))
	  }
	};

	/***/ }),
	/* 138 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdCheckbox = __webpack_require__(139);

	var _MdCheckbox2 = _interopRequireDefault(_MdCheckbox);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdCheckbox2.default.name, _MdCheckbox2.default);
	};

	/***/ }),
	/* 139 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdCheckbox/MdCheckbox.vue
	var MdCheckbox = __webpack_require__(141);
	var MdCheckbox_default = /*#__PURE__*/__webpack_require__.n(MdCheckbox);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-7c2899cf","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdCheckbox/MdCheckbox.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    {
	      staticClass: "md-checkbox",
	      class: [_vm.$mdActiveTheme, _vm.checkClasses]
	    },
	    [
	      _c(
	        "div",
	        {
	          staticClass: "md-checkbox-container",
	          on: {
	            click: function($event) {
	              $event.stopPropagation()
	              _vm.toggleCheck($event)
	            }
	          }
	        },
	        [
	          _c(
	            "md-ripple",
	            {
	              attrs: {
	                "md-centered": "",
	                "md-active": _vm.rippleActive,
	                "md-disabled": _vm.disabled
	              },
	              on: {
	                "update:mdActive": function($event) {
	                  _vm.rippleActive = $event
	                }
	              }
	            },
	            [
	              _c(
	                "input",
	                _vm._b(
	                  { attrs: { type: "checkbox" } },
	                  "input",
	                  {
	                    id: _vm.id,
	                    name: _vm.name,
	                    disabled: _vm.disabled,
	                    required: _vm.required,
	                    value: _vm.value
	                  },
	                  false
	                )
	              )
	            ]
	          )
	        ],
	        1
	      ),
	      _vm._v(" "),
	      _vm.$slots.default
	        ? _c(
	            "label",
	            {
	              staticClass: "md-checkbox-label",
	              attrs: { for: _vm.id },
	              on: {
	                click: function($event) {
	                  $event.preventDefault()
	                  _vm.toggleCheck($event)
	                }
	              }
	            },
	            [_vm._t("default")],
	            2
	          )
	        : _vm._e()
	    ]
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdCheckbox_MdCheckbox = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-7c2899cf", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdCheckbox/MdCheckbox.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(140)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCheckbox_default.a,
	  MdCheckbox_MdCheckbox,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdCheckbox/MdCheckbox.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-7c2899cf", Component.options)
	  } else {
	    hotAPI.reload("data-v-7c2899cf", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdCheckbox_MdCheckbox = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 140 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 141 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdCheckboxMixin = __webpack_require__(33);

	var _MdCheckboxMixin2 = _interopRequireDefault(_MdCheckboxMixin);

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdCheckbox',
	  mixins: [_MdCheckboxMixin2.default],
	  props: {
	    id: {
	      type: String,
	      default: function _default() {
	        return 'md-checkbox-' + (0, _MdUuid2.default)();
	      }
	    }
	  }
	}); //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 142 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdChips = __webpack_require__(143);

	var _MdChips2 = _interopRequireDefault(_MdChips);

	var _MdChip = __webpack_require__(159);

	var _MdChip2 = _interopRequireDefault(_MdChip);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdChips2.default.name, _MdChips2.default);
	  Vue.component(_MdChip2.default.name, _MdChip2.default);
	};

	/***/ }),
	/* 143 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdChips/MdChips.vue
	var MdChips = __webpack_require__(145);
	var MdChips_default = /*#__PURE__*/__webpack_require__.n(MdChips);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-0b3d2a1e","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdChips/MdChips.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-field",
	    { staticClass: "md-chips", class: [_vm.$mdActiveTheme, _vm.chipsClasses] },
	    [
	      !_vm.mdStatic ? _vm._t("default") : _vm._e(),
	      _vm._v(" "),
	      _vm._l(_vm.value, function(chip, key) {
	        return _c(
	          "md-chip",
	          {
	            key: key,
	            attrs: {
	              "md-deletable": !_vm.mdStatic,
	              "md-clickable": !_vm.mdStatic
	            },
	            on: {
	              keydown: function($event) {
	                if (
	                  !("button" in $event) &&
	                  _vm._k($event.keyCode, "enter", 13, $event.key)
	                ) {
	                  return null
	                }
	                _vm.$emit("md-click", chip, key)
	              },
	              "md-delete": function($event) {
	                $event.stopPropagation()
	                _vm.removeChip(chip)
	              }
	            },
	            nativeOn: {
	              click: function($event) {
	                _vm.$emit("md-click", chip, key)
	              }
	            }
	          },
	          [
	            _vm.$scopedSlots["md-chip"]
	              ? _vm._t("md-chip", [_vm._v(_vm._s(chip))], { chip: chip })
	              : [_vm._v(_vm._s(chip))]
	          ],
	          2
	        )
	      }),
	      _vm._v(" "),
	      !_vm.mdStatic && _vm.modelRespectLimit
	        ? _c("md-input", {
	            ref: "input",
	            attrs: {
	              type: _vm.mdInputType,
	              id: _vm.id,
	              placeholder: _vm.mdPlaceholder
	            },
	            on: {
	              keydown: [
	                function($event) {
	                  if (
	                    !("button" in $event) &&
	                    _vm._k($event.keyCode, "enter", 13, $event.key)
	                  ) {
	                    return null
	                  }
	                  _vm.insertChip($event)
	                },
	                function($event) {
	                  if (!("button" in $event) && $event.keyCode !== 8) {
	                    return null
	                  }
	                  _vm.handleBackRemove($event)
	                }
	              ]
	            },
	            model: {
	              value: _vm.inputValue,
	              callback: function($$v) {
	                _vm.inputValue = typeof $$v === "string" ? $$v.trim() : $$v
	              },
	              expression: "inputValue"
	            }
	          })
	        : _vm._e()
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdChips_MdChips = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-0b3d2a1e", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdChips/MdChips.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(144)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdChips_default.a,
	  MdChips_MdChips,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdChips/MdChips.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-0b3d2a1e", Component.options)
	  } else {
	    hotAPI.reload("data-v-0b3d2a1e", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdChips_MdChips = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 144 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 145 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdField = __webpack_require__(20);

	var _MdField2 = _interopRequireDefault(_MdField);

	var _MdInput = __webpack_require__(14);

	var _MdInput2 = _interopRequireDefault(_MdInput);

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdChips',
	  components: {
	    MdField: _MdField2.default,
	    MdInput: _MdInput2.default
	  },
	  props: {
	    value: Array,
	    id: {
	      type: [String, Number],
	      default: function _default() {
	        return 'md-chips-' + (0, _MdUuid2.default)();
	      }
	    },
	    mdInputType: _extends({
	      type: [String, Number]
	    }, (0, _MdPropValidator2.default)('md-input-type', ['email', 'number', 'password', 'search', 'tel', 'text', 'url'])),
	    mdPlaceholder: [String, Number],
	    mdStatic: Boolean,
	    mdLimit: Number
	  },
	  data: function data() {
	    return {
	      inputValue: ''
	    };
	  },
	  computed: {
	    chipsClasses: function chipsClasses() {
	      return {
	        'md-has-value': this.value && this.value.length
	      };
	    },
	    modelRespectLimit: function modelRespectLimit() {
	      return !this.mdLimit || this.value.length < this.mdLimit;
	    }
	  },
	  methods: {
	    insertChip: function insertChip(_ref) {
	      var target = _ref.target;

	      if (!this.inputValue || this.value.includes(this.inputValue) || !this.modelRespectLimit) {
	        return;
	      }
	      this.value.push(this.inputValue);
	      this.$emit('input', this.value);
	      this.$emit('md-insert', this.inputValue);
	      this.inputValue = '';
	    },
	    removeChip: function removeChip(chip) {
	      var _this = this;

	      var index = this.value.indexOf(chip);

	      this.value.splice(index, 1);
	      this.$emit('input', this.value);
	      this.$emit('md-delete', chip, index);
	      this.$nextTick(function () {
	        return _this.$refs.input.$el.focus();
	      });
	    },
	    handleBackRemove: function handleBackRemove() {
	      if (!this.inputValue) {
	        this.removeChip(this.value[this.value.length - 1]);
	      }
	    }
	  }
	});

	/***/ }),
	/* 146 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 147 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdClearIcon = __webpack_require__(34);

	var _MdClearIcon2 = _interopRequireDefault(_MdClearIcon);

	var _MdPasswordOffIcon = __webpack_require__(154);

	var _MdPasswordOffIcon2 = _interopRequireDefault(_MdPasswordOffIcon);

	var _MdPasswordOnIcon = __webpack_require__(156);

	var _MdPasswordOnIcon2 = _interopRequireDefault(_MdPasswordOnIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = new _MdComponent2.default({
	  name: 'MdField',
	  components: {
	    MdClearIcon: _MdClearIcon2.default,
	    MdPasswordOffIcon: _MdPasswordOffIcon2.default,
	    MdPasswordOnIcon: _MdPasswordOnIcon2.default
	  },
	  props: {
	    mdInline: Boolean,
	    mdClearable: Boolean,
	    mdCounter: {
	      type: Boolean,
	      default: true
	    },
	    mdTogglePassword: {
	      type: Boolean,
	      default: true
	    }
	  },
	  data: function data() {
	    return {
	      showPassword: false,
	      MdField: {
	        value: null,
	        focused: false,
	        highlighted: false,
	        disabled: false,
	        required: false,
	        placeholder: false,
	        textarea: false,
	        autogrow: false,
	        maxlength: null,
	        counter: null,
	        password: null,
	        togglePassword: false,
	        clear: false,
	        file: false
	      }
	    };
	  },
	  provide: function provide() {
	    return {
	      MdField: this.MdField
	    };
	  },

	  computed: {
	    stringValue: function stringValue() {
	      return this.MdField.value && this.MdField.value.toString();
	    },
	    hasCounter: function hasCounter() {
	      return this.mdCounter && (this.MdField.maxlength || this.MdField.counter);
	    },
	    hasPasswordToggle: function hasPasswordToggle() {
	      return this.mdTogglePassword && this.MdField.password;
	    },
	    hasValue: function hasValue() {
	      return this.stringValue && this.stringValue.length > 0;
	    },
	    valueLength: function valueLength() {
	      if (this.stringValue) {
	        return this.stringValue.length;
	      }

	      return 0;
	    },
	    fieldClasses: function fieldClasses() {
	      return {
	        'md-inline': this.mdInline,
	        'md-clearable': this.mdClearable,
	        'md-focused': this.MdField.focused,
	        'md-highlight': this.MdField.highlighted,
	        'md-disabled': this.MdField.disabled,
	        'md-required': this.MdField.required,
	        'md-has-value': this.hasValue,
	        'md-has-placeholder': this.MdField.placeholder,
	        'md-has-textarea': this.MdField.textarea,
	        'md-has-password': this.MdField.password,
	        'md-has-file': this.MdField.file,
	        'md-has-select': this.MdField.select,
	        'md-autogrow': this.MdField.autogrow
	      };
	    }
	  },
	  methods: {
	    clearInput: function () {
	      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                this.MdField.clear = true;
	                _context.next = 3;
	                return this.$nextTick();

	              case 3:
	                this.MdField.clear = false;

	              case 4:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function clearInput() {
	        return _ref.apply(this, arguments);
	      }

	      return clearInput;
	    }(),
	    togglePassword: function () {
	      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
	        return regeneratorRuntime.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                this.MdField.togglePassword = !this.MdField.togglePassword;

	              case 1:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, this);
	      }));

	      function togglePassword() {
	        return _ref2.apply(this, arguments);
	      }

	      return togglePassword;
	    }(),
	    onBlur: function onBlur() {
	      this.MdField.highlighted = false;
	    }
	  }
	});

	/***/ }),
	/* 148 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdClearIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 149 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 150 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdSvgLoader = __webpack_require__(151);

	var _MdSvgLoader2 = _interopRequireDefault(_MdSvgLoader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//
	//
	//
	//
	//
	//
	//

	exports.default = new _MdComponent2.default({
	  name: 'MdIcon',
	  components: {
	    MdSvgLoader: _MdSvgLoader2.default
	  },
	  props: {
	    mdSrc: String
	  }
	});

	/***/ }),
	/* 151 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdSvgLoader/MdSvgLoader.vue
	var MdSvgLoader = __webpack_require__(153);
	var MdSvgLoader_default = /*#__PURE__*/__webpack_require__.n(MdSvgLoader);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-0db3655e","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdSvgLoader/MdSvgLoader.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c("i", {
	    staticClass: "md-svg-loader",
	    domProps: { innerHTML: _vm._s(_vm.html) }
	  })
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSvgLoader_MdSvgLoader = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-0db3655e", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdSvgLoader/MdSvgLoader.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(152)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdSvgLoader_default.a,
	  MdSvgLoader_MdSvgLoader,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdSvgLoader/MdSvgLoader.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-0db3655e", Component.options)
	  } else {
	    hotAPI.reload("data-v-0db3655e", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdSvgLoader_MdSvgLoader = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 152 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 153 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	//
	//
	//
	//

	var mdSVGStore = {};

	exports.default = {
	  name: 'MdSVGLoader',
	  props: {
	    mdSrc: {
	      type: String,
	      required: true
	    }
	  },
	  data: function data() {
	    return {
	      html: null,
	      error: null
	    };
	  },
	  watch: {
	    mdSrc: function mdSrc() {
	      this.html = null;
	      this.loadSVG();
	    }
	  },
	  methods: {
	    isSVG: function isSVG(mimetype) {
	      return mimetype.indexOf('svg') >= 0;
	    },
	    setHtml: function () {
	      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(value) {
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.next = 2;
	                return mdSVGStore[this.mdSrc];

	              case 2:
	                this.html = _context.sent;
	                _context.next = 5;
	                return this.$nextTick();

	              case 5:

	                this.$emit('md-loaded');

	              case 6:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function setHtml(_x) {
	        return _ref.apply(this, arguments);
	      }

	      return setHtml;
	    }(),
	    unexpectedError: function unexpectedError(reject) {
	      this.error = 'Something bad happened trying to fetch ' + this.mdSrc + '.';
	      reject(this.error);
	    },
	    loadSVG: function loadSVG() {
	      var _this = this;

	      if (!mdSVGStore.hasOwnProperty(this.mdSrc)) {
	        mdSVGStore[this.mdSrc] = new Promise(function (resolve, reject) {
	          var request = new window.XMLHttpRequest();

	          request.open('GET', _this.mdSrc, true);

	          request.onload = function () {
	            var mimetype = request.getResponseHeader('content-type');

	            if (request.status === 200) {
	              if (_this.isSVG(mimetype)) {
	                resolve(request.response);
	                _this.setHtml();
	              } else {
	                _this.error = 'The file ' + _this.mdSrc + ' is not a valid SVG.';
	                reject(_this.error);
	              }
	            } else if (request.status >= 400 && request.status < 500) {
	              _this.error = 'The file ' + _this.mdSrc + ' do not exists.';
	              reject(_this.error);
	            } else {
	              _this.unexpectedError(reject);
	            }
	          };

	          request.onerror = function () {
	            return _this.unexpectedError(reject);
	          };
	          request.onabort = function () {
	            return _this.unexpectedError(reject);
	          };
	          request.send();
	        });
	      } else {
	        this.setHtml();
	      }
	    }
	  },
	  mounted: function mounted() {
	    this.loadSVG();
	  }
	};

	/***/ }),
	/* 154 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdPasswordOffIcon.vue
	var MdPasswordOffIcon = __webpack_require__(155);
	var MdPasswordOffIcon_default = /*#__PURE__*/__webpack_require__.n(MdPasswordOffIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-4113206a","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdPasswordOffIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(0)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [
	      _c(
	        "svg",
	        {
	          attrs: {
	            height: "24",
	            viewBox: "0 0 24 24",
	            width: "24",
	            xmlns: "http://www.w3.org/2000/svg"
	          }
	        },
	        [
	          _c("path", {
	            attrs: {
	              d: "M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z",
	              fill: "none"
	            }
	          }),
	          _vm._v(" "),
	          _c("path", {
	            attrs: {
	              d:
	                "M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"
	            }
	          })
	        ]
	      )
	    ])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdPasswordOffIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-4113206a", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdPasswordOffIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdPasswordOffIcon_default.a,
	  icons_MdPasswordOffIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdPasswordOffIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-4113206a", Component.options)
	  } else {
	    hotAPI.reload("data-v-4113206a", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdPasswordOffIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 155 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdPasswordOffIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 156 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdPasswordOnIcon.vue
	var MdPasswordOnIcon = __webpack_require__(157);
	var MdPasswordOnIcon_default = /*#__PURE__*/__webpack_require__.n(MdPasswordOnIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-71ec8df4","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdPasswordOnIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(0)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [
	      _c(
	        "svg",
	        {
	          attrs: {
	            height: "24",
	            viewBox: "0 0 24 24",
	            width: "24",
	            xmlns: "http://www.w3.org/2000/svg"
	          }
	        },
	        [
	          _c("path", { attrs: { d: "M0 0h24v24H0z", fill: "none" } }),
	          _vm._v(" "),
	          _c("path", {
	            attrs: {
	              d:
	                "M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
	            }
	          })
	        ]
	      )
	    ])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdPasswordOnIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-71ec8df4", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdPasswordOnIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdPasswordOnIcon_default.a,
	  icons_MdPasswordOnIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdPasswordOnIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-71ec8df4", Component.options)
	  } else {
	    hotAPI.reload("data-v-71ec8df4", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdPasswordOnIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 157 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdPasswordOnIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 158 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	var _MdFieldMixin = __webpack_require__(15);

	var _MdFieldMixin2 = _interopRequireDefault(_MdFieldMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdInput',
	  mixins: [_MdFieldMixin2.default],
	  inject: ['MdField'],
	  props: {
	    id: {
	      type: String,
	      default: function _default() {
	        return 'md-input-' + (0, _MdUuid2.default)();
	      }
	    },
	    type: {
	      type: String,
	      default: 'text'
	    }
	  },
	  computed: {
	    toggleType: function toggleType() {
	      return this.MdField.togglePassword;
	    },
	    isPassword: function isPassword() {
	      return this.type === 'password';
	    },
	    listeners: function listeners() {
	      var _this = this;

	      return _extends({}, this.$listeners, {
	        input: function input(event) {
	          return _this.$emit('input', event.target.value);
	        }
	      });
	    }
	  },
	  watch: {
	    type: function type(_type) {
	      this.setPassword(this.isPassword);
	    },
	    toggleType: function toggleType(toggle) {
	      if (toggle) {
	        this.setTypeText();
	      } else {
	        this.setTypePassword();
	      }
	    }
	  },
	  methods: {
	    setPassword: function setPassword(state) {
	      this.MdField.password = state;
	      this.MdField.togglePassword = false;
	    },
	    setTypePassword: function setTypePassword() {
	      this.$el.type = 'password';
	    },
	    setTypeText: function setTypeText() {
	      this.$el.type = 'text';
	    }
	  },
	  created: function created() {
	    this.setPassword(this.isPassword);
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.setPassword(false);
	  }
	});

	/***/ }),
	/* 159 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdChips/MdChip.vue
	var MdChip = __webpack_require__(161);
	var MdChip_default = /*#__PURE__*/__webpack_require__.n(MdChip);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-84ba771c","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdChips/MdChip.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c("transition", { attrs: { name: "md-chip", appear: "" } }, [
	    _c(
	      "div",
	      _vm._g(
	        {
	          staticClass: "md-chip",
	          class: [_vm.$mdActiveTheme, _vm.chipClasses],
	          attrs: { tabindex: "0" }
	        },
	        _vm.$listeners
	      ),
	      [
	        _vm.mdClickable || !_vm.mdRipple
	          ? _c(
	              "md-ripple",
	              { attrs: { "md-disabled": _vm.mdDisabled } },
	              [_vm._t("default")],
	              2
	            )
	          : _vm._t("default"),
	        _vm._v(" "),
	        _c(
	          "transition",
	          { attrs: { name: "md-input-action", appear: "" } },
	          [
	            _vm.mdDeletable
	              ? _c(
	                  "md-button",
	                  {
	                    staticClass:
	                      "md-icon-button md-dense md-input-action md-clear",
	                    attrs: { tabindex: "-1" },
	                    on: {
	                      click: function($event) {
	                        _vm.$emit("md-delete", $event)
	                      }
	                    }
	                  },
	                  [_c("md-clear-icon")],
	                  1
	                )
	              : _vm._e()
	          ],
	          1
	        )
	      ],
	      2
	    )
	  ])
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdChips_MdChip = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-84ba771c", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdChips/MdChip.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(160)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdChip_default.a,
	  MdChips_MdChip,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdChips/MdChip.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-84ba771c", Component.options)
	  } else {
	    hotAPI.reload("data-v-84ba771c", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdChips_MdChip = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 160 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 161 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdFocused = __webpack_require__(32);

	var _MdFocused2 = _interopRequireDefault(_MdFocused);

	var _MdRipple = __webpack_require__(19);

	var _MdRipple2 = _interopRequireDefault(_MdRipple);

	var _MdClearIcon = __webpack_require__(34);

	var _MdClearIcon2 = _interopRequireDefault(_MdClearIcon);

	var _MdButton = __webpack_require__(13);

	var _MdButton2 = _interopRequireDefault(_MdButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdChip',
	  components: {
	    MdButton: _MdButton2.default,
	    MdClearIcon: _MdClearIcon2.default
	  },
	  mixins: [_MdFocused2.default, _MdRipple2.default],
	  props: {
	    mdDisabled: Boolean,
	    mdDeletable: Boolean,
	    mdClickable: Boolean
	  },
	  computed: {
	    chipClasses: function chipClasses() {
	      return {
	        'md-disabled': this.mdDisabled,
	        'md-deletable': this.mdDeletable,
	        'md-clickable': this.mdClickable,
	        'md-focused': this.mdHasFocus
	      };
	    }
	  }
	}); //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 162 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdContent = __webpack_require__(35);

	var _MdContent2 = _interopRequireDefault(_MdContent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdContent2.default.name, _MdContent2.default);
	};

	/***/ }),
	/* 163 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdContent',
	  props: {
	    mdTag: {
	      type: String,
	      default: 'div'
	    }
	  },
	  render: function render(createElement) {
	    return createElement(this.mdTag, {
	      staticClass: 'md-content',
	      class: [this.$mdActiveTheme],
	      attrs: this.$attrs,
	      on: this.$listeners
	    }, this.$slots.default);
	  }
	});

	/***/ }),
	/* 164 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdDatepicker = __webpack_require__(165);

	var _MdDatepicker2 = _interopRequireDefault(_MdDatepicker);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdDatepicker2.default.name, _MdDatepicker2.default);
	};

	/***/ }),
	/* 165 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdDatepicker/MdDatepicker.vue
	var MdDatepicker = __webpack_require__(167);
	var MdDatepicker_default = /*#__PURE__*/__webpack_require__.n(MdDatepicker);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-37fe792f","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdDatepicker/MdDatepicker.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-field",
	    { staticClass: "md-datepicker" },
	    [
	      _c("md-date-icon", {
	        staticClass: "md-date-icon",
	        nativeOn: {
	          click: function($event) {
	            _vm.toggleDialog($event)
	          }
	        }
	      }),
	      _vm._v(" "),
	      _c("md-input", {
	        ref: "input",
	        attrs: { type: "date", pattern: "[0-9]{4}-[0-9]{2}-[0-9]{2}" },
	        nativeOn: {
	          focus: function($event) {
	            _vm.onFocus($event)
	          }
	        },
	        model: {
	          value: _vm.modelDate,
	          callback: function($$v) {
	            _vm.modelDate = $$v
	          },
	          expression: "modelDate"
	        }
	      }),
	      _vm._v(" "),
	      _vm._t("default"),
	      _vm._v(" "),
	      _c(
	        "keep-alive",
	        [
	          _vm.showDialog
	            ? _c("md-datepicker-dialog", {
	                attrs: {
	                  "md-date": _vm.selectedDate,
	                  "md-disabled-dates": _vm.mdDisabledDates
	                },
	                on: {
	                  "update:mdDate": function($event) {
	                    _vm.selectedDate = $event
	                  },
	                  "md-closed": _vm.toggleDialog
	                }
	              })
	            : _vm._e()
	        ],
	        1
	      ),
	      _vm._v(" "),
	      _c("md-overlay", {
	        staticClass: "md-datepicker-overlay",
	        attrs: { "md-fixed": "", "md-active": _vm.showDialog },
	        on: { click: _vm.toggleDialog }
	      })
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdDatepicker_MdDatepicker = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-37fe792f", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdDatepicker/MdDatepicker.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(166)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDatepicker_default.a,
	  MdDatepicker_MdDatepicker,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdDatepicker/MdDatepicker.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-37fe792f", Component.options)
	  } else {
	    hotAPI.reload("data-v-37fe792f", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdDatepicker_MdDatepicker = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 166 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 167 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _vue = __webpack_require__(7);

	var _vue2 = _interopRequireDefault(_vue);

	var _isFirefox = __webpack_require__(168);

	var _isFirefox2 = _interopRequireDefault(_isFirefox);

	var _format = __webpack_require__(169);

	var _format2 = _interopRequireDefault(_format);

	var _parse = __webpack_require__(3);

	var _parse2 = _interopRequireDefault(_parse);

	var _is_valid = __webpack_require__(38);

	var _is_valid2 = _interopRequireDefault(_is_valid);

	var _MdOverlay = __webpack_require__(23);

	var _MdOverlay2 = _interopRequireDefault(_MdOverlay);

	var _MdDatepickerDialog = __webpack_require__(182);

	var _MdDatepickerDialog2 = _interopRequireDefault(_MdDatepickerDialog);

	var _MdDateIcon = __webpack_require__(206);

	var _MdDateIcon2 = _interopRequireDefault(_MdDateIcon);

	var _MdField = __webpack_require__(20);

	var _MdField2 = _interopRequireDefault(_MdField);

	var _MdInput = __webpack_require__(14);

	var _MdInput2 = _interopRequireDefault(_MdInput);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdDatepicker',
	  components: {
	    MdOverlay: _MdOverlay2.default,
	    MdDateIcon: _MdDateIcon2.default,
	    MdField: _MdField2.default,
	    MdInput: _MdInput2.default,
	    MdDatepickerDialog: _MdDatepickerDialog2.default
	  },
	  props: {
	    value: [String, Date],
	    mdDisabledDates: [Array, Function],
	    mdOpenOnFocus: {
	      type: Boolean,
	      default: true
	    }
	  },
	  data: function data() {
	    return {
	      showDialog: false,
	      modelDate: null,
	      selectedDate: null
	    };
	  },
	  watch: {
	    selectedDate: function selectedDate(_selectedDate) {
	      if (_selectedDate) {
	        this.modelDate = this.dateToHTMLString(_selectedDate);
	        this.$emit('input', _selectedDate);
	      }
	    },
	    value: function value() {
	      if (this.value) {
	        this.modelDate = this.dateToHTMLString(this.value);
	      }
	    },
	    modelDate: function modelDate(value) {
	      if (value) {
	        var parsedDate = (0, _parse2.default)(value);

	        if ((0, _is_valid2.default)(parsedDate)) {
	          this.selectedDate = parsedDate;
	        }
	      }
	    }
	  },
	  methods: {
	    toggleDialog: function toggleDialog() {
	      if (!_isFirefox2.default) {
	        this.showDialog = !this.showDialog;
	      } else {
	        this.$refs.input.$el.click();
	      }
	    },
	    onFocus: function onFocus() {
	      if (this.mdOpenOnFocus) {
	        this.toggleDialog();
	      }
	    },
	    dateToHTMLString: function dateToHTMLString(date) {
	      if (date) {
	        var formattedDate = null;

	        try {
	          formattedDate = (0, _format2.default)(date, 'YYYY-MM-DD');
	        } catch (error) {
	          _vue2.default.util.warn('The datepicker value is not a valid date. Given value: ' + date + '.', this);
	        }

	        return formattedDate;
	      }
	    }
	  },
	  created: function created() {
	    this.modelDate = this.dateToHTMLString(this.value);
	    this.selectedDate = this.value;
	  }
	};

	/***/ }),
	/* 168 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	module.exports = typeof navigator !== 'undefined' && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);


	/***/ }),
	/* 169 */
	/***/ (function(module, exports, __webpack_require__) {

	var getDayOfYear = __webpack_require__(170)
	var getISOWeek = __webpack_require__(173)
	var getISOYear = __webpack_require__(37)
	var parse = __webpack_require__(3)
	var isValid = __webpack_require__(38)
	var enLocale = __webpack_require__(176)

	/**
	 * @category Common Helpers
	 * @summary Format the date.
	 *
	 * @description
	 * Return the formatted date string in the given format.
	 *
	 * Accepted tokens:
	 * | Unit                    | Token | Result examples                  |
	 * |-------------------------|-------|----------------------------------|
	 * | Month                   | M     | 1, 2, ..., 12                    |
	 * |                         | Mo    | 1st, 2nd, ..., 12th              |
	 * |                         | MM    | 01, 02, ..., 12                  |
	 * |                         | MMM   | Jan, Feb, ..., Dec               |
	 * |                         | MMMM  | January, February, ..., December |
	 * | Quarter                 | Q     | 1, 2, 3, 4                       |
	 * |                         | Qo    | 1st, 2nd, 3rd, 4th               |
	 * | Day of month            | D     | 1, 2, ..., 31                    |
	 * |                         | Do    | 1st, 2nd, ..., 31st              |
	 * |                         | DD    | 01, 02, ..., 31                  |
	 * | Day of year             | DDD   | 1, 2, ..., 366                   |
	 * |                         | DDDo  | 1st, 2nd, ..., 366th             |
	 * |                         | DDDD  | 001, 002, ..., 366               |
	 * | Day of week             | d     | 0, 1, ..., 6                     |
	 * |                         | do    | 0th, 1st, ..., 6th               |
	 * |                         | dd    | Su, Mo, ..., Sa                  |
	 * |                         | ddd   | Sun, Mon, ..., Sat               |
	 * |                         | dddd  | Sunday, Monday, ..., Saturday    |
	 * | Day of ISO week         | E     | 1, 2, ..., 7                     |
	 * | ISO week                | W     | 1, 2, ..., 53                    |
	 * |                         | Wo    | 1st, 2nd, ..., 53rd              |
	 * |                         | WW    | 01, 02, ..., 53                  |
	 * | Year                    | YY    | 00, 01, ..., 99                  |
	 * |                         | YYYY  | 1900, 1901, ..., 2099            |
	 * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |
	 * |                         | GGGG  | 1900, 1901, ..., 2099            |
	 * | AM/PM                   | A     | AM, PM                           |
	 * |                         | a     | am, pm                           |
	 * |                         | aa    | a.m., p.m.                       |
	 * | Hour                    | H     | 0, 1, ... 23                     |
	 * |                         | HH    | 00, 01, ... 23                   |
	 * |                         | h     | 1, 2, ..., 12                    |
	 * |                         | hh    | 01, 02, ..., 12                  |
	 * | Minute                  | m     | 0, 1, ..., 59                    |
	 * |                         | mm    | 00, 01, ..., 59                  |
	 * | Second                  | s     | 0, 1, ..., 59                    |
	 * |                         | ss    | 00, 01, ..., 59                  |
	 * | 1/10 of second          | S     | 0, 1, ..., 9                     |
	 * | 1/100 of second         | SS    | 00, 01, ..., 99                  |
	 * | Millisecond             | SSS   | 000, 001, ..., 999               |
	 * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |
	 * |                         | ZZ    | -0100, +0000, ..., +1200         |
	 * | Seconds timestamp       | X     | 512969520                        |
	 * | Milliseconds timestamp  | x     | 512969520900                     |
	 *
	 * The characters wrapped in square brackets are escaped.
	 *
	 * The result may vary by locale.
	 *
	 * @param {Date|String|Number} date - the original date
	 * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens
	 * @param {Object} [options] - the object with options
	 * @param {Object} [options.locale=enLocale] - the locale object
	 * @returns {String} the formatted date string
	 *
	 * @example
	 * // Represent 11 February 2014 in middle-endian format:
	 * var result = format(
	 *   new Date(2014, 1, 11),
	 *   'MM/DD/YYYY'
	 * )
	 * //=> '02/11/2014'
	 *
	 * @example
	 * // Represent 2 July 2014 in Esperanto:
	 * var eoLocale = require('date-fns/locale/eo')
	 * var result = format(
	 *   new Date(2014, 6, 2),
	 *   'Do [de] MMMM YYYY',
	 *   {locale: eoLocale}
	 * )
	 * //=> '2-a de julio 2014'
	 */
	function format (dirtyDate, dirtyFormatStr, dirtyOptions) {
	  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ'
	  var options = dirtyOptions || {}

	  var locale = options.locale
	  var localeFormatters = enLocale.format.formatters
	  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp
	  if (locale && locale.format && locale.format.formatters) {
	    localeFormatters = locale.format.formatters

	    if (locale.format.formattingTokensRegExp) {
	      formattingTokensRegExp = locale.format.formattingTokensRegExp
	    }
	  }

	  var date = parse(dirtyDate)

	  if (!isValid(date)) {
	    return 'Invalid Date'
	  }

	  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp)

	  return formatFn(date)
	}

	var formatters = {
	  // Month: 1, 2, ..., 12
	  'M': function (date) {
	    return date.getMonth() + 1
	  },

	  // Month: 01, 02, ..., 12
	  'MM': function (date) {
	    return addLeadingZeros(date.getMonth() + 1, 2)
	  },

	  // Quarter: 1, 2, 3, 4
	  'Q': function (date) {
	    return Math.ceil((date.getMonth() + 1) / 3)
	  },

	  // Day of month: 1, 2, ..., 31
	  'D': function (date) {
	    return date.getDate()
	  },

	  // Day of month: 01, 02, ..., 31
	  'DD': function (date) {
	    return addLeadingZeros(date.getDate(), 2)
	  },

	  // Day of year: 1, 2, ..., 366
	  'DDD': function (date) {
	    return getDayOfYear(date)
	  },

	  // Day of year: 001, 002, ..., 366
	  'DDDD': function (date) {
	    return addLeadingZeros(getDayOfYear(date), 3)
	  },

	  // Day of week: 0, 1, ..., 6
	  'd': function (date) {
	    return date.getDay()
	  },

	  // Day of ISO week: 1, 2, ..., 7
	  'E': function (date) {
	    return date.getDay() || 7
	  },

	  // ISO week: 1, 2, ..., 53
	  'W': function (date) {
	    return getISOWeek(date)
	  },

	  // ISO week: 01, 02, ..., 53
	  'WW': function (date) {
	    return addLeadingZeros(getISOWeek(date), 2)
	  },

	  // Year: 00, 01, ..., 99
	  'YY': function (date) {
	    return addLeadingZeros(date.getFullYear(), 4).substr(2)
	  },

	  // Year: 1900, 1901, ..., 2099
	  'YYYY': function (date) {
	    return addLeadingZeros(date.getFullYear(), 4)
	  },

	  // ISO week-numbering year: 00, 01, ..., 99
	  'GG': function (date) {
	    return String(getISOYear(date)).substr(2)
	  },

	  // ISO week-numbering year: 1900, 1901, ..., 2099
	  'GGGG': function (date) {
	    return getISOYear(date)
	  },

	  // Hour: 0, 1, ... 23
	  'H': function (date) {
	    return date.getHours()
	  },

	  // Hour: 00, 01, ..., 23
	  'HH': function (date) {
	    return addLeadingZeros(date.getHours(), 2)
	  },

	  // Hour: 1, 2, ..., 12
	  'h': function (date) {
	    var hours = date.getHours()
	    if (hours === 0) {
	      return 12
	    } else if (hours > 12) {
	      return hours % 12
	    } else {
	      return hours
	    }
	  },

	  // Hour: 01, 02, ..., 12
	  'hh': function (date) {
	    return addLeadingZeros(formatters['h'](date), 2)
	  },

	  // Minute: 0, 1, ..., 59
	  'm': function (date) {
	    return date.getMinutes()
	  },

	  // Minute: 00, 01, ..., 59
	  'mm': function (date) {
	    return addLeadingZeros(date.getMinutes(), 2)
	  },

	  // Second: 0, 1, ..., 59
	  's': function (date) {
	    return date.getSeconds()
	  },

	  // Second: 00, 01, ..., 59
	  'ss': function (date) {
	    return addLeadingZeros(date.getSeconds(), 2)
	  },

	  // 1/10 of second: 0, 1, ..., 9
	  'S': function (date) {
	    return Math.floor(date.getMilliseconds() / 100)
	  },

	  // 1/100 of second: 00, 01, ..., 99
	  'SS': function (date) {
	    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2)
	  },

	  // Millisecond: 000, 001, ..., 999
	  'SSS': function (date) {
	    return addLeadingZeros(date.getMilliseconds(), 3)
	  },

	  // Timezone: -01:00, +00:00, ... +12:00
	  'Z': function (date) {
	    return formatTimezone(date.getTimezoneOffset(), ':')
	  },

	  // Timezone: -0100, +0000, ... +1200
	  'ZZ': function (date) {
	    return formatTimezone(date.getTimezoneOffset())
	  },

	  // Seconds timestamp: 512969520
	  'X': function (date) {
	    return Math.floor(date.getTime() / 1000)
	  },

	  // Milliseconds timestamp: 512969520900
	  'x': function (date) {
	    return date.getTime()
	  }
	}

	function buildFormatFn (formatStr, localeFormatters, formattingTokensRegExp) {
	  var array = formatStr.match(formattingTokensRegExp)
	  var length = array.length

	  var i
	  var formatter
	  for (i = 0; i < length; i++) {
	    formatter = localeFormatters[array[i]] || formatters[array[i]]
	    if (formatter) {
	      array[i] = formatter
	    } else {
	      array[i] = removeFormattingTokens(array[i])
	    }
	  }

	  return function (date) {
	    var output = ''
	    for (var i = 0; i < length; i++) {
	      if (array[i] instanceof Function) {
	        output += array[i](date, formatters)
	      } else {
	        output += array[i]
	      }
	    }
	    return output
	  }
	}

	function removeFormattingTokens (input) {
	  if (input.match(/\[[\s\S]/)) {
	    return input.replace(/^\[|]$/g, '')
	  }
	  return input.replace(/\\/g, '')
	}

	function formatTimezone (offset, delimeter) {
	  delimeter = delimeter || ''
	  var sign = offset > 0 ? '-' : '+'
	  var absOffset = Math.abs(offset)
	  var hours = Math.floor(absOffset / 60)
	  var minutes = absOffset % 60
	  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2)
	}

	function addLeadingZeros (number, targetLength) {
	  var output = Math.abs(number).toString()
	  while (output.length < targetLength) {
	    output = '0' + output
	  }
	  return output
	}

	module.exports = format


	/***/ }),
	/* 170 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)
	var startOfYear = __webpack_require__(171)
	var differenceInCalendarDays = __webpack_require__(172)

	/**
	 * @category Day Helpers
	 * @summary Get the day of the year of the given date.
	 *
	 * @description
	 * Get the day of the year of the given date.
	 *
	 * @param {Date|String|Number} date - the given date
	 * @returns {Number} the day of year
	 *
	 * @example
	 * // Which day of the year is 2 July 2014?
	 * var result = getDayOfYear(new Date(2014, 6, 2))
	 * //=> 183
	 */
	function getDayOfYear (dirtyDate) {
	  var date = parse(dirtyDate)
	  var diff = differenceInCalendarDays(date, startOfYear(date))
	  var dayOfYear = diff + 1
	  return dayOfYear
	}

	module.exports = getDayOfYear


	/***/ }),
	/* 171 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)

	/**
	 * @category Year Helpers
	 * @summary Return the start of a year for the given date.
	 *
	 * @description
	 * Return the start of a year for the given date.
	 * The result will be in the local timezone.
	 *
	 * @param {Date|String|Number} date - the original date
	 * @returns {Date} the start of a year
	 *
	 * @example
	 * // The start of a year for 2 September 2014 11:55:00:
	 * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
	 * //=> Wed Jan 01 2014 00:00:00
	 */
	function startOfYear (dirtyDate) {
	  var cleanDate = parse(dirtyDate)
	  var date = new Date(0)
	  date.setFullYear(cleanDate.getFullYear(), 0, 1)
	  date.setHours(0, 0, 0, 0)
	  return date
	}

	module.exports = startOfYear


	/***/ }),
	/* 172 */
	/***/ (function(module, exports, __webpack_require__) {

	var startOfDay = __webpack_require__(21)

	var MILLISECONDS_IN_MINUTE = 60000
	var MILLISECONDS_IN_DAY = 86400000

	/**
	 * @category Day Helpers
	 * @summary Get the number of calendar days between the given dates.
	 *
	 * @description
	 * Get the number of calendar days between the given dates.
	 *
	 * @param {Date|String|Number} dateLeft - the later date
	 * @param {Date|String|Number} dateRight - the earlier date
	 * @returns {Number} the number of calendar days
	 *
	 * @example
	 * // How many calendar days are between
	 * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
	 * var result = differenceInCalendarDays(
	 *   new Date(2012, 6, 2, 0, 0),
	 *   new Date(2011, 6, 2, 23, 0)
	 * )
	 * //=> 366
	 */
	function differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {
	  var startOfDayLeft = startOfDay(dirtyDateLeft)
	  var startOfDayRight = startOfDay(dirtyDateRight)

	  var timestampLeft = startOfDayLeft.getTime() -
	    startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE
	  var timestampRight = startOfDayRight.getTime() -
	    startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE

	  // Round the number of days to the nearest integer
	  // because the number of milliseconds in a day is not constant
	  // (e.g. it's different in the day of the daylight saving time clock shift)
	  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY)
	}

	module.exports = differenceInCalendarDays


	/***/ }),
	/* 173 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)
	var startOfISOWeek = __webpack_require__(22)
	var startOfISOYear = __webpack_require__(175)

	var MILLISECONDS_IN_WEEK = 604800000

	/**
	 * @category ISO Week Helpers
	 * @summary Get the ISO week of the given date.
	 *
	 * @description
	 * Get the ISO week of the given date.
	 *
	 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
	 *
	 * @param {Date|String|Number} date - the given date
	 * @returns {Number} the ISO week
	 *
	 * @example
	 * // Which week of the ISO-week numbering year is 2 January 2005?
	 * var result = getISOWeek(new Date(2005, 0, 2))
	 * //=> 53
	 */
	function getISOWeek (dirtyDate) {
	  var date = parse(dirtyDate)
	  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime()

	  // Round the number of days to the nearest integer
	  // because the number of milliseconds in a week is not constant
	  // (e.g. it's different in the week of the daylight saving time clock shift)
	  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1
	}

	module.exports = getISOWeek


	/***/ }),
	/* 174 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)

	/**
	 * @category Week Helpers
	 * @summary Return the start of a week for the given date.
	 *
	 * @description
	 * Return the start of a week for the given date.
	 * The result will be in the local timezone.
	 *
	 * @param {Date|String|Number} date - the original date
	 * @param {Object} [options] - the object with options
	 * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
	 * @returns {Date} the start of a week
	 *
	 * @example
	 * // The start of a week for 2 September 2014 11:55:00:
	 * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
	 * //=> Sun Aug 31 2014 00:00:00
	 *
	 * @example
	 * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
	 * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})
	 * //=> Mon Sep 01 2014 00:00:00
	 */
	function startOfWeek (dirtyDate, dirtyOptions) {
	  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0

	  var date = parse(dirtyDate)
	  var day = date.getDay()
	  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn

	  date.setDate(date.getDate() - diff)
	  date.setHours(0, 0, 0, 0)
	  return date
	}

	module.exports = startOfWeek


	/***/ }),
	/* 175 */
	/***/ (function(module, exports, __webpack_require__) {

	var getISOYear = __webpack_require__(37)
	var startOfISOWeek = __webpack_require__(22)

	/**
	 * @category ISO Week-Numbering Year Helpers
	 * @summary Return the start of an ISO week-numbering year for the given date.
	 *
	 * @description
	 * Return the start of an ISO week-numbering year,
	 * which always starts 3 days before the year's first Thursday.
	 * The result will be in the local timezone.
	 *
	 * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
	 *
	 * @param {Date|String|Number} date - the original date
	 * @returns {Date} the start of an ISO year
	 *
	 * @example
	 * // The start of an ISO week-numbering year for 2 July 2005:
	 * var result = startOfISOYear(new Date(2005, 6, 2))
	 * //=> Mon Jan 03 2005 00:00:00
	 */
	function startOfISOYear (dirtyDate) {
	  var year = getISOYear(dirtyDate)
	  var fourthOfJanuary = new Date(0)
	  fourthOfJanuary.setFullYear(year, 0, 4)
	  fourthOfJanuary.setHours(0, 0, 0, 0)
	  var date = startOfISOWeek(fourthOfJanuary)
	  return date
	}

	module.exports = startOfISOYear


	/***/ }),
	/* 176 */
	/***/ (function(module, exports, __webpack_require__) {

	var buildDistanceInWordsLocale = __webpack_require__(177)
	var buildFormatLocale = __webpack_require__(178)

	/**
	 * @category Locales
	 * @summary English locale.
	 */
	module.exports = {
	  distanceInWords: buildDistanceInWordsLocale(),
	  format: buildFormatLocale()
	}


	/***/ }),
	/* 177 */
	/***/ (function(module, exports) {

	function buildDistanceInWordsLocale () {
	  var distanceInWordsLocale = {
	    lessThanXSeconds: {
	      one: 'less than a second',
	      other: 'less than {{count}} seconds'
	    },

	    xSeconds: {
	      one: '1 second',
	      other: '{{count}} seconds'
	    },

	    halfAMinute: 'half a minute',

	    lessThanXMinutes: {
	      one: 'less than a minute',
	      other: 'less than {{count}} minutes'
	    },

	    xMinutes: {
	      one: '1 minute',
	      other: '{{count}} minutes'
	    },

	    aboutXHours: {
	      one: 'about 1 hour',
	      other: 'about {{count}} hours'
	    },

	    xHours: {
	      one: '1 hour',
	      other: '{{count}} hours'
	    },

	    xDays: {
	      one: '1 day',
	      other: '{{count}} days'
	    },

	    aboutXMonths: {
	      one: 'about 1 month',
	      other: 'about {{count}} months'
	    },

	    xMonths: {
	      one: '1 month',
	      other: '{{count}} months'
	    },

	    aboutXYears: {
	      one: 'about 1 year',
	      other: 'about {{count}} years'
	    },

	    xYears: {
	      one: '1 year',
	      other: '{{count}} years'
	    },

	    overXYears: {
	      one: 'over 1 year',
	      other: 'over {{count}} years'
	    },

	    almostXYears: {
	      one: 'almost 1 year',
	      other: 'almost {{count}} years'
	    }
	  }

	  function localize (token, count, options) {
	    options = options || {}

	    var result
	    if (typeof distanceInWordsLocale[token] === 'string') {
	      result = distanceInWordsLocale[token]
	    } else if (count === 1) {
	      result = distanceInWordsLocale[token].one
	    } else {
	      result = distanceInWordsLocale[token].other.replace('{{count}}', count)
	    }

	    if (options.addSuffix) {
	      if (options.comparison > 0) {
	        return 'in ' + result
	      } else {
	        return result + ' ago'
	      }
	    }

	    return result
	  }

	  return {
	    localize: localize
	  }
	}

	module.exports = buildDistanceInWordsLocale


	/***/ }),
	/* 178 */
	/***/ (function(module, exports, __webpack_require__) {

	var buildFormattingTokensRegExp = __webpack_require__(179)

	function buildFormatLocale () {
	  // Note: in English, the names of days of the week and months are capitalized.
	  // If you are making a new locale based on this one, check if the same is true for the language you're working on.
	  // Generally, formatted dates should look like they are in the middle of a sentence,
	  // e.g. in Spanish language the weekdays and months should be in the lowercase.
	  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
	  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
	  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']
	  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']
	  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
	  var meridiemUppercase = ['AM', 'PM']
	  var meridiemLowercase = ['am', 'pm']
	  var meridiemFull = ['a.m.', 'p.m.']

	  var formatters = {
	    // Month: Jan, Feb, ..., Dec
	    'MMM': function (date) {
	      return months3char[date.getMonth()]
	    },

	    // Month: January, February, ..., December
	    'MMMM': function (date) {
	      return monthsFull[date.getMonth()]
	    },

	    // Day of week: Su, Mo, ..., Sa
	    'dd': function (date) {
	      return weekdays2char[date.getDay()]
	    },

	    // Day of week: Sun, Mon, ..., Sat
	    'ddd': function (date) {
	      return weekdays3char[date.getDay()]
	    },

	    // Day of week: Sunday, Monday, ..., Saturday
	    'dddd': function (date) {
	      return weekdaysFull[date.getDay()]
	    },

	    // AM, PM
	    'A': function (date) {
	      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]
	    },

	    // am, pm
	    'a': function (date) {
	      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]
	    },

	    // a.m., p.m.
	    'aa': function (date) {
	      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]
	    }
	  }

	  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.
	  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']
	  ordinalFormatters.forEach(function (formatterToken) {
	    formatters[formatterToken + 'o'] = function (date, formatters) {
	      return ordinal(formatters[formatterToken](date))
	    }
	  })

	  return {
	    formatters: formatters,
	    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)
	  }
	}

	function ordinal (number) {
	  var rem100 = number % 100
	  if (rem100 > 20 || rem100 < 10) {
	    switch (rem100 % 10) {
	      case 1:
	        return number + 'st'
	      case 2:
	        return number + 'nd'
	      case 3:
	        return number + 'rd'
	    }
	  }
	  return number + 'th'
	}

	module.exports = buildFormatLocale


	/***/ }),
	/* 179 */
	/***/ (function(module, exports) {

	var commonFormatterKeys = [
	  'M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd',
	  'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG',
	  'H', 'HH', 'h', 'hh', 'm', 'mm',
	  's', 'ss', 'S', 'SS', 'SSS',
	  'Z', 'ZZ', 'X', 'x'
	]

	function buildFormattingTokensRegExp (formatters) {
	  var formatterKeys = []
	  for (var key in formatters) {
	    if (formatters.hasOwnProperty(key)) {
	      formatterKeys.push(key)
	    }
	  }

	  var formattingTokens = commonFormatterKeys
	    .concat(formatterKeys)
	    .sort()
	    .reverse()
	  var formattingTokensRegExp = new RegExp(
	    '(\\[[^\\[]*\\])|(\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g'
	  )

	  return formattingTokensRegExp
	}

	module.exports = buildFormattingTokensRegExp


	/***/ }),
	/* 180 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 181 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdPortal = __webpack_require__(16);

	var _MdPortal2 = _interopRequireDefault(_MdPortal);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdOverlay',
	  components: {
	    MdPortal: _MdPortal2.default
	  },
	  props: {
	    mdActive: Boolean,
	    mdAttachToParent: Boolean,
	    mdFixed: Boolean
	  },
	  computed: {
	    overlayClasses: function overlayClasses() {
	      return {
	        'md-fixed': this.mdFixed
	      };
	    }
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 182 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdDatepicker/MdDatepickerDialog.vue
	var MdDatepickerDialog = __webpack_require__(184);
	var MdDatepickerDialog_default = /*#__PURE__*/__webpack_require__.n(MdDatepickerDialog);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-4f0a3d52","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdDatepicker/MdDatepickerDialog.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-popover",
	    { attrs: { "md-settings": _vm.popperSettings, "md-active": "" } },
	    [
	      _c(
	        "transition",
	        { attrs: { name: "md-datepicker-dialog", appear: "" } },
	        [
	          _c(
	            "div",
	            {
	              staticClass: "md-datepicker-dialog",
	              class: [_vm.$mdActiveTheme]
	            },
	            [
	              _c("div", { staticClass: "md-datepicker-header" }, [
	                _c(
	                  "span",
	                  {
	                    staticClass: "md-datepicker-year-select",
	                    class: { "md-selected": _vm.currentView === "year" },
	                    on: {
	                      click: function($event) {
	                        _vm.currentView = "year"
	                      }
	                    }
	                  },
	                  [_vm._v(_vm._s(_vm.selectedYear))]
	                ),
	                _vm._v(" "),
	                _c(
	                  "div",
	                  {
	                    staticClass: "md-datepicker-date-select",
	                    class: { "md-selected": _vm.currentView !== "year" },
	                    on: {
	                      click: function($event) {
	                        _vm.currentView = "day"
	                      }
	                    }
	                  },
	                  [
	                    _c("strong", { staticClass: "md-datepicker-dayname" }, [
	                      _vm._v(_vm._s(_vm.shortDayName) + ", ")
	                    ]),
	                    _vm._v(" "),
	                    _c("strong", { staticClass: "md-datepicker-monthname" }, [
	                      _vm._v(_vm._s(_vm.shortMonthName))
	                    ]),
	                    _vm._v(" "),
	                    _c("strong", { staticClass: "md-datepicker-day" }, [
	                      _vm._v(_vm._s(_vm.currentDay))
	                    ])
	                  ]
	                )
	              ]),
	              _vm._v(" "),
	              _c(
	                "div",
	                { staticClass: "md-datepicker-body" },
	                [
	                  _c(
	                    "transition",
	                    { attrs: { name: "md-datepicker-body-header" } },
	                    [
	                      _vm.currentView === "day"
	                        ? _c(
	                            "div",
	                            { staticClass: "md-datepicker-body-header" },
	                            [
	                              _c(
	                                "md-button",
	                                {
	                                  staticClass: "md-dense md-icon-button",
	                                  on: { click: _vm.previousMonth }
	                                },
	                                [_c("md-arrow-left-icon")],
	                                1
	                              ),
	                              _vm._v(" "),
	                              _c(
	                                "md-button",
	                                {
	                                  staticClass: "md-dense md-icon-button",
	                                  on: { click: _vm.nextMonth }
	                                },
	                                [_c("md-arrow-right-icon")],
	                                1
	                              )
	                            ],
	                            1
	                          )
	                        : _vm._e()
	                    ]
	                  ),
	                  _vm._v(" "),
	                  _c(
	                    "div",
	                    {
	                      staticClass: "md-datepicker-body-content",
	                      style: _vm.contentStyles
	                    },
	                    [
	                      _c(
	                        "transition",
	                        { attrs: { name: "md-datepicker-view" } },
	                        [
	                          _vm.currentView === "day"
	                            ? _c(
	                                "transition-group",
	                                {
	                                  staticClass:
	                                    "md-datepicker-panel md-datepicker-calendar",
	                                  class: _vm.calendarClasses,
	                                  attrs: {
	                                    tag: "div",
	                                    name: "md-datepicker-month"
	                                  }
	                                },
	                                _vm._l([_vm.currentDate], function(
	                                  month,
	                                  index
	                                ) {
	                                  return _c(
	                                    "div",
	                                    {
	                                      key: month.getMonth(),
	                                      staticClass:
	                                        "md-datepicker-panel md-datepicker-month"
	                                    },
	                                    [
	                                      _c(
	                                        "md-button",
	                                        {
	                                          staticClass:
	                                            "md-dense md-datepicker-month-trigger",
	                                          on: {
	                                            click: function($event) {
	                                              _vm.currentView = "month"
	                                            }
	                                          }
	                                        },
	                                        [
	                                          _vm._v(
	                                            _vm._s(_vm.currentMonthName) +
	                                              " " +
	                                              _vm._s(_vm.currentYear)
	                                          )
	                                        ]
	                                      ),
	                                      _vm._v(" "),
	                                      _c(
	                                        "div",
	                                        { staticClass: "md-datepicker-week" },
	                                        _vm._l(_vm.locale.shorterDays, function(
	                                          day,
	                                          index
	                                        ) {
	                                          return _c("span", { key: index }, [
	                                            _vm._v(_vm._s(day))
	                                          ])
	                                        })
	                                      ),
	                                      _vm._v(" "),
	                                      _c(
	                                        "div",
	                                        { staticClass: "md-datepicker-days" },
	                                        [
	                                          _vm._l(_vm.firstDayOfMonth, function(
	                                            day
	                                          ) {
	                                            return _c("span", {
	                                              key: day,
	                                              staticClass: "md-datepicker-empty"
	                                            })
	                                          }),
	                                          _vm._v(" "),
	                                          _vm._l(_vm.daysInMonth, function(
	                                            day
	                                          ) {
	                                            return _c(
	                                              "div",
	                                              {
	                                                key: day,
	                                                staticClass: "md-datepicker-day"
	                                              },
	                                              [
	                                                _c(
	                                                  "span",
	                                                  {
	                                                    staticClass:
	                                                      "md-datepicker-day-button",
	                                                    class: {
	                                                      "md-datepicker-selected": _vm.isSelectedDay(
	                                                        day
	                                                      ),
	                                                      "md-datepicker-today": _vm.isToday(
	                                                        day
	                                                      ),
	                                                      "md-datepicker-disabled": _vm.isDisabled(
	                                                        day
	                                                      )
	                                                    },
	                                                    on: {
	                                                      click: function($event) {
	                                                        _vm.selectDate(day)
	                                                      }
	                                                    }
	                                                  },
	                                                  [_vm._v(_vm._s(day))]
	                                                )
	                                              ]
	                                            )
	                                          })
	                                        ],
	                                        2
	                                      )
	                                    ],
	                                    1
	                                  )
	                                })
	                              )
	                            : _vm.currentView === "month"
	                              ? _c(
	                                  "div",
	                                  {
	                                    staticClass:
	                                      "md-datepicker-panel md-datepicker-month-selector"
	                                  },
	                                  [
	                                    _c(
	                                      "md-button",
	                                      {
	                                        staticClass:
	                                          "md-datepicker-year-trigger",
	                                        on: {
	                                          click: function($event) {
	                                            _vm.currentView = "year"
	                                          }
	                                        }
	                                      },
	                                      [_vm._v(_vm._s(_vm.currentYear))]
	                                    ),
	                                    _vm._v(" "),
	                                    _vm._l(_vm.locale.months, function(
	                                      month,
	                                      index
	                                    ) {
	                                      return _c(
	                                        "span",
	                                        {
	                                          key: month,
	                                          staticClass:
	                                            "md-datepicker-month-button",
	                                          class: {
	                                            "md-datepicker-selected":
	                                              _vm.currentMonthName === month
	                                          },
	                                          on: {
	                                            click: function($event) {
	                                              _vm.switchMonth(index)
	                                            }
	                                          }
	                                        },
	                                        [_vm._v(_vm._s(month))]
	                                      )
	                                    })
	                                  ],
	                                  2
	                                )
	                              : _vm.currentView === "year"
	                                ? _c(
	                                    "keep-alive",
	                                    [
	                                      _c(
	                                        "md-content",
	                                        {
	                                          staticClass:
	                                            "md-datepicker-panel md-datepicker-year-selector md-scrollbar"
	                                        },
	                                        _vm._l(_vm.availableYears, function(
	                                          year
	                                        ) {
	                                          return _c(
	                                            "span",
	                                            {
	                                              key: year,
	                                              staticClass:
	                                                "md-datepicker-year-button",
	                                              class: {
	                                                "md-datepicker-selected":
	                                                  _vm.currentYear === year
	                                              },
	                                              on: {
	                                                click: function($event) {
	                                                  _vm.switchYear(year)
	                                                }
	                                              }
	                                            },
	                                            [_vm._v(_vm._s(year))]
	                                          )
	                                        })
	                                      )
	                                    ],
	                                    1
	                                  )
	                                : _vm._e()
	                        ],
	                        1
	                      )
	                    ],
	                    1
	                  ),
	                  _vm._v(" "),
	                  _c(
	                    "md-dialog-actions",
	                    { staticClass: "md-datepicker-body-footer" },
	                    [
	                      _c(
	                        "md-button",
	                        {
	                          staticClass: "md-primary",
	                          on: { click: _vm.onCancel }
	                        },
	                        [_vm._v("Cancel")]
	                      ),
	                      _vm._v(" "),
	                      _c(
	                        "md-button",
	                        {
	                          staticClass: "md-primary",
	                          on: { click: _vm.onConfirm }
	                        },
	                        [_vm._v("Ok")]
	                      )
	                    ],
	                    1
	                  )
	                ],
	                1
	              )
	            ]
	          )
	        ]
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdDatepicker_MdDatepickerDialog = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-4f0a3d52", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdDatepicker/MdDatepickerDialog.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(183)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDatepickerDialog_default.a,
	  MdDatepicker_MdDatepickerDialog,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdDatepicker/MdDatepickerDialog.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-4f0a3d52", Component.options)
	  } else {
	    hotAPI.reload("data-v-4f0a3d52", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdDatepicker_MdDatepickerDialog = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 183 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 184 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _add_months = __webpack_require__(39);

	var _add_months2 = _interopRequireDefault(_add_months);

	var _start_of_month = __webpack_require__(185);

	var _start_of_month2 = _interopRequireDefault(_start_of_month);

	var _sub_months = __webpack_require__(186);

	var _sub_months2 = _interopRequireDefault(_sub_months);

	var _get_date = __webpack_require__(187);

	var _get_date2 = _interopRequireDefault(_get_date);

	var _get_day = __webpack_require__(188);

	var _get_day2 = _interopRequireDefault(_get_day);

	var _get_days_in_month = __webpack_require__(24);

	var _get_days_in_month2 = _interopRequireDefault(_get_days_in_month);

	var _get_month = __webpack_require__(189);

	var _get_month2 = _interopRequireDefault(_get_month);

	var _get_year = __webpack_require__(190);

	var _get_year2 = _interopRequireDefault(_get_year);

	var _is_equal = __webpack_require__(191);

	var _is_equal2 = _interopRequireDefault(_is_equal);

	var _is_same_day = __webpack_require__(192);

	var _is_same_day2 = _interopRequireDefault(_is_same_day);

	var _is_today = __webpack_require__(193);

	var _is_today2 = _interopRequireDefault(_is_today);

	var _set_date = __webpack_require__(194);

	var _set_date2 = _interopRequireDefault(_set_date);

	var _set_month = __webpack_require__(195);

	var _set_month2 = _interopRequireDefault(_set_month);

	var _set_year = __webpack_require__(196);

	var _set_year2 = _interopRequireDefault(_set_year);

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdPopover = __webpack_require__(25);

	var _MdPopover2 = _interopRequireDefault(_MdPopover);

	var _MdArrowRightIcon = __webpack_require__(200);

	var _MdArrowRightIcon2 = _interopRequireDefault(_MdArrowRightIcon);

	var _MdArrowLeftIcon = __webpack_require__(202);

	var _MdArrowLeftIcon2 = _interopRequireDefault(_MdArrowLeftIcon);

	var _MdDialog = __webpack_require__(10);

	var _MdDialog2 = _interopRequireDefault(_MdDialog);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var getElements = function getElements(el, selector) {
	  if (el && el.querySelector) {
	    return el.querySelectorAll(selector);
	  }

	  return false;
	};

	exports.default = new _MdComponent2.default({
	  name: 'MdDatepickerDialog',
	  components: {
	    MdPopover: _MdPopover2.default,
	    MdArrowRightIcon: _MdArrowRightIcon2.default,
	    MdArrowLeftIcon: _MdArrowLeftIcon2.default,
	    MdDialog: _MdDialog2.default
	  },
	  props: {
	    mdDate: Date,
	    mdDisabledDates: [Array, Function]
	  },
	  data: function data() {
	    return {
	      currentDate: null,
	      selectedDate: null,
	      showDialog: false,
	      monthAction: null,
	      currentView: 'day',
	      contentStyles: {},
	      availableYears: null
	    };
	  },
	  computed: {
	    locale: function locale() {
	      return this.$material.locale;
	    },
	    popperSettings: function popperSettings() {
	      return {
	        placement: 'bottom-start',
	        modifiers: {
	          keepTogether: {
	            enabled: true
	          },
	          flip: {
	            enabled: false
	          }
	        }
	      };
	    },
	    calendarClasses: function calendarClasses() {
	      if (this.monthAction === 'next') {
	        return 'md-next';
	      }

	      return 'md-previous';
	    },
	    firstDayOfMonth: function firstDayOfMonth() {
	      return (0, _start_of_month2.default)(this.currentDate).getDay();
	    },
	    daysInMonth: function daysInMonth() {
	      return (0, _get_days_in_month2.default)(this.currentDate);
	    },
	    currentDay: function currentDay() {
	      if (this.selectedDate) {
	        return (0, _get_date2.default)(this.selectedDate);
	      }

	      return (0, _get_date2.default)(this.currentDate);
	    },
	    currentMonth: function currentMonth() {
	      return (0, _get_month2.default)(this.currentDate);
	    },
	    currentMonthName: function currentMonthName() {
	      return this.locale.months[this.currentMonth];
	    },
	    currentYear: function currentYear() {
	      return (0, _get_year2.default)(this.currentDate);
	    },
	    selectedYear: function selectedYear() {
	      if (this.selectedDate) {
	        return (0, _get_year2.default)(this.selectedDate);
	      }

	      return (0, _get_year2.default)(this.currentDate);
	    },
	    shortDayName: function shortDayName() {
	      if (this.selectedDate) {
	        return this.locale.shortDays[(0, _get_day2.default)(this.selectedDate)];
	      }

	      return this.locale.shortDays[(0, _get_day2.default)(this.currentDate)];
	    },
	    shortMonthName: function shortMonthName() {
	      if (this.selectedDate) {
	        return this.locale.shortMonths[(0, _get_month2.default)(this.selectedDate)];
	      }

	      return this.locale.shortMonths[(0, _get_month2.default)(this.currentDate)];
	    }
	  },
	  watch: {
	    mdDate: function mdDate() {
	      this.currentDate = this.mdDate || new Date();
	      this.selectedDate = this.mdDate;
	    },
	    currentDate: function () {
	      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(next, previous) {
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.next = 2;
	                return this.$nextTick();

	              case 2:

	                if (previous) {
	                  this.setContentStyles();
	                }

	              case 3:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function currentDate(_x, _x2) {
	        return _ref.apply(this, arguments);
	      }

	      return currentDate;
	    }(),
	    currentView: function () {
	      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
	        var activeYear;
	        return regeneratorRuntime.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                _context2.next = 2;
	                return this.$nextTick();

	              case 2:

	                if (this.currentView === 'year') {
	                  activeYear = getElements(this.$el, '.md-datepicker-year-button.md-datepicker-selected');


	                  if (activeYear.length) {
	                    activeYear[0].scrollIntoView({
	                      behavior: 'instant',
	                      block: 'center',
	                      inline: 'center'
	                    });
	                  }
	                }

	              case 3:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, this);
	      }));

	      function currentView() {
	        return _ref2.apply(this, arguments);
	      }

	      return currentView;
	    }()
	  },
	  methods: {
	    setContentStyles: function setContentStyles() {
	      var months = getElements(this.$el, '.md-datepicker-month');

	      if (months.length) {
	        var nextMonth = months[months.length - 1];

	        this.contentStyles = {
	          height: nextMonth.offsetHeight + 10 + 'px'
	        };
	      }
	    },
	    setAvailableYears: function setAvailableYears() {
	      var _locale = this.locale,
	          startYear = _locale.startYear,
	          endYear = _locale.endYear;

	      var counter = startYear;
	      var years = [];

	      while (counter <= endYear) {
	        years.push(counter++);
	      }

	      this.availableYears = years;
	    },
	    handleDisabledDateByArray: function handleDisabledDateByArray(date) {
	      return this.mdDisabledDates.some(function (disabledDate) {
	        return (0, _is_same_day2.default)(disabledDate, date);
	      });
	    },
	    isDisabled: function isDisabled(day) {
	      if (this.mdDisabledDates) {
	        var targetDate = (0, _set_date2.default)(this.currentDate, day);

	        if (Array.isArray(this.mdDisabledDates)) {
	          return this.handleDisabledDateByArray(targetDate);
	        } else if (typeof this.mdDisabledDates === 'function') {
	          return this.mdDisabledDates(targetDate);
	        }
	      }
	    },
	    isSelectedDay: function isSelectedDay(day) {
	      return (0, _is_equal2.default)(this.selectedDate, (0, _set_date2.default)(this.currentDate, day));
	    },
	    isToday: function isToday(day) {
	      return (0, _is_today2.default)((0, _set_date2.default)(this.currentDate, day));
	    },
	    previousMonth: function previousMonth() {
	      this.monthAction = 'previous';
	      this.currentDate = (0, _sub_months2.default)(this.currentDate, 1);
	    },
	    nextMonth: function nextMonth() {
	      this.monthAction = 'next';
	      this.currentDate = (0, _add_months2.default)(this.currentDate, 1);
	    },
	    switchMonth: function switchMonth(index) {
	      this.currentDate = (0, _set_month2.default)(this.currentDate, index);
	      this.currentView = 'day';
	    },
	    switchYear: function switchYear(year) {
	      this.currentDate = (0, _set_year2.default)(this.currentDate, year);
	      this.currentView = 'month';
	    },
	    selectDate: function selectDate(day) {
	      this.currentDate = (0, _set_date2.default)(this.currentDate, day);
	      this.selectedDate = this.currentDate;
	    },
	    closeDialog: function closeDialog() {
	      this.$emit('md-closed');
	    },
	    onClose: function onClose() {
	      this.closeDialog();
	    },
	    onCancel: function onCancel() {
	      this.closeDialog();
	    },
	    onConfirm: function onConfirm() {
	      this.closeDialog();
	      this.$emit('update:mdDate', this.selectedDate);
	    }
	  },
	  created: function created() {
	    var _this = this;

	    this.setAvailableYears();
	    this.currentDate = this.mdDate || new Date();
	    this.selectedDate = this.mdDate;
	    this.currentView = 'day';

	    window.setTimeout(function () {
	      _this.setContentStyles();
	    }, 50);
	  }
	});

	/***/ }),
	/* 185 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)

	/**
	 * @category Month Helpers
	 * @summary Return the start of a month for the given date.
	 *
	 * @description
	 * Return the start of a month for the given date.
	 * The result will be in the local timezone.
	 *
	 * @param {Date|String|Number} date - the original date
	 * @returns {Date} the start of a month
	 *
	 * @example
	 * // The start of a month for 2 September 2014 11:55:00:
	 * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
	 * //=> Mon Sep 01 2014 00:00:00
	 */
	function startOfMonth (dirtyDate) {
	  var date = parse(dirtyDate)
	  date.setDate(1)
	  date.setHours(0, 0, 0, 0)
	  return date
	}

	module.exports = startOfMonth


	/***/ }),
	/* 186 */
	/***/ (function(module, exports, __webpack_require__) {

	var addMonths = __webpack_require__(39)

	/**
	 * @category Month Helpers
	 * @summary Subtract the specified number of months from the given date.
	 *
	 * @description
	 * Subtract the specified number of months from the given date.
	 *
	 * @param {Date|String|Number} date - the date to be changed
	 * @param {Number} amount - the amount of months to be subtracted
	 * @returns {Date} the new date with the months subtracted
	 *
	 * @example
	 * // Subtract 5 months from 1 February 2015:
	 * var result = subMonths(new Date(2015, 1, 1), 5)
	 * //=> Mon Sep 01 2014 00:00:00
	 */
	function subMonths (dirtyDate, dirtyAmount) {
	  var amount = Number(dirtyAmount)
	  return addMonths(dirtyDate, -amount)
	}

	module.exports = subMonths


	/***/ }),
	/* 187 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)

	/**
	 * @category Day Helpers
	 * @summary Get the day of the month of the given date.
	 *
	 * @description
	 * Get the day of the month of the given date.
	 *
	 * @param {Date|String|Number} date - the given date
	 * @returns {Number} the day of month
	 *
	 * @example
	 * // Which day of the month is 29 February 2012?
	 * var result = getDate(new Date(2012, 1, 29))
	 * //=> 29
	 */
	function getDate (dirtyDate) {
	  var date = parse(dirtyDate)
	  var dayOfMonth = date.getDate()
	  return dayOfMonth
	}

	module.exports = getDate


	/***/ }),
	/* 188 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)

	/**
	 * @category Weekday Helpers
	 * @summary Get the day of the week of the given date.
	 *
	 * @description
	 * Get the day of the week of the given date.
	 *
	 * @param {Date|String|Number} date - the given date
	 * @returns {Number} the day of week
	 *
	 * @example
	 * // Which day of the week is 29 February 2012?
	 * var result = getDay(new Date(2012, 1, 29))
	 * //=> 3
	 */
	function getDay (dirtyDate) {
	  var date = parse(dirtyDate)
	  var day = date.getDay()
	  return day
	}

	module.exports = getDay


	/***/ }),
	/* 189 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)

	/**
	 * @category Month Helpers
	 * @summary Get the month of the given date.
	 *
	 * @description
	 * Get the month of the given date.
	 *
	 * @param {Date|String|Number} date - the given date
	 * @returns {Number} the month
	 *
	 * @example
	 * // Which month is 29 February 2012?
	 * var result = getMonth(new Date(2012, 1, 29))
	 * //=> 1
	 */
	function getMonth (dirtyDate) {
	  var date = parse(dirtyDate)
	  var month = date.getMonth()
	  return month
	}

	module.exports = getMonth


	/***/ }),
	/* 190 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)

	/**
	 * @category Year Helpers
	 * @summary Get the year of the given date.
	 *
	 * @description
	 * Get the year of the given date.
	 *
	 * @param {Date|String|Number} date - the given date
	 * @returns {Number} the year
	 *
	 * @example
	 * // Which year is 2 July 2014?
	 * var result = getYear(new Date(2014, 6, 2))
	 * //=> 2014
	 */
	function getYear (dirtyDate) {
	  var date = parse(dirtyDate)
	  var year = date.getFullYear()
	  return year
	}

	module.exports = getYear


	/***/ }),
	/* 191 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)

	/**
	 * @category Common Helpers
	 * @summary Are the given dates equal?
	 *
	 * @description
	 * Are the given dates equal?
	 *
	 * @param {Date|String|Number} dateLeft - the first date to compare
	 * @param {Date|String|Number} dateRight - the second date to compare
	 * @returns {Boolean} the dates are equal
	 *
	 * @example
	 * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
	 * var result = isEqual(
	 *   new Date(2014, 6, 2, 6, 30, 45, 0)
	 *   new Date(2014, 6, 2, 6, 30, 45, 500)
	 * )
	 * //=> false
	 */
	function isEqual (dirtyLeftDate, dirtyRightDate) {
	  var dateLeft = parse(dirtyLeftDate)
	  var dateRight = parse(dirtyRightDate)
	  return dateLeft.getTime() === dateRight.getTime()
	}

	module.exports = isEqual


	/***/ }),
	/* 192 */
	/***/ (function(module, exports, __webpack_require__) {

	var startOfDay = __webpack_require__(21)

	/**
	 * @category Day Helpers
	 * @summary Are the given dates in the same day?
	 *
	 * @description
	 * Are the given dates in the same day?
	 *
	 * @param {Date|String|Number} dateLeft - the first date to check
	 * @param {Date|String|Number} dateRight - the second date to check
	 * @returns {Boolean} the dates are in the same day
	 *
	 * @example
	 * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
	 * var result = isSameDay(
	 *   new Date(2014, 8, 4, 6, 0),
	 *   new Date(2014, 8, 4, 18, 0)
	 * )
	 * //=> true
	 */
	function isSameDay (dirtyDateLeft, dirtyDateRight) {
	  var dateLeftStartOfDay = startOfDay(dirtyDateLeft)
	  var dateRightStartOfDay = startOfDay(dirtyDateRight)

	  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime()
	}

	module.exports = isSameDay


	/***/ }),
	/* 193 */
	/***/ (function(module, exports, __webpack_require__) {

	var startOfDay = __webpack_require__(21)

	/**
	 * @category Day Helpers
	 * @summary Is the given date today?
	 *
	 * @description
	 * Is the given date today?
	 *
	 * @param {Date|String|Number} date - the date to check
	 * @returns {Boolean} the date is today
	 *
	 * @example
	 * // If today is 6 October 2014, is 6 October 14:00:00 today?
	 * var result = isToday(new Date(2014, 9, 6, 14, 0))
	 * //=> true
	 */
	function isToday (dirtyDate) {
	  return startOfDay(dirtyDate).getTime() === startOfDay(new Date()).getTime()
	}

	module.exports = isToday


	/***/ }),
	/* 194 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)

	/**
	 * @category Day Helpers
	 * @summary Set the day of the month to the given date.
	 *
	 * @description
	 * Set the day of the month to the given date.
	 *
	 * @param {Date|String|Number} date - the date to be changed
	 * @param {Number} dayOfMonth - the day of the month of the new date
	 * @returns {Date} the new date with the day of the month setted
	 *
	 * @example
	 * // Set the 30th day of the month to 1 September 2014:
	 * var result = setDate(new Date(2014, 8, 1), 30)
	 * //=> Tue Sep 30 2014 00:00:00
	 */
	function setDate (dirtyDate, dirtyDayOfMonth) {
	  var date = parse(dirtyDate)
	  var dayOfMonth = Number(dirtyDayOfMonth)
	  date.setDate(dayOfMonth)
	  return date
	}

	module.exports = setDate


	/***/ }),
	/* 195 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)
	var getDaysInMonth = __webpack_require__(24)

	/**
	 * @category Month Helpers
	 * @summary Set the month to the given date.
	 *
	 * @description
	 * Set the month to the given date.
	 *
	 * @param {Date|String|Number} date - the date to be changed
	 * @param {Number} month - the month of the new date
	 * @returns {Date} the new date with the month setted
	 *
	 * @example
	 * // Set February to 1 September 2014:
	 * var result = setMonth(new Date(2014, 8, 1), 1)
	 * //=> Sat Feb 01 2014 00:00:00
	 */
	function setMonth (dirtyDate, dirtyMonth) {
	  var date = parse(dirtyDate)
	  var month = Number(dirtyMonth)
	  var year = date.getFullYear()
	  var day = date.getDate()

	  var dateWithDesiredMonth = new Date(0)
	  dateWithDesiredMonth.setFullYear(year, month, 15)
	  dateWithDesiredMonth.setHours(0, 0, 0, 0)
	  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)
	  // Set the last day of the new month
	  // if the original date was the last day of the longer month
	  date.setMonth(month, Math.min(day, daysInMonth))
	  return date
	}

	module.exports = setMonth


	/***/ }),
	/* 196 */
	/***/ (function(module, exports, __webpack_require__) {

	var parse = __webpack_require__(3)

	/**
	 * @category Year Helpers
	 * @summary Set the year to the given date.
	 *
	 * @description
	 * Set the year to the given date.
	 *
	 * @param {Date|String|Number} date - the date to be changed
	 * @param {Number} year - the year of the new date
	 * @returns {Date} the new date with the year setted
	 *
	 * @example
	 * // Set year 2013 to 1 September 2014:
	 * var result = setYear(new Date(2014, 8, 1), 2013)
	 * //=> Sun Sep 01 2013 00:00:00
	 */
	function setYear (dirtyDate, dirtyYear) {
	  var date = parse(dirtyDate)
	  var year = Number(dirtyYear)
	  date.setFullYear(year)
	  return date
	}

	module.exports = setYear


	/***/ }),
	/* 197 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 198 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _popper = __webpack_require__(199);

	var _popper2 = _interopRequireDefault(_popper);

	var _deepmerge = __webpack_require__(30);

	var _deepmerge2 = _interopRequireDefault(_deepmerge);

	var _MdPortal = __webpack_require__(16);

	var _MdPortal2 = _interopRequireDefault(_MdPortal);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	exports.default = {
	  name: 'MdPopover',
	  abstract: true,
	  components: {
	    MdPortal: _MdPortal2.default
	  },
	  props: {
	    mdActive: Boolean,
	    mdSettings: {
	      type: Object,
	      default: function _default() {
	        return {};
	      }
	    }
	  },
	  data: function data() {
	    return {
	      popperInstance: null,
	      originalParentEl: null,
	      shouldRender: false,
	      shouldActivate: false
	    };
	  },
	  computed: {
	    popoverClasses: function popoverClasses() {
	      if (this.shouldActivate) {
	        return 'md-active';
	      } else if (this.shouldRender) {
	        return 'md-rendering';
	      }
	    }
	  },
	  watch: {
	    mdActive: {
	      immediate: true,
	      handler: function handler(shouldRender) {
	        this.shouldRender = shouldRender;

	        if (shouldRender) {
	          this.bindPopper();
	        } else {
	          this.shouldActivate = false;
	        }
	      }
	    },
	    mdSettings: function mdSettings() {
	      if (this.popperInstance) {
	        this.createPopper();
	      }
	    }
	  },
	  methods: {
	    getPopperOptions: function getPopperOptions() {
	      var _this = this;

	      return {
	        placement: 'bottom',
	        modifiers: {
	          preventOverflow: {
	            boundariesElement: 'viewport',
	            padding: 16
	          },
	          computeStyle: {
	            gpuAcceleration: false
	          }
	        },
	        onCreate: function onCreate() {
	          _this.shouldActivate = true;
	          _this.$emit('md-active');
	        }
	      };
	    },
	    setOriginalParent: function setOriginalParent(el) {
	      if (!this.originalParentEl) {
	        this.originalParentEl = el;
	      }
	    },
	    killPopper: function killPopper() {
	      if (this.popperInstance) {
	        this.popperInstance.destroy();
	        this.popperInstance = null;
	      }
	    },
	    bindPopper: function () {
	      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.next = 2;
	                return this.$nextTick();

	              case 2:

	                if (this.originalParentEl) {
	                  this.createPopper();
	                }

	              case 3:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function bindPopper() {
	        return _ref.apply(this, arguments);
	      }

	      return bindPopper;
	    }(),
	    createPopper: function () {
	      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
	        var options;
	        return regeneratorRuntime.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                if (this.mdSettings) {
	                  options = (0, _deepmerge2.default)(this.getPopperOptions(), this.mdSettings);


	                  if (this.$el.constructor.name.toLowerCase() !== 'comment') {
	                    this.popperInstance = new _popper2.default(this.originalParentEl, this.$el, options);
	                  }
	                }

	              case 1:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, this);
	      }));

	      function createPopper() {
	        return _ref2.apply(this, arguments);
	      }

	      return createPopper;
	    }(),
	    resetPopper: function resetPopper() {
	      if (this.popperInstance) {
	        this.killPopper();
	        this.createPopper();
	      }
	    }
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.killPopper();
	  },
	  mounted: function mounted() {
	    this.resetPopper();
	  },
	  render: function render(createElement) {
	    return createElement(_MdPortal2.default, {
	      props: _extends({}, this.$attrs),
	      on: _extends({}, this.$listeners, {
	        'md-initial-parent': this.setOriginalParent,
	        'md-destroy': this.killPopper
	      })
	    }, this.$slots.default);
	  }
	};

	/***/ }),
	/* 199 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
	/* WEBPACK VAR INJECTION */(function(global) {/**!
	 * @fileOverview Kickass library to create and place poppers near their reference elements.
	 * @version 1.12.6
	 * @license
	 * Copyright (c) 2016 Federico Zivolo and contributors
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in all
	 * copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	 * SOFTWARE.
	 */
	var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';
	var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
	var timeoutDuration = 0;
	for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
	  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
	    timeoutDuration = 1;
	    break;
	  }
	}

	function microtaskDebounce(fn) {
	  var called = false;
	  return function () {
	    if (called) {
	      return;
	    }
	    called = true;
	    Promise.resolve().then(function () {
	      called = false;
	      fn();
	    });
	  };
	}

	function taskDebounce(fn) {
	  var scheduled = false;
	  return function () {
	    if (!scheduled) {
	      scheduled = true;
	      setTimeout(function () {
	        scheduled = false;
	        fn();
	      }, timeoutDuration);
	    }
	  };
	}

	var supportsMicroTasks = isBrowser && window.Promise;

	/**
	* Create a debounced version of a method, that's asynchronously deferred
	* but called in the minimum time possible.
	*
	* @method
	* @memberof Popper.Utils
	* @argument {Function} fn
	* @returns {Function}
	*/
	var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

	/**
	 * Check if the given variable is a function
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Any} functionToCheck - variable to check
	 * @returns {Boolean} answer to: is a function?
	 */
	function isFunction(functionToCheck) {
	  var getType = {};
	  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
	}

	/**
	 * Get CSS computed property of the given element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Eement} element
	 * @argument {String} property
	 */
	function getStyleComputedProperty(element, property) {
	  if (element.nodeType !== 1) {
	    return [];
	  }
	  // NOTE: 1 DOM access here
	  var css = window.getComputedStyle(element, null);
	  return property ? css[property] : css;
	}

	/**
	 * Returns the parentNode or the host of the element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Element} parent
	 */
	function getParentNode(element) {
	  if (element.nodeName === 'HTML') {
	    return element;
	  }
	  return element.parentNode || element.host;
	}

	/**
	 * Returns the scrolling parent of the given element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Element} scroll parent
	 */
	function getScrollParent(element) {
	  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
	  if (!element) {
	    return window.document.body;
	  }

	  switch (element.nodeName) {
	    case 'HTML':
	    case 'BODY':
	      return element.ownerDocument.body;
	    case '#document':
	      return element.body;
	  }

	  // Firefox want us to check `-x` and `-y` variations as well

	  var _getStyleComputedProp = getStyleComputedProperty(element),
	      overflow = _getStyleComputedProp.overflow,
	      overflowX = _getStyleComputedProp.overflowX,
	      overflowY = _getStyleComputedProp.overflowY;

	  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {
	    return element;
	  }

	  return getScrollParent(getParentNode(element));
	}

	/**
	 * Returns the offset parent of the given element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Element} offset parent
	 */
	function getOffsetParent(element) {
	  // NOTE: 1 DOM access here
	  var offsetParent = element && element.offsetParent;
	  var nodeName = offsetParent && offsetParent.nodeName;

	  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
	    if (element) {
	      return element.ownerDocument.documentElement;
	    }

	    return window.document.documentElement;
	  }

	  // .offsetParent will return the closest TD or TABLE in case
	  // no offsetParent is present, I hate this job...
	  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
	    return getOffsetParent(offsetParent);
	  }

	  return offsetParent;
	}

	function isOffsetContainer(element) {
	  var nodeName = element.nodeName;

	  if (nodeName === 'BODY') {
	    return false;
	  }
	  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
	}

	/**
	 * Finds the root node (document, shadowDOM root) of the given element
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} node
	 * @returns {Element} root node
	 */
	function getRoot(node) {
	  if (node.parentNode !== null) {
	    return getRoot(node.parentNode);
	  }

	  return node;
	}

	/**
	 * Finds the offset parent common to the two provided nodes
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element1
	 * @argument {Element} element2
	 * @returns {Element} common offset parent
	 */
	function findCommonOffsetParent(element1, element2) {
	  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
	  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
	    return window.document.documentElement;
	  }

	  // Here we make sure to give as "start" the element that comes first in the DOM
	  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
	  var start = order ? element1 : element2;
	  var end = order ? element2 : element1;

	  // Get common ancestor container
	  var range = document.createRange();
	  range.setStart(start, 0);
	  range.setEnd(end, 0);
	  var commonAncestorContainer = range.commonAncestorContainer;

	  // Both nodes are inside #document

	  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
	    if (isOffsetContainer(commonAncestorContainer)) {
	      return commonAncestorContainer;
	    }

	    return getOffsetParent(commonAncestorContainer);
	  }

	  // one of the nodes is inside shadowDOM, find which one
	  var element1root = getRoot(element1);
	  if (element1root.host) {
	    return findCommonOffsetParent(element1root.host, element2);
	  } else {
	    return findCommonOffsetParent(element1, getRoot(element2).host);
	  }
	}

	/**
	 * Gets the scroll value of the given element in the given side (top and left)
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @argument {String} side `top` or `left`
	 * @returns {number} amount of scrolled pixels
	 */
	function getScroll(element) {
	  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

	  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
	  var nodeName = element.nodeName;

	  if (nodeName === 'BODY' || nodeName === 'HTML') {
	    var html = element.ownerDocument.documentElement;
	    var scrollingElement = element.ownerDocument.scrollingElement || html;
	    return scrollingElement[upperSide];
	  }

	  return element[upperSide];
	}

	/*
	 * Sum or subtract the element scroll values (left and top) from a given rect object
	 * @method
	 * @memberof Popper.Utils
	 * @param {Object} rect - Rect object you want to change
	 * @param {HTMLElement} element - The element from the function reads the scroll values
	 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
	 * @return {Object} rect - The modifier rect object
	 */
	function includeScroll(rect, element) {
	  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

	  var scrollTop = getScroll(element, 'top');
	  var scrollLeft = getScroll(element, 'left');
	  var modifier = subtract ? -1 : 1;
	  rect.top += scrollTop * modifier;
	  rect.bottom += scrollTop * modifier;
	  rect.left += scrollLeft * modifier;
	  rect.right += scrollLeft * modifier;
	  return rect;
	}

	/*
	 * Helper to detect borders of a given element
	 * @method
	 * @memberof Popper.Utils
	 * @param {CSSStyleDeclaration} styles
	 * Result of `getStyleComputedProperty` on the given element
	 * @param {String} axis - `x` or `y`
	 * @return {number} borders - The borders size of the given axis
	 */

	function getBordersSize(styles, axis) {
	  var sideA = axis === 'x' ? 'Left' : 'Top';
	  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

	  return +styles['border' + sideA + 'Width'].split('px')[0] + +styles['border' + sideB + 'Width'].split('px')[0];
	}

	/**
	 * Tells if you are running Internet Explorer 10
	 * @method
	 * @memberof Popper.Utils
	 * @returns {Boolean} isIE10
	 */
	var isIE10 = undefined;

	var isIE10$1 = function () {
	  if (isIE10 === undefined) {
	    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;
	  }
	  return isIE10;
	};

	function getSize(axis, body, html, computedStyle) {
	  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);
	}

	function getWindowSizes() {
	  var body = window.document.body;
	  var html = window.document.documentElement;
	  var computedStyle = isIE10$1() && window.getComputedStyle(html);

	  return {
	    height: getSize('Height', body, html, computedStyle),
	    width: getSize('Width', body, html, computedStyle)
	  };
	}

	var classCallCheck = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

	var createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();





	var defineProperty = function (obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }

	  return obj;
	};

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];

	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }

	  return target;
	};

	/**
	 * Given element offsets, generate an output similar to getBoundingClientRect
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Object} offsets
	 * @returns {Object} ClientRect like output
	 */
	function getClientRect(offsets) {
	  return _extends({}, offsets, {
	    right: offsets.left + offsets.width,
	    bottom: offsets.top + offsets.height
	  });
	}

	/**
	 * Get bounding client rect of given element
	 * @method
	 * @memberof Popper.Utils
	 * @param {HTMLElement} element
	 * @return {Object} client rect
	 */
	function getBoundingClientRect(element) {
	  var rect = {};

	  // IE10 10 FIX: Please, don't ask, the element isn't
	  // considered in DOM in some circumstances...
	  // This isn't reproducible in IE10 compatibility mode of IE11
	  if (isIE10$1()) {
	    try {
	      rect = element.getBoundingClientRect();
	      var scrollTop = getScroll(element, 'top');
	      var scrollLeft = getScroll(element, 'left');
	      rect.top += scrollTop;
	      rect.left += scrollLeft;
	      rect.bottom += scrollTop;
	      rect.right += scrollLeft;
	    } catch (err) {}
	  } else {
	    rect = element.getBoundingClientRect();
	  }

	  var result = {
	    left: rect.left,
	    top: rect.top,
	    width: rect.right - rect.left,
	    height: rect.bottom - rect.top
	  };

	  // subtract scrollbar size from sizes
	  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};
	  var width = sizes.width || element.clientWidth || result.right - result.left;
	  var height = sizes.height || element.clientHeight || result.bottom - result.top;

	  var horizScrollbar = element.offsetWidth - width;
	  var vertScrollbar = element.offsetHeight - height;

	  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
	  // we make this check conditional for performance reasons
	  if (horizScrollbar || vertScrollbar) {
	    var styles = getStyleComputedProperty(element);
	    horizScrollbar -= getBordersSize(styles, 'x');
	    vertScrollbar -= getBordersSize(styles, 'y');

	    result.width -= horizScrollbar;
	    result.height -= vertScrollbar;
	  }

	  return getClientRect(result);
	}

	function getOffsetRectRelativeToArbitraryNode(children, parent) {
	  var isIE10 = isIE10$1();
	  var isHTML = parent.nodeName === 'HTML';
	  var childrenRect = getBoundingClientRect(children);
	  var parentRect = getBoundingClientRect(parent);
	  var scrollParent = getScrollParent(children);

	  var styles = getStyleComputedProperty(parent);
	  var borderTopWidth = +styles.borderTopWidth.split('px')[0];
	  var borderLeftWidth = +styles.borderLeftWidth.split('px')[0];

	  var offsets = getClientRect({
	    top: childrenRect.top - parentRect.top - borderTopWidth,
	    left: childrenRect.left - parentRect.left - borderLeftWidth,
	    width: childrenRect.width,
	    height: childrenRect.height
	  });
	  offsets.marginTop = 0;
	  offsets.marginLeft = 0;

	  // Subtract margins of documentElement in case it's being used as parent
	  // we do this only on HTML because it's the only element that behaves
	  // differently when margins are applied to it. The margins are included in
	  // the box of the documentElement, in the other cases not.
	  if (!isIE10 && isHTML) {
	    var marginTop = +styles.marginTop.split('px')[0];
	    var marginLeft = +styles.marginLeft.split('px')[0];

	    offsets.top -= borderTopWidth - marginTop;
	    offsets.bottom -= borderTopWidth - marginTop;
	    offsets.left -= borderLeftWidth - marginLeft;
	    offsets.right -= borderLeftWidth - marginLeft;

	    // Attach marginTop and marginLeft because in some circumstances we may need them
	    offsets.marginTop = marginTop;
	    offsets.marginLeft = marginLeft;
	  }

	  if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
	    offsets = includeScroll(offsets, parent);
	  }

	  return offsets;
	}

	function getViewportOffsetRectRelativeToArtbitraryNode(element) {
	  var html = element.ownerDocument.documentElement;
	  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
	  var width = Math.max(html.clientWidth, window.innerWidth || 0);
	  var height = Math.max(html.clientHeight, window.innerHeight || 0);

	  var scrollTop = getScroll(html);
	  var scrollLeft = getScroll(html, 'left');

	  var offset = {
	    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
	    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
	    width: width,
	    height: height
	  };

	  return getClientRect(offset);
	}

	/**
	 * Check if the given element is fixed or is inside a fixed parent
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @argument {Element} customContainer
	 * @returns {Boolean} answer to "isFixed?"
	 */
	function isFixed(element) {
	  var nodeName = element.nodeName;
	  if (nodeName === 'BODY' || nodeName === 'HTML') {
	    return false;
	  }
	  if (getStyleComputedProperty(element, 'position') === 'fixed') {
	    return true;
	  }
	  return isFixed(getParentNode(element));
	}

	/**
	 * Computed the boundaries limits and return them
	 * @method
	 * @memberof Popper.Utils
	 * @param {HTMLElement} popper
	 * @param {HTMLElement} reference
	 * @param {number} padding
	 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
	 * @returns {Object} Coordinates of the boundaries
	 */
	function getBoundaries(popper, reference, padding, boundariesElement) {
	  // NOTE: 1 DOM access here
	  var boundaries = { top: 0, left: 0 };
	  var offsetParent = findCommonOffsetParent(popper, reference);

	  // Handle viewport case
	  if (boundariesElement === 'viewport') {
	    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);
	  } else {
	    // Handle other cases based on DOM element used as boundaries
	    var boundariesNode = void 0;
	    if (boundariesElement === 'scrollParent') {
	      boundariesNode = getScrollParent(getParentNode(popper));
	      if (boundariesNode.nodeName === 'BODY') {
	        boundariesNode = popper.ownerDocument.documentElement;
	      }
	    } else if (boundariesElement === 'window') {
	      boundariesNode = popper.ownerDocument.documentElement;
	    } else {
	      boundariesNode = boundariesElement;
	    }

	    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);

	    // In case of HTML, we need a different computation
	    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
	      var _getWindowSizes = getWindowSizes(),
	          height = _getWindowSizes.height,
	          width = _getWindowSizes.width;

	      boundaries.top += offsets.top - offsets.marginTop;
	      boundaries.bottom = height + offsets.top;
	      boundaries.left += offsets.left - offsets.marginLeft;
	      boundaries.right = width + offsets.left;
	    } else {
	      // for all the other DOM elements, this one is good
	      boundaries = offsets;
	    }
	  }

	  // Add paddings
	  boundaries.left += padding;
	  boundaries.top += padding;
	  boundaries.right -= padding;
	  boundaries.bottom -= padding;

	  return boundaries;
	}

	function getArea(_ref) {
	  var width = _ref.width,
	      height = _ref.height;

	  return width * height;
	}

	/**
	 * Utility used to transform the `auto` placement to the placement with more
	 * available space.
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
	  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

	  if (placement.indexOf('auto') === -1) {
	    return placement;
	  }

	  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

	  var rects = {
	    top: {
	      width: boundaries.width,
	      height: refRect.top - boundaries.top
	    },
	    right: {
	      width: boundaries.right - refRect.right,
	      height: boundaries.height
	    },
	    bottom: {
	      width: boundaries.width,
	      height: boundaries.bottom - refRect.bottom
	    },
	    left: {
	      width: refRect.left - boundaries.left,
	      height: boundaries.height
	    }
	  };

	  var sortedAreas = Object.keys(rects).map(function (key) {
	    return _extends({
	      key: key
	    }, rects[key], {
	      area: getArea(rects[key])
	    });
	  }).sort(function (a, b) {
	    return b.area - a.area;
	  });

	  var filteredAreas = sortedAreas.filter(function (_ref2) {
	    var width = _ref2.width,
	        height = _ref2.height;
	    return width >= popper.clientWidth && height >= popper.clientHeight;
	  });

	  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

	  var variation = placement.split('-')[1];

	  return computedPlacement + (variation ? '-' + variation : '');
	}

	/**
	 * Get offsets to the reference element
	 * @method
	 * @memberof Popper.Utils
	 * @param {Object} state
	 * @param {Element} popper - the popper element
	 * @param {Element} reference - the reference element (the popper will be relative to this)
	 * @returns {Object} An object containing the offsets which will be applied to the popper
	 */
	function getReferenceOffsets(state, popper, reference) {
	  var commonOffsetParent = findCommonOffsetParent(popper, reference);
	  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);
	}

	/**
	 * Get the outer sizes of the given element (offset size + margins)
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element
	 * @returns {Object} object containing width and height properties
	 */
	function getOuterSizes(element) {
	  var styles = window.getComputedStyle(element);
	  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);
	  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);
	  var result = {
	    width: element.offsetWidth + y,
	    height: element.offsetHeight + x
	  };
	  return result;
	}

	/**
	 * Get the opposite placement of the given one
	 * @method
	 * @memberof Popper.Utils
	 * @argument {String} placement
	 * @returns {String} flipped placement
	 */
	function getOppositePlacement(placement) {
	  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
	  return placement.replace(/left|right|bottom|top/g, function (matched) {
	    return hash[matched];
	  });
	}

	/**
	 * Get offsets to the popper
	 * @method
	 * @memberof Popper.Utils
	 * @param {Object} position - CSS position the Popper will get applied
	 * @param {HTMLElement} popper - the popper element
	 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
	 * @param {String} placement - one of the valid placement options
	 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
	 */
	function getPopperOffsets(popper, referenceOffsets, placement) {
	  placement = placement.split('-')[0];

	  // Get popper node sizes
	  var popperRect = getOuterSizes(popper);

	  // Add position, width and height to our offsets object
	  var popperOffsets = {
	    width: popperRect.width,
	    height: popperRect.height
	  };

	  // depending by the popper placement we have to compute its offsets slightly differently
	  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
	  var mainSide = isHoriz ? 'top' : 'left';
	  var secondarySide = isHoriz ? 'left' : 'top';
	  var measurement = isHoriz ? 'height' : 'width';
	  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

	  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
	  if (placement === secondarySide) {
	    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
	  } else {
	    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
	  }

	  return popperOffsets;
	}

	/**
	 * Mimics the `find` method of Array
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Array} arr
	 * @argument prop
	 * @argument value
	 * @returns index or -1
	 */
	function find(arr, check) {
	  // use native find if supported
	  if (Array.prototype.find) {
	    return arr.find(check);
	  }

	  // use `filter` to obtain the same behavior of `find`
	  return arr.filter(check)[0];
	}

	/**
	 * Return the index of the matching object
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Array} arr
	 * @argument prop
	 * @argument value
	 * @returns index or -1
	 */
	function findIndex(arr, prop, value) {
	  // use native findIndex if supported
	  if (Array.prototype.findIndex) {
	    return arr.findIndex(function (cur) {
	      return cur[prop] === value;
	    });
	  }

	  // use `find` + `indexOf` if `findIndex` isn't supported
	  var match = find(arr, function (obj) {
	    return obj[prop] === value;
	  });
	  return arr.indexOf(match);
	}

	/**
	 * Loop trough the list of modifiers and run them in order,
	 * each of them will then edit the data object.
	 * @method
	 * @memberof Popper.Utils
	 * @param {dataObject} data
	 * @param {Array} modifiers
	 * @param {String} ends - Optional modifier name used as stopper
	 * @returns {dataObject}
	 */
	function runModifiers(modifiers, data, ends) {
	  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

	  modifiersToRun.forEach(function (modifier) {
	    if (modifier['function']) {
	      // eslint-disable-line dot-notation
	      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
	    }
	    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
	    if (modifier.enabled && isFunction(fn)) {
	      // Add properties to offsets to make them a complete clientRect object
	      // we do this before each modifier to make sure the previous one doesn't
	      // mess with these values
	      data.offsets.popper = getClientRect(data.offsets.popper);
	      data.offsets.reference = getClientRect(data.offsets.reference);

	      data = fn(data, modifier);
	    }
	  });

	  return data;
	}

	/**
	 * Updates the position of the popper, computing the new offsets and applying
	 * the new style.<br />
	 * Prefer `scheduleUpdate` over `update` because of performance reasons.
	 * @method
	 * @memberof Popper
	 */
	function update() {
	  // if popper is destroyed, don't perform any further update
	  if (this.state.isDestroyed) {
	    return;
	  }

	  var data = {
	    instance: this,
	    styles: {},
	    arrowStyles: {},
	    attributes: {},
	    flipped: false,
	    offsets: {}
	  };

	  // compute reference element offsets
	  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);

	  // compute auto placement, store placement inside the data object,
	  // modifiers will be able to edit `placement` if needed
	  // and refer to originalPlacement to know the original value
	  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

	  // store the computed placement inside `originalPlacement`
	  data.originalPlacement = data.placement;

	  // compute the popper offsets
	  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
	  data.offsets.popper.position = 'absolute';

	  // run the modifiers
	  data = runModifiers(this.modifiers, data);

	  // the first `update` will call `onCreate` callback
	  // the other ones will call `onUpdate` callback
	  if (!this.state.isCreated) {
	    this.state.isCreated = true;
	    this.options.onCreate(data);
	  } else {
	    this.options.onUpdate(data);
	  }
	}

	/**
	 * Helper used to know if the given modifier is enabled.
	 * @method
	 * @memberof Popper.Utils
	 * @returns {Boolean}
	 */
	function isModifierEnabled(modifiers, modifierName) {
	  return modifiers.some(function (_ref) {
	    var name = _ref.name,
	        enabled = _ref.enabled;
	    return enabled && name === modifierName;
	  });
	}

	/**
	 * Get the prefixed supported property name
	 * @method
	 * @memberof Popper.Utils
	 * @argument {String} property (camelCase)
	 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
	 */
	function getSupportedPropertyName(property) {
	  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
	  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

	  for (var i = 0; i < prefixes.length - 1; i++) {
	    var prefix = prefixes[i];
	    var toCheck = prefix ? '' + prefix + upperProp : property;
	    if (typeof window.document.body.style[toCheck] !== 'undefined') {
	      return toCheck;
	    }
	  }
	  return null;
	}

	/**
	 * Destroy the popper
	 * @method
	 * @memberof Popper
	 */
	function destroy() {
	  this.state.isDestroyed = true;

	  // touch DOM only if `applyStyle` modifier is enabled
	  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
	    this.popper.removeAttribute('x-placement');
	    this.popper.style.left = '';
	    this.popper.style.position = '';
	    this.popper.style.top = '';
	    this.popper.style[getSupportedPropertyName('transform')] = '';
	  }

	  this.disableEventListeners();

	  // remove the popper if user explicity asked for the deletion on destroy
	  // do not use `remove` because IE11 doesn't support it
	  if (this.options.removeOnDestroy) {
	    this.popper.parentNode.removeChild(this.popper);
	  }
	  return this;
	}

	/**
	 * Get the window associated with the element
	 * @argument {Element} element
	 * @returns {Window}
	 */
	function getWindow(element) {
	  var ownerDocument = element.ownerDocument;
	  return ownerDocument ? ownerDocument.defaultView : window;
	}

	function attachToScrollParents(scrollParent, event, callback, scrollParents) {
	  var isBody = scrollParent.nodeName === 'BODY';
	  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
	  target.addEventListener(event, callback, { passive: true });

	  if (!isBody) {
	    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
	  }
	  scrollParents.push(target);
	}

	/**
	 * Setup needed event listeners used to update the popper position
	 * @method
	 * @memberof Popper.Utils
	 * @private
	 */
	function setupEventListeners(reference, options, state, updateBound) {
	  // Resize event listener on window
	  state.updateBound = updateBound;
	  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

	  // Scroll event listener on scroll parents
	  var scrollElement = getScrollParent(reference);
	  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
	  state.scrollElement = scrollElement;
	  state.eventsEnabled = true;

	  return state;
	}

	/**
	 * It will add resize/scroll events and start recalculating
	 * position of the popper element when they are triggered.
	 * @method
	 * @memberof Popper
	 */
	function enableEventListeners() {
	  if (!this.state.eventsEnabled) {
	    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
	  }
	}

	/**
	 * Remove event listeners used to update the popper position
	 * @method
	 * @memberof Popper.Utils
	 * @private
	 */
	function removeEventListeners(reference, state) {
	  // Remove resize event listener on window
	  getWindow(reference).removeEventListener('resize', state.updateBound);

	  // Remove scroll event listener on scroll parents
	  state.scrollParents.forEach(function (target) {
	    target.removeEventListener('scroll', state.updateBound);
	  });

	  // Reset state
	  state.updateBound = null;
	  state.scrollParents = [];
	  state.scrollElement = null;
	  state.eventsEnabled = false;
	  return state;
	}

	/**
	 * It will remove resize/scroll events and won't recalculate popper position
	 * when they are triggered. It also won't trigger onUpdate callback anymore,
	 * unless you call `update` method manually.
	 * @method
	 * @memberof Popper
	 */
	function disableEventListeners() {
	  if (this.state.eventsEnabled) {
	    window.cancelAnimationFrame(this.scheduleUpdate);
	    this.state = removeEventListeners(this.reference, this.state);
	  }
	}

	/**
	 * Tells if a given input is a number
	 * @method
	 * @memberof Popper.Utils
	 * @param {*} input to check
	 * @return {Boolean}
	 */
	function isNumeric(n) {
	  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
	}

	/**
	 * Set the style to the given popper
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element - Element to apply the style to
	 * @argument {Object} styles
	 * Object with a list of properties and values which will be applied to the element
	 */
	function setStyles(element, styles) {
	  Object.keys(styles).forEach(function (prop) {
	    var unit = '';
	    // add unit if the value is numeric and is one of the following
	    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
	      unit = 'px';
	    }
	    element.style[prop] = styles[prop] + unit;
	  });
	}

	/**
	 * Set the attributes to the given popper
	 * @method
	 * @memberof Popper.Utils
	 * @argument {Element} element - Element to apply the attributes to
	 * @argument {Object} styles
	 * Object with a list of properties and values which will be applied to the element
	 */
	function setAttributes(element, attributes) {
	  Object.keys(attributes).forEach(function (prop) {
	    var value = attributes[prop];
	    if (value !== false) {
	      element.setAttribute(prop, attributes[prop]);
	    } else {
	      element.removeAttribute(prop);
	    }
	  });
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} data.styles - List of style properties - values to apply to popper element
	 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The same data object
	 */
	function applyStyle(data) {
	  // any property present in `data.styles` will be applied to the popper,
	  // in this way we can make the 3rd party modifiers add custom styles to it
	  // Be aware, modifiers could override the properties defined in the previous
	  // lines of this modifier!
	  setStyles(data.instance.popper, data.styles);

	  // any property present in `data.attributes` will be applied to the popper,
	  // they will be set as HTML attributes of the element
	  setAttributes(data.instance.popper, data.attributes);

	  // if arrowElement is defined and arrowStyles has some properties
	  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
	    setStyles(data.arrowElement, data.arrowStyles);
	  }

	  return data;
	}

	/**
	 * Set the x-placement attribute before everything else because it could be used
	 * to add margins to the popper margins needs to be calculated to get the
	 * correct popper offsets.
	 * @method
	 * @memberof Popper.modifiers
	 * @param {HTMLElement} reference - The reference element used to position the popper
	 * @param {HTMLElement} popper - The HTML element used as popper.
	 * @param {Object} options - Popper.js options
	 */
	function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
	  // compute reference element offsets
	  var referenceOffsets = getReferenceOffsets(state, popper, reference);

	  // compute auto placement, store placement inside the data object,
	  // modifiers will be able to edit `placement` if needed
	  // and refer to originalPlacement to know the original value
	  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

	  popper.setAttribute('x-placement', placement);

	  // Apply `position` to popper before anything else because
	  // without the position applied we can't guarantee correct computations
	  setStyles(popper, { position: 'absolute' });

	  return options;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function computeStyle(data, options) {
	  var x = options.x,
	      y = options.y;
	  var popper = data.offsets.popper;

	  // Remove this legacy support in Popper.js v2

	  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
	    return modifier.name === 'applyStyle';
	  }).gpuAcceleration;
	  if (legacyGpuAccelerationOption !== undefined) {
	    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
	  }
	  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

	  var offsetParent = getOffsetParent(data.instance.popper);
	  var offsetParentRect = getBoundingClientRect(offsetParent);

	  // Styles
	  var styles = {
	    position: popper.position
	  };

	  // floor sides to avoid blurry text
	  var offsets = {
	    left: Math.floor(popper.left),
	    top: Math.floor(popper.top),
	    bottom: Math.floor(popper.bottom),
	    right: Math.floor(popper.right)
	  };

	  var sideA = x === 'bottom' ? 'top' : 'bottom';
	  var sideB = y === 'right' ? 'left' : 'right';

	  // if gpuAcceleration is set to `true` and transform is supported,
	  //  we use `translate3d` to apply the position to the popper we
	  // automatically use the supported prefixed version if needed
	  var prefixedProperty = getSupportedPropertyName('transform');

	  // now, let's make a step back and look at this code closely (wtf?)
	  // If the content of the popper grows once it's been positioned, it
	  // may happen that the popper gets misplaced because of the new content
	  // overflowing its reference element
	  // To avoid this problem, we provide two options (x and y), which allow
	  // the consumer to define the offset origin.
	  // If we position a popper on top of a reference element, we can set
	  // `x` to `top` to make the popper grow towards its top instead of
	  // its bottom.
	  var left = void 0,
	      top = void 0;
	  if (sideA === 'bottom') {
	    top = -offsetParentRect.height + offsets.bottom;
	  } else {
	    top = offsets.top;
	  }
	  if (sideB === 'right') {
	    left = -offsetParentRect.width + offsets.right;
	  } else {
	    left = offsets.left;
	  }
	  if (gpuAcceleration && prefixedProperty) {
	    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
	    styles[sideA] = 0;
	    styles[sideB] = 0;
	    styles.willChange = 'transform';
	  } else {
	    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
	    var invertTop = sideA === 'bottom' ? -1 : 1;
	    var invertLeft = sideB === 'right' ? -1 : 1;
	    styles[sideA] = top * invertTop;
	    styles[sideB] = left * invertLeft;
	    styles.willChange = sideA + ', ' + sideB;
	  }

	  // Attributes
	  var attributes = {
	    'x-placement': data.placement
	  };

	  // Update `data` attributes, styles and arrowStyles
	  data.attributes = _extends({}, attributes, data.attributes);
	  data.styles = _extends({}, styles, data.styles);
	  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);

	  return data;
	}

	/**
	 * Helper used to know if the given modifier depends from another one.<br />
	 * It checks if the needed modifier is listed and enabled.
	 * @method
	 * @memberof Popper.Utils
	 * @param {Array} modifiers - list of modifiers
	 * @param {String} requestingName - name of requesting modifier
	 * @param {String} requestedName - name of requested modifier
	 * @returns {Boolean}
	 */
	function isModifierRequired(modifiers, requestingName, requestedName) {
	  var requesting = find(modifiers, function (_ref) {
	    var name = _ref.name;
	    return name === requestingName;
	  });

	  var isRequired = !!requesting && modifiers.some(function (modifier) {
	    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
	  });

	  if (!isRequired) {
	    var _requesting = '`' + requestingName + '`';
	    var requested = '`' + requestedName + '`';
	    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
	  }
	  return isRequired;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function arrow(data, options) {
	  // arrow depends on keepTogether in order to work
	  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
	    return data;
	  }

	  var arrowElement = options.element;

	  // if arrowElement is a string, suppose it's a CSS selector
	  if (typeof arrowElement === 'string') {
	    arrowElement = data.instance.popper.querySelector(arrowElement);

	    // if arrowElement is not found, don't run the modifier
	    if (!arrowElement) {
	      return data;
	    }
	  } else {
	    // if the arrowElement isn't a query selector we must check that the
	    // provided DOM node is child of its popper node
	    if (!data.instance.popper.contains(arrowElement)) {
	      console.warn('WARNING: `arrow.element` must be child of its popper element!');
	      return data;
	    }
	  }

	  var placement = data.placement.split('-')[0];
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;

	  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

	  var len = isVertical ? 'height' : 'width';
	  var sideCapitalized = isVertical ? 'Top' : 'Left';
	  var side = sideCapitalized.toLowerCase();
	  var altSide = isVertical ? 'left' : 'top';
	  var opSide = isVertical ? 'bottom' : 'right';
	  var arrowElementSize = getOuterSizes(arrowElement)[len];

	  //
	  // extends keepTogether behavior making sure the popper and its
	  // reference have enough pixels in conjuction
	  //

	  // top/left side
	  if (reference[opSide] - arrowElementSize < popper[side]) {
	    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
	  }
	  // bottom/right side
	  if (reference[side] + arrowElementSize > popper[opSide]) {
	    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
	  }

	  // compute center of the popper
	  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

	  // Compute the sideValue using the updated popper offsets
	  // take popper margin in account because we don't have this info available
	  var popperMarginSide = getStyleComputedProperty(data.instance.popper, 'margin' + sideCapitalized).replace('px', '');
	  var sideValue = center - getClientRect(data.offsets.popper)[side] - popperMarginSide;

	  // prevent arrowElement from being placed not contiguously to its popper
	  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

	  data.arrowElement = arrowElement;
	  data.offsets.arrow = {};
	  data.offsets.arrow[side] = Math.round(sideValue);
	  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node

	  return data;
	}

	/**
	 * Get the opposite placement variation of the given one
	 * @method
	 * @memberof Popper.Utils
	 * @argument {String} placement variation
	 * @returns {String} flipped placement variation
	 */
	function getOppositeVariation(variation) {
	  if (variation === 'end') {
	    return 'start';
	  } else if (variation === 'start') {
	    return 'end';
	  }
	  return variation;
	}

	/**
	 * List of accepted placements to use as values of the `placement` option.<br />
	 * Valid placements are:
	 * - `auto`
	 * - `top`
	 * - `right`
	 * - `bottom`
	 * - `left`
	 *
	 * Each placement can have a variation from this list:
	 * - `-start`
	 * - `-end`
	 *
	 * Variations are interpreted easily if you think of them as the left to right
	 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
	 * is right.<br />
	 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
	 *
	 * Some valid examples are:
	 * - `top-end` (on top of reference, right aligned)
	 * - `right-start` (on right of reference, top aligned)
	 * - `bottom` (on bottom, centered)
	 * - `auto-right` (on the side with more space available, alignment depends by placement)
	 *
	 * @static
	 * @type {Array}
	 * @enum {String}
	 * @readonly
	 * @method placements
	 * @memberof Popper
	 */
	var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

	// Get rid of `auto` `auto-start` and `auto-end`
	var validPlacements = placements.slice(3);

	/**
	 * Given an initial placement, returns all the subsequent placements
	 * clockwise (or counter-clockwise).
	 *
	 * @method
	 * @memberof Popper.Utils
	 * @argument {String} placement - A valid placement (it accepts variations)
	 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
	 * @returns {Array} placements including their variations
	 */
	function clockwise(placement) {
	  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	  var index = validPlacements.indexOf(placement);
	  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
	  return counter ? arr.reverse() : arr;
	}

	var BEHAVIORS = {
	  FLIP: 'flip',
	  CLOCKWISE: 'clockwise',
	  COUNTERCLOCKWISE: 'counterclockwise'
	};

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function flip(data, options) {
	  // if `inner` modifier is enabled, we can't use the `flip` modifier
	  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
	    return data;
	  }

	  if (data.flipped && data.placement === data.originalPlacement) {
	    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
	    return data;
	  }

	  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);

	  var placement = data.placement.split('-')[0];
	  var placementOpposite = getOppositePlacement(placement);
	  var variation = data.placement.split('-')[1] || '';

	  var flipOrder = [];

	  switch (options.behavior) {
	    case BEHAVIORS.FLIP:
	      flipOrder = [placement, placementOpposite];
	      break;
	    case BEHAVIORS.CLOCKWISE:
	      flipOrder = clockwise(placement);
	      break;
	    case BEHAVIORS.COUNTERCLOCKWISE:
	      flipOrder = clockwise(placement, true);
	      break;
	    default:
	      flipOrder = options.behavior;
	  }

	  flipOrder.forEach(function (step, index) {
	    if (placement !== step || flipOrder.length === index + 1) {
	      return data;
	    }

	    placement = data.placement.split('-')[0];
	    placementOpposite = getOppositePlacement(placement);

	    var popperOffsets = data.offsets.popper;
	    var refOffsets = data.offsets.reference;

	    // using floor because the reference offsets may contain decimals we are not going to consider here
	    var floor = Math.floor;
	    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

	    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
	    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
	    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
	    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

	    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

	    // flip the variation if required
	    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
	    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

	    if (overlapsRef || overflowsBoundaries || flippedVariation) {
	      // this boolean to detect any flip loop
	      data.flipped = true;

	      if (overlapsRef || overflowsBoundaries) {
	        placement = flipOrder[index + 1];
	      }

	      if (flippedVariation) {
	        variation = getOppositeVariation(variation);
	      }

	      data.placement = placement + (variation ? '-' + variation : '');

	      // this object contains `position`, we want to preserve it along with
	      // any additional property we may add in the future
	      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

	      data = runModifiers(data.instance.modifiers, data, 'flip');
	    }
	  });
	  return data;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function keepTogether(data) {
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;

	  var placement = data.placement.split('-')[0];
	  var floor = Math.floor;
	  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
	  var side = isVertical ? 'right' : 'bottom';
	  var opSide = isVertical ? 'left' : 'top';
	  var measurement = isVertical ? 'width' : 'height';

	  if (popper[side] < floor(reference[opSide])) {
	    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
	  }
	  if (popper[opSide] > floor(reference[side])) {
	    data.offsets.popper[opSide] = floor(reference[side]);
	  }

	  return data;
	}

	/**
	 * Converts a string containing value + unit into a px value number
	 * @function
	 * @memberof {modifiers~offset}
	 * @private
	 * @argument {String} str - Value + unit string
	 * @argument {String} measurement - `height` or `width`
	 * @argument {Object} popperOffsets
	 * @argument {Object} referenceOffsets
	 * @returns {Number|String}
	 * Value in pixels, or original string if no values were extracted
	 */
	function toValue(str, measurement, popperOffsets, referenceOffsets) {
	  // separate value from unit
	  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
	  var value = +split[1];
	  var unit = split[2];

	  // If it's not a number it's an operator, I guess
	  if (!value) {
	    return str;
	  }

	  if (unit.indexOf('%') === 0) {
	    var element = void 0;
	    switch (unit) {
	      case '%p':
	        element = popperOffsets;
	        break;
	      case '%':
	      case '%r':
	      default:
	        element = referenceOffsets;
	    }

	    var rect = getClientRect(element);
	    return rect[measurement] / 100 * value;
	  } else if (unit === 'vh' || unit === 'vw') {
	    // if is a vh or vw, we calculate the size based on the viewport
	    var size = void 0;
	    if (unit === 'vh') {
	      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
	    } else {
	      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
	    }
	    return size / 100 * value;
	  } else {
	    // if is an explicit pixel unit, we get rid of the unit and keep the value
	    // if is an implicit unit, it's px, and we return just the value
	    return value;
	  }
	}

	/**
	 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
	 * @function
	 * @memberof {modifiers~offset}
	 * @private
	 * @argument {String} offset
	 * @argument {Object} popperOffsets
	 * @argument {Object} referenceOffsets
	 * @argument {String} basePlacement
	 * @returns {Array} a two cells array with x and y offsets in numbers
	 */
	function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
	  var offsets = [0, 0];

	  // Use height if placement is left or right and index is 0 otherwise use width
	  // in this way the first offset will use an axis and the second one
	  // will use the other one
	  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

	  // Split the offset string to obtain a list of values and operands
	  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
	  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
	    return frag.trim();
	  });

	  // Detect if the offset string contains a pair of values or a single one
	  // they could be separated by comma or space
	  var divider = fragments.indexOf(find(fragments, function (frag) {
	    return frag.search(/,|\s/) !== -1;
	  }));

	  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
	    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
	  }

	  // If divider is found, we divide the list of values and operands to divide
	  // them by ofset X and Y.
	  var splitRegex = /\s*,\s*|\s+/;
	  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

	  // Convert the values with units to absolute pixels to allow our computations
	  ops = ops.map(function (op, index) {
	    // Most of the units rely on the orientation of the popper
	    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
	    var mergeWithPrevious = false;
	    return op
	    // This aggregates any `+` or `-` sign that aren't considered operators
	    // e.g.: 10 + +5 => [10, +, +5]
	    .reduce(function (a, b) {
	      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
	        a[a.length - 1] = b;
	        mergeWithPrevious = true;
	        return a;
	      } else if (mergeWithPrevious) {
	        a[a.length - 1] += b;
	        mergeWithPrevious = false;
	        return a;
	      } else {
	        return a.concat(b);
	      }
	    }, [])
	    // Here we convert the string values into number values (in px)
	    .map(function (str) {
	      return toValue(str, measurement, popperOffsets, referenceOffsets);
	    });
	  });

	  // Loop trough the offsets arrays and execute the operations
	  ops.forEach(function (op, index) {
	    op.forEach(function (frag, index2) {
	      if (isNumeric(frag)) {
	        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
	      }
	    });
	  });
	  return offsets;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @argument {Number|String} options.offset=0
	 * The offset value as described in the modifier description
	 * @returns {Object} The data object, properly modified
	 */
	function offset(data, _ref) {
	  var offset = _ref.offset;
	  var placement = data.placement,
	      _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;

	  var basePlacement = placement.split('-')[0];

	  var offsets = void 0;
	  if (isNumeric(+offset)) {
	    offsets = [+offset, 0];
	  } else {
	    offsets = parseOffset(offset, popper, reference, basePlacement);
	  }

	  if (basePlacement === 'left') {
	    popper.top += offsets[0];
	    popper.left -= offsets[1];
	  } else if (basePlacement === 'right') {
	    popper.top += offsets[0];
	    popper.left += offsets[1];
	  } else if (basePlacement === 'top') {
	    popper.left += offsets[0];
	    popper.top -= offsets[1];
	  } else if (basePlacement === 'bottom') {
	    popper.left += offsets[0];
	    popper.top += offsets[1];
	  }

	  data.popper = popper;
	  return data;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function preventOverflow(data, options) {
	  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

	  // If offsetParent is the reference element, we really want to
	  // go one step up and use the next offsetParent as reference to
	  // avoid to make this modifier completely useless and look like broken
	  if (data.instance.reference === boundariesElement) {
	    boundariesElement = getOffsetParent(boundariesElement);
	  }

	  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);
	  options.boundaries = boundaries;

	  var order = options.priority;
	  var popper = data.offsets.popper;

	  var check = {
	    primary: function primary(placement) {
	      var value = popper[placement];
	      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
	        value = Math.max(popper[placement], boundaries[placement]);
	      }
	      return defineProperty({}, placement, value);
	    },
	    secondary: function secondary(placement) {
	      var mainSide = placement === 'right' ? 'left' : 'top';
	      var value = popper[mainSide];
	      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
	        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
	      }
	      return defineProperty({}, mainSide, value);
	    }
	  };

	  order.forEach(function (placement) {
	    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
	    popper = _extends({}, popper, check[side](placement));
	  });

	  data.offsets.popper = popper;

	  return data;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function shift(data) {
	  var placement = data.placement;
	  var basePlacement = placement.split('-')[0];
	  var shiftvariation = placement.split('-')[1];

	  // if shift shiftvariation is specified, run the modifier
	  if (shiftvariation) {
	    var _data$offsets = data.offsets,
	        reference = _data$offsets.reference,
	        popper = _data$offsets.popper;

	    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
	    var side = isVertical ? 'left' : 'top';
	    var measurement = isVertical ? 'width' : 'height';

	    var shiftOffsets = {
	      start: defineProperty({}, side, reference[side]),
	      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
	    };

	    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
	  }

	  return data;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by update method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function hide(data) {
	  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
	    return data;
	  }

	  var refRect = data.offsets.reference;
	  var bound = find(data.instance.modifiers, function (modifier) {
	    return modifier.name === 'preventOverflow';
	  }).boundaries;

	  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
	    // Avoid unnecessary DOM access if visibility hasn't changed
	    if (data.hide === true) {
	      return data;
	    }

	    data.hide = true;
	    data.attributes['x-out-of-boundaries'] = '';
	  } else {
	    // Avoid unnecessary DOM access if visibility hasn't changed
	    if (data.hide === false) {
	      return data;
	    }

	    data.hide = false;
	    data.attributes['x-out-of-boundaries'] = false;
	  }

	  return data;
	}

	/**
	 * @function
	 * @memberof Modifiers
	 * @argument {Object} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {Object} The data object, properly modified
	 */
	function inner(data) {
	  var placement = data.placement;
	  var basePlacement = placement.split('-')[0];
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;

	  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

	  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

	  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

	  data.placement = getOppositePlacement(placement);
	  data.offsets.popper = getClientRect(popper);

	  return data;
	}

	/**
	 * Modifier function, each modifier can have a function of this type assigned
	 * to its `fn` property.<br />
	 * These functions will be called on each update, this means that you must
	 * make sure they are performant enough to avoid performance bottlenecks.
	 *
	 * @function ModifierFn
	 * @argument {dataObject} data - The data object generated by `update` method
	 * @argument {Object} options - Modifiers configuration and options
	 * @returns {dataObject} The data object, properly modified
	 */

	/**
	 * Modifiers are plugins used to alter the behavior of your poppers.<br />
	 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
	 * needed by the library.
	 *
	 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
	 * All the other properties are configurations that could be tweaked.
	 * @namespace modifiers
	 */
	var modifiers = {
	  /**
	   * Modifier used to shift the popper on the start or end of its reference
	   * element.<br />
	   * It will read the variation of the `placement` property.<br />
	   * It can be one either `-end` or `-start`.
	   * @memberof modifiers
	   * @inner
	   */
	  shift: {
	    /** @prop {number} order=100 - Index used to define the order of execution */
	    order: 100,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: shift
	  },

	  /**
	   * The `offset` modifier can shift your popper on both its axis.
	   *
	   * It accepts the following units:
	   * - `px` or unitless, interpreted as pixels
	   * - `%` or `%r`, percentage relative to the length of the reference element
	   * - `%p`, percentage relative to the length of the popper element
	   * - `vw`, CSS viewport width unit
	   * - `vh`, CSS viewport height unit
	   *
	   * For length is intended the main axis relative to the placement of the popper.<br />
	   * This means that if the placement is `top` or `bottom`, the length will be the
	   * `width`. In case of `left` or `right`, it will be the height.
	   *
	   * You can provide a single value (as `Number` or `String`), or a pair of values
	   * as `String` divided by a comma or one (or more) white spaces.<br />
	   * The latter is a deprecated method because it leads to confusion and will be
	   * removed in v2.<br />
	   * Additionally, it accepts additions and subtractions between different units.
	   * Note that multiplications and divisions aren't supported.
	   *
	   * Valid examples are:
	   * ```
	   * 10
	   * '10%'
	   * '10, 10'
	   * '10%, 10'
	   * '10 + 10%'
	   * '10 - 5vh + 3%'
	   * '-10px + 5vh, 5px - 6%'
	   * ```
	   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
	   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
	   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)
	   *
	   * @memberof modifiers
	   * @inner
	   */
	  offset: {
	    /** @prop {number} order=200 - Index used to define the order of execution */
	    order: 200,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: offset,
	    /** @prop {Number|String} offset=0
	     * The offset value as described in the modifier description
	     */
	    offset: 0
	  },

	  /**
	   * Modifier used to prevent the popper from being positioned outside the boundary.
	   *
	   * An scenario exists where the reference itself is not within the boundaries.<br />
	   * We can say it has "escaped the boundaries" — or just "escaped".<br />
	   * In this case we need to decide whether the popper should either:
	   *
	   * - detach from the reference and remain "trapped" in the boundaries, or
	   * - if it should ignore the boundary and "escape with its reference"
	   *
	   * When `escapeWithReference` is set to`true` and reference is completely
	   * outside its boundaries, the popper will overflow (or completely leave)
	   * the boundaries in order to remain attached to the edge of the reference.
	   *
	   * @memberof modifiers
	   * @inner
	   */
	  preventOverflow: {
	    /** @prop {number} order=300 - Index used to define the order of execution */
	    order: 300,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: preventOverflow,
	    /**
	     * @prop {Array} [priority=['left','right','top','bottom']]
	     * Popper will try to prevent overflow following these priorities by default,
	     * then, it could overflow on the left and on top of the `boundariesElement`
	     */
	    priority: ['left', 'right', 'top', 'bottom'],
	    /**
	     * @prop {number} padding=5
	     * Amount of pixel used to define a minimum distance between the boundaries
	     * and the popper this makes sure the popper has always a little padding
	     * between the edges of its container
	     */
	    padding: 5,
	    /**
	     * @prop {String|HTMLElement} boundariesElement='scrollParent'
	     * Boundaries used by the modifier, can be `scrollParent`, `window`,
	     * `viewport` or any DOM element.
	     */
	    boundariesElement: 'scrollParent'
	  },

	  /**
	   * Modifier used to make sure the reference and its popper stay near eachothers
	   * without leaving any gap between the two. Expecially useful when the arrow is
	   * enabled and you want to assure it to point to its reference element.
	   * It cares only about the first axis, you can still have poppers with margin
	   * between the popper and its reference element.
	   * @memberof modifiers
	   * @inner
	   */
	  keepTogether: {
	    /** @prop {number} order=400 - Index used to define the order of execution */
	    order: 400,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: keepTogether
	  },

	  /**
	   * This modifier is used to move the `arrowElement` of the popper to make
	   * sure it is positioned between the reference element and its popper element.
	   * It will read the outer size of the `arrowElement` node to detect how many
	   * pixels of conjuction are needed.
	   *
	   * It has no effect if no `arrowElement` is provided.
	   * @memberof modifiers
	   * @inner
	   */
	  arrow: {
	    /** @prop {number} order=500 - Index used to define the order of execution */
	    order: 500,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: arrow,
	    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
	    element: '[x-arrow]'
	  },

	  /**
	   * Modifier used to flip the popper's placement when it starts to overlap its
	   * reference element.
	   *
	   * Requires the `preventOverflow` modifier before it in order to work.
	   *
	   * **NOTE:** this modifier will interrupt the current update cycle and will
	   * restart it if it detects the need to flip the placement.
	   * @memberof modifiers
	   * @inner
	   */
	  flip: {
	    /** @prop {number} order=600 - Index used to define the order of execution */
	    order: 600,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: flip,
	    /**
	     * @prop {String|Array} behavior='flip'
	     * The behavior used to change the popper's placement. It can be one of
	     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
	     * placements (with optional variations).
	     */
	    behavior: 'flip',
	    /**
	     * @prop {number} padding=5
	     * The popper will flip if it hits the edges of the `boundariesElement`
	     */
	    padding: 5,
	    /**
	     * @prop {String|HTMLElement} boundariesElement='viewport'
	     * The element which will define the boundaries of the popper position,
	     * the popper will never be placed outside of the defined boundaries
	     * (except if keepTogether is enabled)
	     */
	    boundariesElement: 'viewport'
	  },

	  /**
	   * Modifier used to make the popper flow toward the inner of the reference element.
	   * By default, when this modifier is disabled, the popper will be placed outside
	   * the reference element.
	   * @memberof modifiers
	   * @inner
	   */
	  inner: {
	    /** @prop {number} order=700 - Index used to define the order of execution */
	    order: 700,
	    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
	    enabled: false,
	    /** @prop {ModifierFn} */
	    fn: inner
	  },

	  /**
	   * Modifier used to hide the popper when its reference element is outside of the
	   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
	   * be used to hide with a CSS selector the popper when its reference is
	   * out of boundaries.
	   *
	   * Requires the `preventOverflow` modifier before it in order to work.
	   * @memberof modifiers
	   * @inner
	   */
	  hide: {
	    /** @prop {number} order=800 - Index used to define the order of execution */
	    order: 800,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: hide
	  },

	  /**
	   * Computes the style that will be applied to the popper element to gets
	   * properly positioned.
	   *
	   * Note that this modifier will not touch the DOM, it just prepares the styles
	   * so that `applyStyle` modifier can apply it. This separation is useful
	   * in case you need to replace `applyStyle` with a custom implementation.
	   *
	   * This modifier has `850` as `order` value to maintain backward compatibility
	   * with previous versions of Popper.js. Expect the modifiers ordering method
	   * to change in future major versions of the library.
	   *
	   * @memberof modifiers
	   * @inner
	   */
	  computeStyle: {
	    /** @prop {number} order=850 - Index used to define the order of execution */
	    order: 850,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: computeStyle,
	    /**
	     * @prop {Boolean} gpuAcceleration=true
	     * If true, it uses the CSS 3d transformation to position the popper.
	     * Otherwise, it will use the `top` and `left` properties.
	     */
	    gpuAcceleration: true,
	    /**
	     * @prop {string} [x='bottom']
	     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
	     * Change this if your popper should grow in a direction different from `bottom`
	     */
	    x: 'bottom',
	    /**
	     * @prop {string} [x='left']
	     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
	     * Change this if your popper should grow in a direction different from `right`
	     */
	    y: 'right'
	  },

	  /**
	   * Applies the computed styles to the popper element.
	   *
	   * All the DOM manipulations are limited to this modifier. This is useful in case
	   * you want to integrate Popper.js inside a framework or view library and you
	   * want to delegate all the DOM manipulations to it.
	   *
	   * Note that if you disable this modifier, you must make sure the popper element
	   * has its position set to `absolute` before Popper.js can do its work!
	   *
	   * Just disable this modifier and define you own to achieve the desired effect.
	   *
	   * @memberof modifiers
	   * @inner
	   */
	  applyStyle: {
	    /** @prop {number} order=900 - Index used to define the order of execution */
	    order: 900,
	    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
	    enabled: true,
	    /** @prop {ModifierFn} */
	    fn: applyStyle,
	    /** @prop {Function} */
	    onLoad: applyStyleOnLoad,
	    /**
	     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
	     * @prop {Boolean} gpuAcceleration=true
	     * If true, it uses the CSS 3d transformation to position the popper.
	     * Otherwise, it will use the `top` and `left` properties.
	     */
	    gpuAcceleration: undefined
	  }
	};

	/**
	 * The `dataObject` is an object containing all the informations used by Popper.js
	 * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
	 * @name dataObject
	 * @property {Object} data.instance The Popper.js instance
	 * @property {String} data.placement Placement applied to popper
	 * @property {String} data.originalPlacement Placement originally defined on init
	 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
	 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.
	 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
	 * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)
	 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)
	 * @property {Object} data.boundaries Offsets of the popper boundaries
	 * @property {Object} data.offsets The measurements of popper, reference and arrow elements.
	 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
	 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
	 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
	 */

	/**
	 * Default options provided to Popper.js constructor.<br />
	 * These can be overriden using the `options` argument of Popper.js.<br />
	 * To override an option, simply pass as 3rd argument an object with the same
	 * structure of this object, example:
	 * ```
	 * new Popper(ref, pop, {
	 *   modifiers: {
	 *     preventOverflow: { enabled: false }
	 *   }
	 * })
	 * ```
	 * @type {Object}
	 * @static
	 * @memberof Popper
	 */
	var Defaults = {
	  /**
	   * Popper's placement
	   * @prop {Popper.placements} placement='bottom'
	   */
	  placement: 'bottom',

	  /**
	   * Whether events (resize, scroll) are initially enabled
	   * @prop {Boolean} eventsEnabled=true
	   */
	  eventsEnabled: true,

	  /**
	   * Set to true if you want to automatically remove the popper when
	   * you call the `destroy` method.
	   * @prop {Boolean} removeOnDestroy=false
	   */
	  removeOnDestroy: false,

	  /**
	   * Callback called when the popper is created.<br />
	   * By default, is set to no-op.<br />
	   * Access Popper.js instance with `data.instance`.
	   * @prop {onCreate}
	   */
	  onCreate: function onCreate() {},

	  /**
	   * Callback called when the popper is updated, this callback is not called
	   * on the initialization/creation of the popper, but only on subsequent
	   * updates.<br />
	   * By default, is set to no-op.<br />
	   * Access Popper.js instance with `data.instance`.
	   * @prop {onUpdate}
	   */
	  onUpdate: function onUpdate() {},

	  /**
	   * List of modifiers used to modify the offsets before they are applied to the popper.
	   * They provide most of the functionalities of Popper.js
	   * @prop {modifiers}
	   */
	  modifiers: modifiers
	};

	/**
	 * @callback onCreate
	 * @param {dataObject} data
	 */

	/**
	 * @callback onUpdate
	 * @param {dataObject} data
	 */

	// Utils
	// Methods
	var Popper = function () {
	  /**
	   * Create a new Popper.js instance
	   * @class Popper
	   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper
	   * @param {HTMLElement} popper - The HTML element used as popper.
	   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
	   * @return {Object} instance - The generated Popper.js instance
	   */
	  function Popper(reference, popper) {
	    var _this = this;

	    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	    classCallCheck(this, Popper);

	    this.scheduleUpdate = function () {
	      return requestAnimationFrame(_this.update);
	    };

	    // make update() debounced, so that it only runs at most once-per-tick
	    this.update = debounce(this.update.bind(this));

	    // with {} we create a new object with the options inside it
	    this.options = _extends({}, Popper.Defaults, options);

	    // init state
	    this.state = {
	      isDestroyed: false,
	      isCreated: false,
	      scrollParents: []
	    };

	    // get reference and popper elements (allow jQuery wrappers)
	    this.reference = reference && reference.jquery ? reference[0] : reference;
	    this.popper = popper && popper.jquery ? popper[0] : popper;

	    // Deep merge modifiers options
	    this.options.modifiers = {};
	    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
	      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
	    });

	    // Refactoring modifiers' list (Object => Array)
	    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
	      return _extends({
	        name: name
	      }, _this.options.modifiers[name]);
	    })
	    // sort the modifiers by order
	    .sort(function (a, b) {
	      return a.order - b.order;
	    });

	    // modifiers have the ability to execute arbitrary code when Popper.js get inited
	    // such code is executed in the same order of its modifier
	    // they could add new properties to their options configuration
	    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
	    this.modifiers.forEach(function (modifierOptions) {
	      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
	        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
	      }
	    });

	    // fire the first update to position the popper in the right place
	    this.update();

	    var eventsEnabled = this.options.eventsEnabled;
	    if (eventsEnabled) {
	      // setup event listeners, they will take care of update the position in specific situations
	      this.enableEventListeners();
	    }

	    this.state.eventsEnabled = eventsEnabled;
	  }

	  // We can't use class properties because they don't get listed in the
	  // class prototype and break stuff like Sinon stubs


	  createClass(Popper, [{
	    key: 'update',
	    value: function update$$1() {
	      return update.call(this);
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy$$1() {
	      return destroy.call(this);
	    }
	  }, {
	    key: 'enableEventListeners',
	    value: function enableEventListeners$$1() {
	      return enableEventListeners.call(this);
	    }
	  }, {
	    key: 'disableEventListeners',
	    value: function disableEventListeners$$1() {
	      return disableEventListeners.call(this);
	    }

	    /**
	     * Schedule an update, it will run on the next UI update available
	     * @method scheduleUpdate
	     * @memberof Popper
	     */


	    /**
	     * Collection of utilities useful when writing custom modifiers.
	     * Starting from version 1.7, this method is available only if you
	     * include `popper-utils.js` before `popper.js`.
	     *
	     * **DEPRECATION**: This way to access PopperUtils is deprecated
	     * and will be removed in v2! Use the PopperUtils module directly instead.
	     * Due to the high instability of the methods contained in Utils, we can't
	     * guarantee them to follow semver. Use them at your own risk!
	     * @static
	     * @private
	     * @type {Object}
	     * @deprecated since version 1.8
	     * @member Utils
	     * @memberof Popper
	     */

	  }]);
	  return Popper;
	}();

	/**
	 * The `referenceObject` is an object that provides an interface compatible with Popper.js
	 * and lets you use it as replacement of a real DOM node.<br />
	 * You can use this method to position a popper relatively to a set of coordinates
	 * in case you don't have a DOM node to use as reference.
	 *
	 * ```
	 * new Popper(referenceObject, popperNode);
	 * ```
	 *
	 * NB: This feature isn't supported in Internet Explorer 10
	 * @name referenceObject
	 * @property {Function} data.getBoundingClientRect
	 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
	 * @property {number} data.clientWidth
	 * An ES6 getter that will return the width of the virtual reference element.
	 * @property {number} data.clientHeight
	 * An ES6 getter that will return the height of the virtual reference element.
	 */


	Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
	Popper.placements = placements;
	Popper.Defaults = Defaults;

	/* harmony default export */ __webpack_exports__["default"] = (Popper);
	//# sourceMappingURL=popper.js.map

	/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(17)))

	/***/ }),
	/* 200 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdArrowRightIcon.vue
	var MdArrowRightIcon = __webpack_require__(201);
	var MdArrowRightIcon_default = /*#__PURE__*/__webpack_require__.n(MdArrowRightIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-1e23e1bf","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdArrowRightIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(0)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [
	      _c(
	        "svg",
	        {
	          attrs: {
	            height: "24",
	            viewBox: "0 0 24 24",
	            width: "24",
	            xmlns: "http://www.w3.org/2000/svg"
	          }
	        },
	        [
	          _c("path", {
	            attrs: { d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z" }
	          }),
	          _vm._v(" "),
	          _c("path", { attrs: { d: "M0-.25h24v24H0z", fill: "none" } })
	        ]
	      )
	    ])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdArrowRightIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-1e23e1bf", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdArrowRightIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdArrowRightIcon_default.a,
	  icons_MdArrowRightIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdArrowRightIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-1e23e1bf", Component.options)
	  } else {
	    hotAPI.reload("data-v-1e23e1bf", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdArrowRightIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 201 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdArrowRightIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 202 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdArrowLeftIcon.vue
	var MdArrowLeftIcon = __webpack_require__(203);
	var MdArrowLeftIcon_default = /*#__PURE__*/__webpack_require__.n(MdArrowLeftIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-5cc7b6f4","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdArrowLeftIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(0)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [
	      _c(
	        "svg",
	        {
	          attrs: {
	            height: "24",
	            viewBox: "0 0 24 24",
	            width: "24",
	            xmlns: "http://www.w3.org/2000/svg"
	          }
	        },
	        [
	          _c("path", {
	            attrs: { d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z" }
	          }),
	          _vm._v(" "),
	          _c("path", { attrs: { d: "M0-.5h24v24H0z", fill: "none" } })
	        ]
	      )
	    ])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdArrowLeftIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-5cc7b6f4", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdArrowLeftIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdArrowLeftIcon_default.a,
	  icons_MdArrowLeftIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdArrowLeftIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-5cc7b6f4", Component.options)
	  } else {
	    hotAPI.reload("data-v-5cc7b6f4", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdArrowLeftIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 203 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdArrowLeftIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 204 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 205 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdPortal = __webpack_require__(16);

	var _MdPortal2 = _interopRequireDefault(_MdPortal);

	var _MdOverlay = __webpack_require__(23);

	var _MdOverlay2 = _interopRequireDefault(_MdOverlay);

	var _MdFocusTrap = __webpack_require__(40);

	var _MdFocusTrap2 = _interopRequireDefault(_MdFocusTrap);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = new _MdComponent2.default({
	  name: 'MdDialog',
	  components: {
	    MdPortal: _MdPortal2.default,
	    MdOverlay: _MdOverlay2.default,
	    MdFocusTrap: _MdFocusTrap2.default
	  },
	  props: {
	    mdActive: Boolean,
	    mdBackdrop: {
	      type: Boolean,
	      default: true
	    },
	    mdBackdropClass: {
	      type: String,
	      default: 'md-dialog-overlay'
	    },
	    mdCloseOnEsc: {
	      type: Boolean,
	      default: true
	    },
	    mdClickOutsideToClose: {
	      type: Boolean,
	      default: true
	    },
	    mdFullscreen: {
	      type: Boolean,
	      default: true
	    },
	    mdAnimateFromSource: Boolean
	  },
	  computed: {
	    dialogClasses: function dialogClasses() {
	      return {
	        'md-dialog-fullscreen': this.mdFullscreen
	      };
	    }
	  },
	  watch: {
	    mdActive: function () {
	      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(isActive) {
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.next = 2;
	                return this.$nextTick();

	              case 2:

	                if (isActive) {
	                  this.$emit('md-opened');
	                } else {
	                  this.$emit('md-closed');
	                }

	              case 3:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function mdActive(_x) {
	        return _ref.apply(this, arguments);
	      }

	      return mdActive;
	    }()
	  },
	  methods: {
	    closeDialog: function closeDialog() {
	      this.$emit('update:mdActive', false);
	    },
	    onClick: function onClick() {
	      if (this.mdClickOutsideToClose) {
	        this.closeDialog();
	      }
	    },
	    onEsc: function onEsc() {
	      if (this.mdCloseOnEsc) {
	        this.closeDialog();
	      }
	    }
	  }
	});

	/***/ }),
	/* 206 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdDateIcon.vue
	var MdDateIcon = __webpack_require__(207);
	var MdDateIcon_default = /*#__PURE__*/__webpack_require__.n(MdDateIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-644b79cc","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdDateIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(0)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [
	      _c(
	        "svg",
	        {
	          attrs: {
	            height: "24",
	            viewBox: "0 0 24 24",
	            width: "24",
	            xmlns: "http://www.w3.org/2000/svg"
	          }
	        },
	        [
	          _c("path", {
	            attrs: {
	              d:
	                "M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
	            }
	          }),
	          _vm._v(" "),
	          _c("path", { attrs: { d: "M0 0h24v24H0z", fill: "none" } })
	        ]
	      )
	    ])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdDateIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-644b79cc", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdDateIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDateIcon_default.a,
	  icons_MdDateIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdDateIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-644b79cc", Component.options)
	  } else {
	    hotAPI.reload("data-v-644b79cc", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdDateIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 207 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdDateIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 208 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdDialog = __webpack_require__(10);

	var _MdDialog2 = _interopRequireDefault(_MdDialog);

	var _MdDialogTitle = __webpack_require__(209);

	var _MdDialogTitle2 = _interopRequireDefault(_MdDialogTitle);

	var _MdDialogContent = __webpack_require__(212);

	var _MdDialogContent2 = _interopRequireDefault(_MdDialogContent);

	var _MdDialogActions = __webpack_require__(215);

	var _MdDialogActions2 = _interopRequireDefault(_MdDialogActions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdDialog2.default.name, _MdDialog2.default);
	  Vue.component(_MdDialogTitle2.default.name, _MdDialogTitle2.default);
	  Vue.component(_MdDialogContent2.default.name, _MdDialogContent2.default);
	  Vue.component(_MdDialogActions2.default.name, _MdDialogActions2.default);
	};

	/***/ }),
	/* 209 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdDialog/MdDialogTitle.vue
	var MdDialogTitle = __webpack_require__(211);
	var MdDialogTitle_default = /*#__PURE__*/__webpack_require__.n(MdDialogTitle);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-879275ce","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdDialog/MdDialogTitle.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "span",
	    { staticClass: "md-dialog-title md-title" },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdDialog_MdDialogTitle = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-879275ce", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdDialog/MdDialogTitle.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(210)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDialogTitle_default.a,
	  MdDialog_MdDialogTitle,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdDialog/MdDialogTitle.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-879275ce", Component.options)
	  } else {
	    hotAPI.reload("data-v-879275ce", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdDialog_MdDialogTitle = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 210 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 211 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdDialogTitle'
	};

	/***/ }),
	/* 212 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdDialog/MdDialogContent.vue
	var MdDialogContent = __webpack_require__(214);
	var MdDialogContent_default = /*#__PURE__*/__webpack_require__.n(MdDialogContent);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-dae90f0c","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdDialog/MdDialogContent.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c("div", { staticClass: "md-dialog-content" }, [_vm._t("default")], 2)
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdDialog_MdDialogContent = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-dae90f0c", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdDialog/MdDialogContent.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(213)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDialogContent_default.a,
	  MdDialog_MdDialogContent,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdDialog/MdDialogContent.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-dae90f0c", Component.options)
	  } else {
	    hotAPI.reload("data-v-dae90f0c", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdDialog_MdDialogContent = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 213 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 214 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdDialogContent'
	};

	/***/ }),
	/* 215 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdDialog/MdDialogActions.vue
	var MdDialogActions = __webpack_require__(217);
	var MdDialogActions_default = /*#__PURE__*/__webpack_require__.n(MdDialogActions);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-092eaafe","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdDialog/MdDialogActions.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c("div", { staticClass: "md-dialog-actions" }, [_vm._t("default")], 2)
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdDialog_MdDialogActions = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-092eaafe", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdDialog/MdDialogActions.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(216)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDialogActions_default.a,
	  MdDialog_MdDialogActions,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdDialog/MdDialogActions.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-092eaafe", Component.options)
	  } else {
	    hotAPI.reload("data-v-092eaafe", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdDialog_MdDialogActions = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 216 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 217 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdDialogActions'
	};

	/***/ }),
	/* 218 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdDialog = __webpack_require__(10);

	var _MdDialog2 = _interopRequireDefault(_MdDialog);

	var _MdDialogAlert = __webpack_require__(219);

	var _MdDialogAlert2 = _interopRequireDefault(_MdDialogAlert);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdDialog2.default.name, _MdDialog2.default);
	  Vue.component(_MdDialogAlert2.default.name, _MdDialogAlert2.default);
	};

	/***/ }),
	/* 219 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdDialog/MdDialogAlert/MdDialogAlert.vue
	var MdDialogAlert = __webpack_require__(220);
	var MdDialogAlert_default = /*#__PURE__*/__webpack_require__.n(MdDialogAlert);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-197ab94b","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdDialog/MdDialogAlert/MdDialogAlert.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-dialog",
	    _vm._g(
	      _vm._b(
	        { attrs: { "md-fullscreen": false } },
	        "md-dialog",
	        _vm.$attrs,
	        false
	      ),
	      _vm.$listeners
	    ),
	    [
	      _vm.mdTitle
	        ? _c("md-dialog-title", [_vm._v(_vm._s(_vm.mdTitle))])
	        : _vm._e(),
	      _vm._v(" "),
	      _vm.mdContent
	        ? _c("md-dialog-content", {
	            domProps: { innerHTML: _vm._s(_vm.mdContent) }
	          })
	        : _vm._e(),
	      _vm._v(" "),
	      _c(
	        "md-dialog-actions",
	        [
	          _c(
	            "md-button",
	            {
	              staticClass: "md-primary",
	              on: {
	                click: function($event) {
	                  _vm.$emit("update:mdActive", false)
	                }
	              }
	            },
	            [_vm._v(_vm._s(_vm.mdConfirmText))]
	          )
	        ],
	        1
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdDialogAlert_MdDialogAlert = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-197ab94b", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdDialog/MdDialogAlert/MdDialogAlert.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDialogAlert_default.a,
	  MdDialogAlert_MdDialogAlert,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdDialog/MdDialogAlert/MdDialogAlert.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-197ab94b", Component.options)
	  } else {
	    hotAPI.reload("data-v-197ab94b", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdDialog_MdDialogAlert_MdDialogAlert = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 220 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdDialogAlert',
	  props: {
	    mdTitle: String,
	    mdContent: String,
	    mdConfirmText: {
	      type: String,
	      default: 'Ok'
	    }
	  }
	};

	/***/ }),
	/* 221 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdDialog = __webpack_require__(10);

	var _MdDialog2 = _interopRequireDefault(_MdDialog);

	var _MdDialogConfirm = __webpack_require__(222);

	var _MdDialogConfirm2 = _interopRequireDefault(_MdDialogConfirm);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdDialog2.default.name, _MdDialog2.default);
	  Vue.component(_MdDialogConfirm2.default.name, _MdDialogConfirm2.default);
	};

	/***/ }),
	/* 222 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdDialog/MdDialogConfirm/MdDialogConfirm.vue
	var MdDialogConfirm = __webpack_require__(223);
	var MdDialogConfirm_default = /*#__PURE__*/__webpack_require__.n(MdDialogConfirm);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-acc7afda","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdDialog/MdDialogConfirm/MdDialogConfirm.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-dialog",
	    _vm._g(
	      _vm._b(
	        { attrs: { "md-fullscreen": false } },
	        "md-dialog",
	        _vm.$attrs,
	        false
	      ),
	      _vm.$listeners
	    ),
	    [
	      _vm.mdTitle
	        ? _c("md-dialog-title", [_vm._v(_vm._s(_vm.mdTitle))])
	        : _vm._e(),
	      _vm._v(" "),
	      _vm.mdContent
	        ? _c("md-dialog-content", {
	            domProps: { innerHTML: _vm._s(_vm.mdContent) }
	          })
	        : _vm._e(),
	      _vm._v(" "),
	      _c(
	        "md-dialog-actions",
	        [
	          _c(
	            "md-button",
	            { staticClass: "md-primary", on: { click: _vm.onCancel } },
	            [_vm._v(_vm._s(_vm.mdCancelText))]
	          ),
	          _vm._v(" "),
	          _c(
	            "md-button",
	            { staticClass: "md-primary", on: { click: _vm.onConfirm } },
	            [_vm._v(_vm._s(_vm.mdConfirmText))]
	          )
	        ],
	        1
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdDialogConfirm_MdDialogConfirm = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-acc7afda", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdDialog/MdDialogConfirm/MdDialogConfirm.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDialogConfirm_default.a,
	  MdDialogConfirm_MdDialogConfirm,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdDialog/MdDialogConfirm/MdDialogConfirm.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-acc7afda", Component.options)
	  } else {
	    hotAPI.reload("data-v-acc7afda", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdDialog_MdDialogConfirm_MdDialogConfirm = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 223 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdDialogConfirm',
	  props: {
	    mdTitle: String,
	    mdContent: String,
	    mdConfirmText: {
	      type: String,
	      default: 'Ok'
	    },
	    mdCancelText: {
	      type: String,
	      default: 'Cancel'
	    }
	  },
	  methods: {
	    onCancel: function onCancel() {
	      this.$emit('md-cancel');
	      this.$emit('update:mdActive', false);
	    },
	    onConfirm: function onConfirm() {
	      this.$emit('md-confirm');
	      this.$emit('update:mdActive', false);
	    }
	  }
	};

	/***/ }),
	/* 224 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdDialog = __webpack_require__(10);

	var _MdDialog2 = _interopRequireDefault(_MdDialog);

	var _MdDialogPrompt = __webpack_require__(225);

	var _MdDialogPrompt2 = _interopRequireDefault(_MdDialogPrompt);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdDialog2.default.name, _MdDialog2.default);
	  Vue.component(_MdDialogPrompt2.default.name, _MdDialogPrompt2.default);
	};

	/***/ }),
	/* 225 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdDialog/MdDialogPrompt/MdDialogPrompt.vue
	var MdDialogPrompt = __webpack_require__(226);
	var MdDialogPrompt_default = /*#__PURE__*/__webpack_require__.n(MdDialogPrompt);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-7b3c8c22","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdDialog/MdDialogPrompt/MdDialogPrompt.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-dialog",
	    _vm._b(
	      {
	        attrs: { "md-fullscreen": false },
	        on: { "md-opened": _vm.setInputFocus }
	      },
	      "md-dialog",
	      _vm.$attrs,
	      false
	    ),
	    [
	      _vm.mdTitle
	        ? _c("md-dialog-title", [_vm._v(_vm._s(_vm.mdTitle))])
	        : _vm._e(),
	      _vm._v(" "),
	      _vm.mdContent
	        ? _c("md-dialog-content", {
	            domProps: { innerHTML: _vm._s(_vm.mdContent) }
	          })
	        : _vm._e(),
	      _vm._v(" "),
	      _c(
	        "md-dialog-content",
	        [
	          _c(
	            "md-field",
	            [
	              _c("md-input", {
	                ref: "input",
	                attrs: {
	                  id: _vm.mdInputId,
	                  name: _vm.mdInputName,
	                  maxlength: _vm.mdInputMaxlength,
	                  placeholder: _vm.mdInputPlaceholder
	                },
	                nativeOn: {
	                  keydown: function($event) {
	                    if (
	                      !("button" in $event) &&
	                      _vm._k($event.keyCode, "enter", 13, $event.key)
	                    ) {
	                      return null
	                    }
	                    _vm.onConfirm($event)
	                  }
	                },
	                model: {
	                  value: _vm.inputValue,
	                  callback: function($$v) {
	                    _vm.inputValue = $$v
	                  },
	                  expression: "inputValue"
	                }
	              })
	            ],
	            1
	          )
	        ],
	        1
	      ),
	      _vm._v(" "),
	      _c(
	        "md-dialog-actions",
	        [
	          _c(
	            "md-button",
	            { staticClass: "md-primary", on: { click: _vm.onCancel } },
	            [_vm._v(_vm._s(_vm.mdCancelText))]
	          ),
	          _vm._v(" "),
	          _c(
	            "md-button",
	            { staticClass: "md-primary", on: { click: _vm.onConfirm } },
	            [_vm._v(_vm._s(_vm.mdConfirmText))]
	          )
	        ],
	        1
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdDialogPrompt_MdDialogPrompt = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-7b3c8c22", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdDialog/MdDialogPrompt/MdDialogPrompt.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDialogPrompt_default.a,
	  MdDialogPrompt_MdDialogPrompt,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdDialog/MdDialogPrompt/MdDialogPrompt.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-7b3c8c22", Component.options)
	  } else {
	    hotAPI.reload("data-v-7b3c8c22", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdDialog_MdDialogPrompt_MdDialogPrompt = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 226 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdDialogPrompt',
	  props: {
	    value: {},
	    mdTitle: String,
	    mdInputName: String,
	    mdInputId: String,
	    mdInputMaxlength: [String, Number],
	    mdInputPlaceholder: [String, Number],
	    mdContent: String,
	    mdConfirmText: {
	      type: String,
	      default: 'Ok'
	    },
	    mdCancelText: {
	      type: String,
	      default: 'Cancel'
	    }
	  },
	  data: function data() {
	    return {
	      inputValue: null
	    };
	  },
	  watch: {
	    value: function value() {
	      this.inputValue = this.value;
	    }
	  },
	  methods: {
	    onCancel: function onCancel() {
	      this.$emit('md-cancel');
	      this.$emit('update:mdActive', false);
	    },
	    onConfirm: function onConfirm() {
	      this.$emit('input', this.inputValue);
	      this.$emit('md-confirm', this.inputValue);
	      this.$emit('update:mdActive', false);
	    },
	    setInputFocus: function setInputFocus() {
	      var _this = this;

	      window.setTimeout(function () {
	        _this.$refs.input.$el.focus();
	      }, 50);
	    }
	  },
	  created: function created() {
	    this.inputValue = this.value;
	  }
	};

	/***/ }),
	/* 227 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdDivider = __webpack_require__(228);

	var _MdDivider2 = _interopRequireDefault(_MdDivider);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdDivider2.default.name, _MdDivider2.default);
	};

	/***/ }),
	/* 228 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdDivider/MdDivider.vue
	var MdDivider = __webpack_require__(230);
	var MdDivider_default = /*#__PURE__*/__webpack_require__.n(MdDivider);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-8ca7ced6","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdDivider/MdDivider.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm.insideList
	    ? _c("li", { staticClass: "md-divider", class: [_vm.$mdActiveTheme] })
	    : _c("hr", { staticClass: "md-divider", class: [_vm.$mdActiveTheme] })
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdDivider_MdDivider = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-8ca7ced6", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdDivider/MdDivider.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(229)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDivider_default.a,
	  MdDivider_MdDivider,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdDivider/MdDivider.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-8ca7ced6", Component.options)
	  } else {
	    hotAPI.reload("data-v-8ca7ced6", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdDivider_MdDivider = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 229 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 230 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdDivider',
	  computed: {
	    insideList: function insideList() {
	      return this.$parent.$options._componentTag === 'md-list';
	    }
	  }
	}); //
	//
	//
	//
	//

	/***/ }),
	/* 231 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdDrawer = __webpack_require__(232);

	var _MdDrawer2 = _interopRequireDefault(_MdDrawer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdDrawer2.default.name, _MdDrawer2.default);
	};

	/***/ }),
	/* 232 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdDrawer/MdDrawer.vue
	var MdDrawer = __webpack_require__(234);
	var MdDrawer_default = /*#__PURE__*/__webpack_require__.n(MdDrawer);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-801caa62","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdDrawer/MdDrawer.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    {
	      staticClass: "md-drawer",
	      class: [_vm.$mdActiveTheme, _vm.drawerClasses]
	    },
	    [
	      _vm._t("default"),
	      _vm._v(" "),
	      _vm.mdFixed
	        ? _c("md-overlay", {
	            attrs: { "md-active": _vm.mdActive },
	            on: { click: _vm.closeDrawer }
	          })
	        : _c("md-overlay", {
	            attrs: { "md-active": _vm.mdActive, "md-attach-to-parent": "" },
	            on: { click: _vm.closeDrawer }
	          })
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdDrawer_MdDrawer = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-801caa62", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdDrawer/MdDrawer.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(233)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDrawer_default.a,
	  MdDrawer_MdDrawer,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdDrawer/MdDrawer.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-801caa62", Component.options)
	  } else {
	    hotAPI.reload("data-v-801caa62", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdDrawer_MdDrawer = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 233 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 234 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdOverlay = __webpack_require__(23);

	var _MdOverlay2 = _interopRequireDefault(_MdOverlay);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdDrawer',
	  components: {
	    MdOverlay: _MdOverlay2.default
	  },
	  props: {
	    mdLeft: Boolean,
	    mdRight: Boolean,
	    mdPermanent: _extends({
	      type: String
	    }, (0, _MdPropValidator2.default)('md-permanent', ['full', 'clipped', 'card'])),
	    mdPersistent: _extends({
	      type: String
	    }, (0, _MdPropValidator2.default)('md-persistent', ['mini', 'full'])),
	    mdActive: Boolean,
	    mdFixed: Boolean
	  },
	  watch: {
	    mdActive: function mdActive(visible) {
	      if (visible) {
	        this.$emit('md-opened');
	      } else {
	        this.$emit('md-closed');
	      }
	    }
	  },
	  computed: {
	    drawerClasses: function drawerClasses() {
	      var classes = {
	        'md-left': this.mdLeft,
	        'md-right': this.mdRight,
	        'md-temporary': this.isTemporary,
	        'md-persistent': this.mdPersistent,
	        'md-permanent': this.mdPermanent,
	        'md-active': this.mdActive,
	        'md-fixed': this.mdFixed
	      };

	      if (this.mdPermanent) {
	        classes['md-permanent-' + this.mdPermanent] = true;
	      }

	      if (this.mdPersistent) {
	        classes['md-persistent-' + this.mdPersistent] = true;
	      }

	      return classes;
	    },
	    isTemporary: function isTemporary() {
	      return !this.mdPermanent && !this.mdPersistent;
	    },
	    mode: function mode() {
	      if (this.mdPersistent) {
	        return 'persistent';
	      }

	      if (this.mdPermanent) {
	        return 'permanent';
	      }

	      return 'temporary';
	    },
	    submode: function submode() {
	      if (this.mdPersistent) {
	        return this.mdPersistent;
	      }

	      if (this.mdPermanent) {
	        return this.mdPermanent;
	      }
	    }
	  },
	  methods: {
	    closeDrawer: function closeDrawer() {
	      this.$emit('update:mdActive', false);
	    }
	  }
	});

	/***/ }),
	/* 235 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	__webpack_require__(236);

	exports.default = function (Vue) {};

	/***/ }),
	/* 236 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 237 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdEmptyState = __webpack_require__(41);

	var _MdEmptyState2 = _interopRequireDefault(_MdEmptyState);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdEmptyState2.default.name, _MdEmptyState2.default);
	};

	/***/ }),
	/* 238 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 239 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdEmptyStateProps = __webpack_require__(42);

	var _MdEmptyStateProps2 = _interopRequireDefault(_MdEmptyStateProps);

	var _MdAssetIcon = __webpack_require__(18);

	var _MdAssetIcon2 = _interopRequireDefault(_MdAssetIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdEmptyState',
	  mixins: [_MdAssetIcon2.default],
	  props: _MdEmptyStateProps2.default,
	  computed: {
	    emptyStateClasses: function emptyStateClasses() {
	      return {
	        'md-rounded': this.mdRounded
	      };
	    },
	    emptyStateStyles: function emptyStateStyles() {
	      if (this.mdRounded) {
	        var size = this.mdSize + 'px';

	        return {
	          width: size,
	          height: size
	        };
	      }
	    }
	  }
	}); //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 240 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdIcon = __webpack_require__(43);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	var _MdSelect = __webpack_require__(241);

	var _MdSelect2 = _interopRequireDefault(_MdSelect);

	var _MdField = __webpack_require__(20);

	var _MdField2 = _interopRequireDefault(_MdField);

	var _MdFile = __webpack_require__(260);

	var _MdFile2 = _interopRequireDefault(_MdFile);

	var _MdInput = __webpack_require__(14);

	var _MdInput2 = _interopRequireDefault(_MdInput);

	var _MdTextarea = __webpack_require__(265);

	var _MdTextarea2 = _interopRequireDefault(_MdTextarea);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.use(_MdIcon2.default);
	  Vue.use(_MdSelect2.default);
	  Vue.component(_MdField2.default.name, _MdField2.default);
	  Vue.component(_MdFile2.default.name, _MdFile2.default);
	  Vue.component(_MdInput2.default.name, _MdInput2.default);
	  Vue.component(_MdTextarea2.default.name, _MdTextarea2.default);
	};

	/***/ }),
	/* 241 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdSelect = __webpack_require__(242);

	var _MdSelect2 = _interopRequireDefault(_MdSelect);

	var _MdOption = __webpack_require__(254);

	var _MdOption2 = _interopRequireDefault(_MdOption);

	var _MdOptgroup = __webpack_require__(257);

	var _MdOptgroup2 = _interopRequireDefault(_MdOptgroup);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdSelect2.default.name, _MdSelect2.default);
	  Vue.component(_MdOption2.default.name, _MdOption2.default);
	  Vue.component(_MdOptgroup2.default.name, _MdOptgroup2.default);
	};

	/***/ }),
	/* 242 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdField/MdSelect/MdSelect.vue
	var MdSelect = __webpack_require__(244);
	var MdSelect_default = /*#__PURE__*/__webpack_require__.n(MdSelect);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-7e35dfa3","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdField/MdSelect/MdSelect.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-menu",
	    {
	      staticClass: "md-select",
	      class: { "md-disabled": _vm.disabled },
	      attrs: {
	        "md-close-on-select": false,
	        "md-active": _vm.showSelect,
	        "md-offset-x": _vm.offset.x,
	        "md-offset-y": _vm.offset.y
	      },
	      on: {
	        "update:mdActive": function($event) {
	          _vm.showSelect = $event
	        },
	        "md-opened": _vm.onOpen,
	        "md-closed": _vm.onClose
	      }
	    },
	    [
	      _c(
	        "md-input",
	        _vm._g(
	          _vm._b(
	            {
	              ref: "input",
	              staticClass: "md-input md-select-value",
	              attrs: {
	                readonly: "",
	                disabled: _vm.disabled,
	                required: _vm.required,
	                placeholder: _vm.placeholder
	              },
	              on: {
	                focus: function($event) {
	                  $event.preventDefault()
	                  _vm.onFocus($event)
	                },
	                blur: function($event) {
	                  $event.preventDefault()
	                  _vm.removeHighlight($event)
	                },
	                click: _vm.openSelect,
	                keydown: [
	                  function($event) {
	                    if (
	                      !("button" in $event) &&
	                      _vm._k($event.keyCode, "down", 40, $event.key)
	                    ) {
	                      return null
	                    }
	                    _vm.openSelect($event)
	                  },
	                  function($event) {
	                    if (
	                      !("button" in $event) &&
	                      _vm._k($event.keyCode, "enter", 13, $event.key)
	                    ) {
	                      return null
	                    }
	                    _vm.openSelect($event)
	                  },
	                  function($event) {
	                    if (
	                      !("button" in $event) &&
	                      _vm._k($event.keyCode, "space", 32, $event.key)
	                    ) {
	                      return null
	                    }
	                    _vm.openSelect($event)
	                  }
	                ]
	              },
	              model: {
	                value: _vm.MdSelect.label,
	                callback: function($$v) {
	                  _vm.$set(_vm.MdSelect, "label", $$v)
	                },
	                expression: "MdSelect.label"
	              }
	            },
	            "md-input",
	            _vm.$attrs,
	            false
	          ),
	          _vm.inputListeners
	        )
	      ),
	      _vm._v(" "),
	      _c("md-drop-down-icon", {
	        nativeOn: {
	          click: function($event) {
	            _vm.openSelect($event)
	          }
	        }
	      }),
	      _vm._v(" "),
	      _c(
	        "keep-alive",
	        [
	          _c(
	            "md-menu-content",
	            {
	              ref: "menu",
	              staticClass: "md-select-menu",
	              style: _vm.menuStyles,
	              attrs: {
	                "md-content-class": _vm.mdClass,
	                "md-list-class": _vm.mdDense && "md-dense",
	                id: _vm.uniqueId
	              }
	            },
	            [_vm._t("default")],
	            2
	          )
	        ],
	        1
	      ),
	      _vm._v(" "),
	      _c("input", {
	        directives: [
	          {
	            name: "model",
	            rawName: "v-model",
	            value: _vm.model,
	            expression: "model"
	          }
	        ],
	        staticClass: "md-input-fake",
	        attrs: { disabled: _vm.disabled, readonly: "", tabindex: "-1" },
	        domProps: { value: _vm.model },
	        on: {
	          input: function($event) {
	            if ($event.target.composing) {
	              return
	            }
	            _vm.model = $event.target.value
	          }
	        }
	      }),
	      _vm._v(" "),
	      _c(
	        "select",
	        _vm._b(
	          {
	            directives: [
	              {
	                name: "model",
	                rawName: "v-model",
	                value: _vm.model,
	                expression: "model"
	              }
	            ],
	            attrs: { readonly: "", tabindex: "-1" },
	            on: {
	              change: function($event) {
	                var $$selectedVal = Array.prototype.filter
	                  .call($event.target.options, function(o) {
	                    return o.selected
	                  })
	                  .map(function(o) {
	                    var val = "_value" in o ? o._value : o.value
	                    return val
	                  })
	                _vm.model = $event.target.multiple
	                  ? $$selectedVal
	                  : $$selectedVal[0]
	              }
	            }
	          },
	          "select",
	          _vm.attributes,
	          false
	        )
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSelect_MdSelect = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-7e35dfa3", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdField/MdSelect/MdSelect.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(243)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdSelect_default.a,
	  MdSelect_MdSelect,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdField/MdSelect/MdSelect.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-7e35dfa3", Component.options)
	  } else {
	    hotAPI.reload("data-v-7e35dfa3", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdField_MdSelect_MdSelect = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 243 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 244 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var _raf = __webpack_require__(9);

	var _raf2 = _interopRequireDefault(_raf);

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdDropDownIcon = __webpack_require__(245);

	var _MdDropDownIcon2 = _interopRequireDefault(_MdDropDownIcon);

	var _MdMenu = __webpack_require__(44);

	var _MdMenu2 = _interopRequireDefault(_MdMenu);

	var _MdMenuContent = __webpack_require__(45);

	var _MdMenuContent2 = _interopRequireDefault(_MdMenuContent);

	var _MdInput = __webpack_require__(14);

	var _MdInput2 = _interopRequireDefault(_MdInput);

	var _MdFieldMixin = __webpack_require__(15);

	var _MdFieldMixin2 = _interopRequireDefault(_MdFieldMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	var defaultOffset = {
	  x: -15,
	  y: -48
	};

	exports.default = {
	  name: 'MdSelect',
	  components: {
	    MdInput: _MdInput2.default,
	    MdMenu: _MdMenu2.default,
	    MdMenuContent: _MdMenuContent2.default,
	    MdDropDownIcon: _MdDropDownIcon2.default
	  },
	  mixins: [_MdFieldMixin2.default],
	  props: {
	    mdDense: Boolean,
	    mdClass: String,
	    multiple: Boolean,
	    id: String,
	    name: String
	  },
	  inject: ['MdField'],
	  data: function data() {
	    return {
	      uniqueId: 'md-select-menu-' + (0, _MdUuid2.default)(),
	      menuStyles: {},
	      offset: {
	        x: defaultOffset.x,
	        y: 0
	      },
	      showSelect: true,
	      didMount: false,
	      MdSelect: {
	        items: {},
	        label: null,
	        multiple: false,
	        modelValue: this.model,
	        setValue: this.setValue,
	        setContent: this.setContent,
	        setMultipleValue: this.setMultipleValue,
	        setMultipleContent: this.setMultipleContent
	      }
	    };
	  },
	  provide: function provide() {
	    var MdSelect = this.MdSelect;

	    return { MdSelect: MdSelect };
	  },

	  computed: {
	    inputListeners: function inputListeners() {
	      return _extends({}, this.$listeners, {
	        input: undefined
	      });
	    }
	  },
	  watch: {
	    localValue: {
	      immediate: true,
	      handler: function handler() {
	        this.setFieldContent();
	      }
	    },
	    multiple: {
	      immediate: true,
	      handler: function handler(isMultiple) {
	        var _this = this;

	        this.MdSelect.multiple = isMultiple;
	        this.$nextTick(function () {
	          return _this.initialLocalValueByDefault();
	        });
	      }
	    },
	    model: function model() {
	      this.MdSelect.modelValue = this.model;
	    }
	  },
	  methods: {
	    elHasScroll: function elHasScroll(el) {
	      return el.scrollHeight > el.offsetHeight;
	    },
	    scrollToSelectedOption: function scrollToSelectedOption(el, menu) {
	      var top = el.offsetTop;
	      var elHeight = el.offsetHeight;
	      var menuHeight = menu.offsetHeight;

	      menu.scrollTop = top - (menuHeight - elHeight) / 2;
	    },
	    setOffsets: function () {
	      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(target) {
	        var menu, selected;
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.next = 2;
	                return this.$nextTick();

	              case 2:

	                if (!this.$isServer) {
	                  menu = document.getElementById(this.uniqueId);


	                  if (menu) {
	                    selected = target || menu.querySelector('.md-selected');


	                    if (selected) {
	                      this.scrollToSelectedOption(selected, menu);
	                      this.offset.y = defaultOffset.y - selected.offsetTop + menu.scrollTop + 8;
	                      this.menuStyles = {
	                        'transform-origin': '0 ' + Math.abs(this.offset.y) + 'px'
	                      };
	                    } else {
	                      this.offset.y = defaultOffset.y + 1;
	                      this.menuStyles = {};
	                    }
	                  }
	                }

	              case 3:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function setOffsets(_x) {
	        return _ref.apply(this, arguments);
	      }

	      return setOffsets;
	    }(),
	    onOpen: function onOpen() {
	      var _this2 = this;

	      this.$emit('md-opened');
	      if (this.didMount) {
	        this.setOffsets();
	        window.setTimeout(function () {
	          _this2.MdField.focused = true;
	        }, 10);
	      }
	    },
	    applyHighlight: function applyHighlight() {
	      this.MdField.focused = false;
	      this.MdField.highlighted = true;
	      this.$refs.input.$el.focus();
	    },
	    onClose: function onClose() {
	      this.$emit('md-closed');
	      if (this.didMount) {
	        this.applyHighlight();
	      }
	    },
	    onFocus: function onFocus() {
	      if (this.didMount) {
	        this.applyHighlight();
	      }
	    },
	    removeHighlight: function removeHighlight() {
	      this.MdField.highlighted = false;
	    },
	    openSelect: function openSelect() {
	      if (!this.disabled) {
	        this.showSelect = true;
	      }
	    },
	    arrayAccessorRemove: function arrayAccessorRemove(arr, index) {
	      var before = arr.slice(0, index);
	      var after = arr.slice(index + 1, arr.length);
	      return before.concat(after);
	    },
	    toggleArrayValue: function toggleArrayValue(value) {
	      var index = this.localValue.indexOf(value);
	      var includes = index > -1;
	      if (!includes) {
	        this.localValue = this.localValue.concat([value]);
	      } else {
	        this.localValue = this.arrayAccessorRemove(this.localValue, index);
	      }
	      this.emitSelected(this.localValue);
	    },
	    setValue: function setValue(newValue) {
	      this.model = newValue;
	      this.emitSelected(newValue);
	      this.setFieldValue();
	      this.showSelect = false;
	    },
	    setContent: function setContent(newLabel) {
	      this.MdSelect.label = newLabel;
	    },
	    setContentByValue: function setContentByValue() {
	      var textContent = this.MdSelect.items[this.localValue];

	      if (textContent) {
	        this.setContent(textContent);
	      } else {
	        this.setContent('');
	      }
	    },
	    setMultipleValue: function setMultipleValue(value) {
	      var newValue = value;
	      this.toggleArrayValue(newValue);
	      this.setFieldValue();
	    },
	    setMultipleContentByValue: function setMultipleContentByValue() {
	      var _this3 = this;

	      if (!this.localValue) {
	        this.initialLocalValueByDefault();
	      }
	      var content = [];

	      this.localValue.forEach(function (item) {
	        var textContent = _this3.MdSelect.items[item];

	        if (textContent) {
	          content.push(textContent);
	        }
	      });

	      this.setContent(content.join(', '));
	    },
	    setFieldContent: function setFieldContent() {
	      if (this.multiple) {
	        this.setMultipleContentByValue();
	      } else {
	        this.setContentByValue();
	      }
	    },
	    initialLocalValueByDefault: function initialLocalValueByDefault() {
	      var isArray = Array.isArray(this.localValue);
	      if (this.multiple && !isArray) {
	        var isSet = this.localValue !== undefined && this.localValue !== null;
	        this.localValue = isSet ? [this.localValue] : [];
	        return;
	      }
	      if (!this.multiple && isArray) {
	        this.localValue = this.localValue.length > 0 ? this.localValue[0] : null;
	      }
	    },
	    emitSelected: function emitSelected(value) {
	      this.$emit('md-selected', value);
	    }
	  },
	  mounted: function () {
	    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
	      return regeneratorRuntime.wrap(function _callee2$(_context2) {
	        while (1) {
	          switch (_context2.prev = _context2.next) {
	            case 0:
	              this.showSelect = false;
	              this.setFieldContent();

	              _context2.next = 4;
	              return this.$nextTick();

	            case 4:
	              this.didMount = true;

	            case 5:
	            case 'end':
	              return _context2.stop();
	          }
	        }
	      }, _callee2, this);
	    }));

	    function mounted() {
	      return _ref2.apply(this, arguments);
	    }

	    return mounted;
	  }()
	};

	/***/ }),
	/* 245 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdDropDownIcon.vue
	var MdDropDownIcon = __webpack_require__(246);
	var MdDropDownIcon_default = /*#__PURE__*/__webpack_require__.n(MdDropDownIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-44db031d","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdDropDownIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(0)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [
	      _c(
	        "svg",
	        {
	          attrs: {
	            height: "24",
	            viewBox: "0 0 24 24",
	            width: "24",
	            xmlns: "http://www.w3.org/2000/svg"
	          }
	        },
	        [
	          _c("path", { attrs: { d: "M7 10l5 5 5-5z" } }),
	          _vm._v(" "),
	          _c("path", { attrs: { d: "M0 0h24v24H0z", fill: "none" } })
	        ]
	      )
	    ])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdDropDownIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-44db031d", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdDropDownIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdDropDownIcon_default.a,
	  icons_MdDropDownIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdDropDownIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-44db031d", Component.options)
	  } else {
	    hotAPI.reload("data-v-44db031d", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdDropDownIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 246 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdDropDownIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 247 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 248 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	exports.default = {
	  name: 'MdMenu',
	  props: {
	    mdActive: Boolean,
	    mdAlignTrigger: Boolean,
	    mdOffsetX: Number,
	    mdOffsetY: Number,
	    mdFullWidth: Boolean,
	    mdDense: Boolean,
	    mdDirection: _extends({
	      type: String,
	      default: 'bottom-start'
	    }, (0, _MdPropValidator2.default)('md-direction', ['top-end', 'top-start', 'bottom-end', 'bottom-start'])),
	    mdCloseOnSelect: {
	      type: Boolean,
	      default: true
	    },
	    mdSize: _extends({
	      type: String,
	      default: 'small'
	    }, (0, _MdPropValidator2.default)('md-size', ['auto', 'small', 'medium', 'big', 'huge']))
	  },
	  data: function data() {
	    return {
	      triggerEl: null,
	      MdMenu: {
	        instance: this,
	        active: this.mdActive,
	        direction: this.mdDirection,
	        size: this.mdSize,
	        alignTrigger: this.mdAlignTrigger,
	        offsetX: this.mdOffsetX,
	        offsetY: this.mdOffsetY,
	        fullWidth: this.mdFullWidth,
	        dense: this.mdDense,
	        closeOnSelect: this.mdCloseOnSelect,
	        bodyClickObserver: null,
	        windowResizeObserver: null
	      }
	    };
	  },
	  provide: function provide() {
	    return {
	      MdMenu: this.MdMenu
	    };
	  },

	  computed: {
	    isActive: function isActive() {
	      return this.MdMenu.active;
	    }
	  },
	  watch: {
	    mdActive: {
	      immediate: true,
	      handler: function handler(isActive) {
	        this.MdMenu.active = isActive;
	      }
	    },
	    mdDirection: function mdDirection(direction) {
	      this.MdMenu.direction = direction;
	    },
	    mdSize: function mdSize(size) {
	      this.MdMenu.size = size;
	    },
	    mdAlignTrigger: function mdAlignTrigger(aligned) {
	      this.MdMenu.alignTrigger = aligned;
	    },
	    mdOffsetX: function mdOffsetX(offset) {
	      this.MdMenu.offsetX = offset;
	    },
	    mdOffsetY: function mdOffsetY(offset) {
	      this.MdMenu.offsetY = offset;
	    },
	    isActive: function isActive(_isActive) {
	      this.$emit('update:mdActive', _isActive);

	      if (!_isActive) {
	        this.$emit('md-closed');
	      } else {
	        this.$emit('md-opened');
	      }
	    }
	  },
	  methods: {
	    toggleContent: function toggleContent($event) {
	      $event.stopPropagation();
	      this.MdMenu.active = !this.MdMenu.active;
	    }
	  },
	  mounted: function () {
	    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	      return regeneratorRuntime.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              _context.next = 2;
	              return this.$nextTick();

	            case 2:

	              this.triggerEl = this.$el.querySelector('[md-menu-trigger]');

	              if (this.triggerEl) {
	                this.triggerEl.addEventListener('click', this.toggleContent);
	              }

	            case 4:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, _callee, this);
	    }));

	    function mounted() {
	      return _ref.apply(this, arguments);
	    }

	    return mounted;
	  }(),
	  beforeDestroy: function beforeDestroy() {
	    if (this.triggerEl) {
	      this.triggerEl.removeEventListener('click', this.toggleContent);
	    }
	  }
	};

	/***/ }),
	/* 249 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 250 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	var _MdObserveEvent = __webpack_require__(46);

	var _MdObserveEvent2 = _interopRequireDefault(_MdObserveEvent);

	var _MdResizeObserver = __webpack_require__(251);

	var _MdResizeObserver2 = _interopRequireDefault(_MdResizeObserver);

	var _MdPopover = __webpack_require__(25);

	var _MdPopover2 = _interopRequireDefault(_MdPopover);

	var _MdFocusTrap = __webpack_require__(40);

	var _MdFocusTrap2 = _interopRequireDefault(_MdFocusTrap);

	var _MdList = __webpack_require__(47);

	var _MdList2 = _interopRequireDefault(_MdList);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = new _MdComponent2.default({
	  name: 'MdMenuContent',
	  components: {
	    MdPopover: _MdPopover2.default,
	    MdFocusTrap: _MdFocusTrap2.default,
	    MdList: _MdList2.default
	  },
	  props: {
	    mdListClass: [String, Boolean],
	    mdContentClass: [String, Boolean]
	  },
	  inject: ['MdMenu'],
	  data: function data() {
	    return {
	      highlightIndex: -1,
	      didMount: false,
	      highlightItems: [],
	      popperSettings: null,
	      menuStyles: ''
	    };
	  },
	  computed: {
	    highlightedItem: function highlightedItem() {
	      return this.highlightItems[this.highlightIndex];
	    },
	    shouldRender: function shouldRender() {
	      return this.MdMenu.active;
	    },
	    menuClasses: function menuClasses() {
	      var _ref;

	      var prefix = 'md-menu-content-';

	      return _ref = {}, _defineProperty(_ref, prefix + this.MdMenu.direction, true), _defineProperty(_ref, prefix + this.MdMenu.size, true), _defineProperty(_ref, 'md-menu-content', this.didMount), _defineProperty(_ref, 'md-shallow', !this.didMount), _ref;
	    },
	    listClasses: function listClasses() {
	      return _extends({
	        'md-dense': this.MdMenu.dense
	      }, this.mdListClass);
	    }
	  },
	  watch: {
	    shouldRender: function () {
	      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_shouldRender) {
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                if (!_shouldRender) {
	                  _context.next = 7;
	                  break;
	                }

	                this.setPopperSettings();
	                _context.next = 4;
	                return this.$nextTick();

	              case 4:
	                this.setInitialHighlightIndex();
	                this.createClickEventObserver();
	                this.createResizeObserver();

	              case 7:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function shouldRender(_x) {
	        return _ref2.apply(this, arguments);
	      }

	      return shouldRender;
	    }()
	  },
	  methods: {
	    setPopperSettings: function setPopperSettings() {
	      var _MdMenu = this.MdMenu,
	          direction = _MdMenu.direction,
	          alignTrigger = _MdMenu.alignTrigger;

	      var _getOffsets = this.getOffsets(),
	          offsetX = _getOffsets.offsetX,
	          offsetY = _getOffsets.offsetY;

	      if (!this.hasCustomOffsets()) {
	        if (this.MdMenu.instance.$el && this.MdMenu.instance.$el.offsetHeight) {
	          offsetY = -this.MdMenu.instance.$el.offsetHeight - 11;
	        }

	        if (direction.includes('start')) {
	          offsetX = -8;
	        } else if (direction.includes('end')) {
	          offsetX = 8;
	        }
	      }

	      this.popperSettings = {
	        placement: direction,
	        modifiers: {
	          keepTogether: {
	            enabled: true
	          },
	          flip: {
	            enabled: false
	          },
	          offset: {
	            offset: offsetX + ', ' + offsetY
	          }
	        }
	      };
	    },
	    setInitialHighlightIndex: function setInitialHighlightIndex() {
	      var _this = this;

	      this.setHighlightItems();
	      this.highlightItems.forEach(function (item, index) {
	        if (item.classList.contains('md-selected')) {
	          _this.highlightIndex = index - 1;
	        }
	      });
	    },
	    setHighlightItems: function setHighlightItems() {
	      if (this.$el.querySelectorAll) {
	        var items = this.$el.querySelectorAll('.md-list-item-container:not(.md-list-item-default):not([disabled])');

	        this.highlightItems = Array.from(items);
	      }
	    },
	    setHighlight: function setHighlight(direction) {
	      this.setHighlightItems();

	      if (this.highlightItems.length) {
	        if (direction === 'down') {
	          if (this.highlightIndex === this.highlightItems.length - 1) {
	            this.highlightIndex = 0;
	          } else {
	            this.highlightIndex++;
	          }
	        } else {
	          if (this.highlightIndex === 0) {
	            this.highlightIndex = this.highlightItems.length - 1;
	          } else {
	            this.highlightIndex--;
	          }
	        }

	        this.clearAllHighlights();
	        this.setItemHighlight();
	      }
	    },
	    clearAllHighlights: function clearAllHighlights() {
	      this.highlightItems.forEach(function (item) {
	        item.parentNode.__vue__.highlighted = false;
	      });
	    },
	    setItemHighlight: function setItemHighlight() {
	      if (this.highlightedItem) {
	        this.highlightedItem.parentNode.__vue__.highlighted = true;
	        if (this.$parent.$parent.setOffsets) {
	          this.$parent.$parent.setOffsets(this.highlightedItem.parentNode);
	        }
	      }
	    },
	    setSelection: function setSelection() {
	      if (this.highlightedItem) {
	        this.highlightedItem.parentNode.click();
	      }
	    },
	    onEsc: function onEsc() {
	      this.MdMenu.active = false;
	    },
	    getOffsets: function getOffsets() {
	      return {
	        offsetX: this.MdMenu.offsetX || 0,
	        offsetY: this.MdMenu.offsetY || 0
	      };
	    },
	    hasCustomOffsets: function hasCustomOffsets() {
	      var _MdMenu2 = this.MdMenu,
	          offsetX = _MdMenu2.offsetX,
	          offsetY = _MdMenu2.offsetY,
	          alignTrigger = _MdMenu2.alignTrigger;


	      return Boolean(alignTrigger || offsetY || offsetX);
	    },
	    createClickEventObserver: function createClickEventObserver() {
	      var _this2 = this;

	      if (document) {
	        this.MdMenu.bodyClickObserver = new _MdObserveEvent2.default(document.body, 'click', function ($event) {
	          $event.stopPropagation();

	          if (!_this2.$el.contains($event.target)) {
	            _this2.MdMenu.active = false;
	            _this2.MdMenu.bodyClickObserver.destroy();
	            _this2.MdMenu.windowResizeObserver.destroy();
	          }
	        });
	      }
	    },
	    createResizeObserver: function createResizeObserver() {
	      this.MdMenu.windowResizeObserver = new _MdResizeObserver2.default(window, this.setStyles);
	    },
	    setupWatchers: function setupWatchers() {
	      this.$watch('MdMenu.direction', this.setPopperSettings);
	      this.$watch('MdMenu.alignTrigger', this.setPopperSettings);
	      this.$watch('MdMenu.offsetX', this.setPopperSettings);
	      this.$watch('MdMenu.offsetY', this.setPopperSettings);
	    },
	    setStyles: function setStyles() {
	      if (this.MdMenu.fullWidth) {
	        this.menuStyles = '\n          width: ' + this.MdMenu.instance.$el.offsetWidth + 'px;\n          max-width: ' + this.MdMenu.instance.$el.offsetWidth + 'px\n        ';
	      }
	    }
	  },
	  mounted: function () {
	    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
	      return regeneratorRuntime.wrap(function _callee2$(_context2) {
	        while (1) {
	          switch (_context2.prev = _context2.next) {
	            case 0:
	              _context2.next = 2;
	              return this.$nextTick();

	            case 2:
	              this.setHighlightItems();
	              this.setupWatchers();
	              this.setStyles();
	              this.didMount = true;

	            case 6:
	            case 'end':
	              return _context2.stop();
	          }
	        }
	      }, _callee2, this);
	    }));

	    function mounted() {
	      return _ref3.apply(this, arguments);
	    }

	    return mounted;
	  }(),
	  beforeDestroy: function beforeDestroy() {
	    if (this.MdMenu.bodyClickObserver) {
	      this.MdMenu.bodyClickObserver.destroy();
	    }

	    if (this.MdMenu.windowResizeObserver) {
	      this.MdMenu.windowResizeObserver.destroy();
	    }
	  }
	});

	/***/ }),
	/* 251 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _raf = __webpack_require__(9);

	var _raf2 = _interopRequireDefault(_raf);

	var _MdObserveEvent = __webpack_require__(46);

	var _MdObserveEvent2 = _interopRequireDefault(_MdObserveEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
	  var observerFn = arguments[1];

	  var observer = (0, _MdObserveEvent2.default)(el, 'resize', function () {
	    (0, _raf2.default)(observerFn);
	  }, { passive: true });

	  return {
	    destroy: function destroy() {
	      return observer.destroy;
	    }
	  };
	};

	/***/ }),
	/* 252 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 253 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdList'
	}); //
	//
	//
	//
	//
	//

	/***/ }),
	/* 254 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdField/MdSelect/MdOption.vue
	var MdOption = __webpack_require__(256);
	var MdOption_default = /*#__PURE__*/__webpack_require__.n(MdOption);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-32c8ce9c","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdField/MdSelect/MdOption.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-menu-item",
	    {
	      class: _vm.optionClasses,
	      attrs: { disabled: _vm.isDisabled },
	      on: { click: _vm.setSelection }
	    },
	    [
	      _vm.MdSelect.multiple
	        ? _c("md-checkbox", {
	            staticClass: "md-primary",
	            model: {
	              value: _vm.isChecked,
	              callback: function($$v) {
	                _vm.isChecked = $$v
	              },
	              expression: "isChecked"
	            }
	          })
	        : _vm._e(),
	      _vm._v(" "),
	      _c(
	        "span",
	        { ref: "text", staticClass: "md-list-item-text" },
	        [_vm._t("default")],
	        2
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSelect_MdOption = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-32c8ce9c", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdField/MdSelect/MdOption.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(255)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdOption_default.a,
	  MdSelect_MdOption,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdField/MdSelect/MdOption.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-32c8ce9c", Component.options)
	  } else {
	    hotAPI.reload("data-v-32c8ce9c", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdField_MdSelect_MdOption = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 255 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 256 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdOption',
	  props: {
	    value: [String, Number, Boolean],
	    disabled: Boolean
	  },
	  inject: {
	    MdSelect: {},
	    MdOptgroup: {
	      default: {}
	    }
	  },
	  data: function data() {
	    return {
	      uniqueId: 'md-option-' + (0, _MdUuid2.default)(),
	      isSelected: false,
	      isChecked: false
	    };
	  },
	  computed: {
	    selectValue: function selectValue() {
	      return this.MdSelect.modelValue;
	    },
	    isMultiple: function isMultiple() {
	      return this.MdSelect.multiple;
	    },
	    isDisabled: function isDisabled() {
	      return this.MdOptgroup.disabled || this.disabled;
	    },
	    key: function key() {
	      var isSet = this.value || this.value === 0;
	      return isSet ? this.value : this.uniqueId;
	    },
	    inputLabel: function inputLabel() {
	      return this.MdSelect.label;
	    },
	    optionClasses: function optionClasses() {
	      return {
	        'md-selected': this.isSelected || this.isChecked
	      };
	    }
	  },
	  watch: {
	    inputLabel: function inputLabel() {
	      this.setIsSelected();
	    }
	  },
	  methods: {
	    getTextContent: function getTextContent() {
	      if (this.$el) {
	        return this.$el.textContent.trim();
	      }

	      var slot = this.$slots.default;

	      return slot ? slot[0].text.trim() : '';
	    },
	    setIsSelected: function setIsSelected() {
	      this.isSelected = this.inputLabel === this.getTextContent();
	    },
	    setSingleSelection: function setSingleSelection() {
	      this.MdSelect.setValue(this.value);
	    },
	    setMultipleSelection: function setMultipleSelection() {
	      this.isChecked = !this.isChecked;
	      this.MdSelect.setMultipleValue(this.value);
	    },
	    setSelection: function setSelection() {
	      if (!this.disabled) {
	        if (this.isMultiple) {
	          this.setMultipleSelection();
	        } else {
	          this.setSingleSelection();
	        }
	      }
	    },
	    setItem: function setItem() {
	      this.$set(this.MdSelect.items, this.key, this.getTextContent());
	    }
	  },
	  updated: function updated() {
	    this.setItem();
	  },
	  created: function created() {
	    this.setItem();
	    this.setIsSelected();

	    if (this.isMultiple && this.selectValue && this.selectValue.length) {
	      this.isChecked = this.selectValue.includes(this.value);
	    }
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 257 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdField/MdSelect/MdOptgroup.vue
	var MdOptgroup = __webpack_require__(259);
	var MdOptgroup_default = /*#__PURE__*/__webpack_require__.n(MdOptgroup);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-60840a93","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdField/MdSelect/MdOptgroup.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-optgroup" },
	    [
	      _c("md-subheader", [_vm._v(_vm._s(_vm.label))]),
	      _vm._v(" "),
	      _vm._t("default")
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSelect_MdOptgroup = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-60840a93", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdField/MdSelect/MdOptgroup.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(258)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdOptgroup_default.a,
	  MdSelect_MdOptgroup,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdField/MdSelect/MdOptgroup.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-60840a93", Component.options)
	  } else {
	    hotAPI.reload("data-v-60840a93", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdField_MdSelect_MdOptgroup = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 258 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 259 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdOptgroup',
	  props: {
	    label: String,
	    disabled: Boolean
	  },
	  provide: function provide() {
	    return {
	      MdOptgroup: {
	        disabled: this.disabled
	      }
	    };
	  }
	};

	/***/ }),
	/* 260 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdField/MdFile/MdFile.vue
	var MdFile = __webpack_require__(262);
	var MdFile_default = /*#__PURE__*/__webpack_require__.n(MdFile);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-16fac4a3","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdField/MdFile/MdFile.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-file" },
	    [
	      _c("md-file-icon", {
	        nativeOn: {
	          click: function($event) {
	            _vm.openPicker($event)
	          }
	        }
	      }),
	      _vm._v(" "),
	      _c(
	        "input",
	        _vm._b(
	          {
	            directives: [
	              {
	                name: "model",
	                rawName: "v-model",
	                value: _vm.model,
	                expression: "model"
	              }
	            ],
	            staticClass: "md-input",
	            attrs: { readonly: "" },
	            domProps: { value: _vm.model },
	            on: {
	              focus: _vm.openPicker,
	              blur: _vm.onBlur,
	              input: function($event) {
	                if ($event.target.composing) {
	                  return
	                }
	                _vm.model = $event.target.value
	              }
	            }
	          },
	          "input",
	          {
	            disabled: _vm.disabled,
	            required: _vm.required,
	            placeholder: _vm.placeholder
	          },
	          false
	        )
	      ),
	      _vm._v(" "),
	      _c(
	        "input",
	        _vm._g(
	          _vm._b(
	            {
	              ref: "inputFile",
	              attrs: { type: "file" },
	              on: { change: _vm.onChange }
	            },
	            "input",
	            _vm.attributes,
	            false
	          ),
	          _vm.$listeners
	        )
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdFile_MdFile = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-16fac4a3", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdField/MdFile/MdFile.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(261)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdFile_default.a,
	  MdFile_MdFile,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdField/MdFile/MdFile.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-16fac4a3", Component.options)
	  } else {
	    hotAPI.reload("data-v-16fac4a3", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdField_MdFile_MdFile = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 261 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 262 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	var _MdFileIcon = __webpack_require__(263);

	var _MdFileIcon2 = _interopRequireDefault(_MdFileIcon);

	var _MdFieldMixin = __webpack_require__(15);

	var _MdFieldMixin2 = _interopRequireDefault(_MdFieldMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdFile',
	  components: {
	    MdFileIcon: _MdFileIcon2.default
	  },
	  props: {
	    id: {
	      type: String,
	      default: function _default() {
	        return 'md-file-' + (0, _MdUuid2.default)();
	      }
	    },
	    name: String
	  },
	  mixins: [_MdFieldMixin2.default],
	  inject: ['MdField'],
	  methods: {
	    getMultipleName: function getMultipleName(files) {
	      var names = [];

	      [].concat(_toConsumableArray(files)).forEach(function (_ref) {
	        var name = _ref.name;
	        return names.push(name);
	      });

	      return names.join(', ');
	    },
	    getFileName: function getFileName(files, target) {
	      if (!files) {
	        return target.value.split('\\').pop();
	      }

	      if (files.length > 1) {
	        return this.getMultipleName(files);
	      }

	      if (files.length === 1) {
	        return files[0].name;
	      }

	      return null;
	    },
	    openPicker: function openPicker() {
	      this.onFocus();
	      this.$refs.inputFile.click();
	    },
	    onChange: function onChange($event) {
	      this.onFileSelected($event);
	    },
	    onFileSelected: function onFileSelected(_ref2) {
	      var target = _ref2.target,
	          dataTransfer = _ref2.dataTransfer;

	      var files = target.files || dataTransfer.files;

	      this.model = this.getFileName(files, target);
	      this.$emit('md-change', files || target.value);
	    }
	  },
	  created: function created() {
	    this.MdField.file = true;
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.MdField.file = false;
	  }
	};

	/***/ }),
	/* 263 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdFileIcon.vue
	var MdFileIcon = __webpack_require__(264);
	var MdFileIcon_default = /*#__PURE__*/__webpack_require__.n(MdFileIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-3bd0ca30","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdFileIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(0)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [
	      _c(
	        "svg",
	        {
	          attrs: {
	            height: "24",
	            viewBox: "0 0 24 24",
	            width: "24",
	            xmlns: "http://www.w3.org/2000/svg"
	          }
	        },
	        [
	          _c("path", {
	            attrs: {
	              d:
	                "M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z"
	            }
	          }),
	          _vm._v(" "),
	          _c("path", { attrs: { d: "M0 0h24v24H0z", fill: "none" } })
	        ]
	      )
	    ])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdFileIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-3bd0ca30", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdFileIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdFileIcon_default.a,
	  icons_MdFileIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdFileIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-3bd0ca30", Component.options)
	  } else {
	    hotAPI.reload("data-v-3bd0ca30", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdFileIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 264 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdFileIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 265 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdField/MdTextarea/MdTextarea.vue
	var MdTextarea = __webpack_require__(266);
	var MdTextarea_default = /*#__PURE__*/__webpack_require__.n(MdTextarea);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-445d103a","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdField/MdTextarea/MdTextarea.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "textarea",
	    _vm._g(
	      _vm._b(
	        {
	          directives: [
	            {
	              name: "model",
	              rawName: "v-model",
	              value: _vm.model,
	              expression: "model"
	            }
	          ],
	          staticClass: "md-textarea",
	          style: _vm.textareaStyles,
	          domProps: { value: _vm.model },
	          on: {
	            focus: _vm.onFocus,
	            blur: _vm.onBlur,
	            input: function($event) {
	              if ($event.target.composing) {
	                return
	              }
	              _vm.model = $event.target.value
	            }
	          }
	        },
	        "textarea",
	        _vm.attributes,
	        false
	      ),
	      _vm.$listeners
	    )
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTextarea_MdTextarea = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-445d103a", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdField/MdTextarea/MdTextarea.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTextarea_default.a,
	  MdTextarea_MdTextarea,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdField/MdTextarea/MdTextarea.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-445d103a", Component.options)
	  } else {
	    hotAPI.reload("data-v-445d103a", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdField_MdTextarea_MdTextarea = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 266 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	var _MdFieldMixin = __webpack_require__(15);

	var _MdFieldMixin2 = _interopRequireDefault(_MdFieldMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	function calculateContentHeight(el, lineHeight) {
	  var origHeight = el.style.height;
	  var height = el.offsetHeight;
	  var scrollHeight = el.scrollHeight;

	  el.style.overflow = 'hidden';

	  if (height >= scrollHeight) {
	    el.style.height = height + lineHeight + 'px';

	    if (scrollHeight < el.scrollHeight) {
	      el.style.height = origHeight;

	      return height;
	    }
	  }

	  return scrollHeight;
	}

	exports.default = new _MdComponent2.default({
	  name: 'MdTextarea',
	  mixins: [_MdFieldMixin2.default],
	  inject: ['MdField'],
	  props: {
	    id: {
	      type: String,
	      default: function _default() {
	        return 'md-textarea-' + (0, _MdUuid2.default)();
	      }
	    },
	    mdAutogrow: Boolean
	  },
	  computed: {
	    textareaStyles: function textareaStyles() {
	      return {
	        height: this.textareaHeight
	      };
	    }
	  },
	  methods: {
	    getTextAreaLineSize: function getTextAreaLineSize() {
	      var style = window.getComputedStyle(this.$el);

	      return parseInt(style.lineHeight, 10);
	    },
	    setTextAreaSize: function setTextAreaSize(height) {
	      var newHeight = height;

	      if (!height) {
	        var size = this.getTextAreaLineSize();

	        newHeight = calculateContentHeight(this.$el, size);
	      }

	      this.textareaHeight = newHeight + 'px';
	    },
	    applyStyles: function () {
	      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	        var _this = this;

	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                if (!this.mdAutogrow) {
	                  _context.next = 6;
	                  break;
	                }

	                this.setTextAreaSize(32);
	                _context.next = 4;
	                return this.$nextTick();

	              case 4:
	                this.setTextAreaSize();
	                window.setTimeout(function () {
	                  _this.$el.style.overflow = 'auto';
	                }, 10);

	              case 6:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function applyStyles() {
	        return _ref.apply(this, arguments);
	      }

	      return applyStyles;
	    }(),
	    setTextarea: function setTextarea() {
	      this.MdField.textarea = true;
	    },
	    setAutogrow: function setAutogrow() {
	      this.MdField.autogrow = this.mdAutogrow;
	    },
	    onInput: function onInput() {
	      this.setFieldValue();
	      this.applyStyles();
	    }
	  },
	  created: function created() {
	    this.setTextarea();
	    this.setAutogrow();
	  },
	  mounted: function () {
	    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
	      return regeneratorRuntime.wrap(function _callee2$(_context2) {
	        while (1) {
	          switch (_context2.prev = _context2.next) {
	            case 0:
	              _context2.next = 2;
	              return this.$nextTick();

	            case 2:
	              this.applyStyles();

	            case 3:
	            case 'end':
	              return _context2.stop();
	          }
	        }
	      }, _callee2, this);
	    }));

	    function mounted() {
	      return _ref2.apply(this, arguments);
	    }

	    return mounted;
	  }(),
	  beforeDestroy: function beforeDestroy() {
	    this.setTextarea(false);
	  }
	});

	/***/ }),
	/* 267 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdHighlightText = __webpack_require__(268);

	var _MdHighlightText2 = _interopRequireDefault(_MdHighlightText);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdHighlightText2.default.name, _MdHighlightText2.default);
	};

	/***/ }),
	/* 268 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdHighlightText_vue__ = __webpack_require__(270);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdHighlightText_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdHighlightText_vue__);
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(269)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */
	var __vue_template__ = null
	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdHighlightText_vue___default.a,
	  __vue_template__,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdHighlightText/MdHighlightText.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-41eb36a5", Component.options)
	  } else {
	    hotAPI.reload("data-v-41eb36a5", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 269 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 270 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _vue = __webpack_require__(7);

	var _vue2 = _interopRequireDefault(_vue);

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getHTMLOutput(str) {
	  var text = str;

	  if (!text) {
	    text = '$&';
	  }

	  return '<span class="md-highlight-text-match">' + text + '</span>';
	}

	function fuzzyHighlight(text, term) {
	  if (term.length === 0) {
	    return text;
	  }

	  var offset = text.toLowerCase().indexOf(term[0].toLowerCase());

	  if (offset === -1) {
	    return null;
	  }

	  var last = 0;
	  for (var i = 1; i < term.length; i++) {
	    if (text[offset + i] !== term[i]) {
	      break;
	    }

	    last = i;
	  }

	  var before = text.slice(0, offset);
	  var match = getHTMLOutput(text.slice(offset, offset + last + 1));
	  var after = fuzzyHighlight(text.slice(offset + last + 1), term.slice(last + 1));

	  return before + match + after;
	}

	function normalHighlight(text, term) {
	  var matches = new RegExp(term + '(?!([^<]+)?<)', 'gi');

	  return text.replace(matches, getHTMLOutput());
	}

	function generateHighlight(_ref, term, isFuzzy) {
	  var text = _ref.text;

	  if (text && term && term[0]) {
	    if (isFuzzy) {
	      return fuzzyHighlight(text, term) || text;
	    }

	    return normalHighlight(text, term);
	  }

	  return text;
	}

	exports.default = new _MdComponent2.default({
	  name: 'MdHighlightText',
	  abstract: true,
	  props: {
	    mdTerm: String,
	    mdFuzzySearch: {
	      type: Boolean,
	      default: true
	    }
	  },
	  render: function render(createElement) {
	    try {
	      var defaultSlot = this.$slots.default;

	      if (!defaultSlot) {
	        return null;
	      }

	      if (defaultSlot.length > 1 || defaultSlot[0].tag) {
	        throw new Error();
	      }

	      var HTMLContent = generateHighlight(defaultSlot[0], this.mdTerm, this.mdFuzzySearch);

	      return createElement('div', {
	        staticClass: 'md-highlight-text',
	        class: this.$mdActiveTheme,
	        domProps: {
	          innerHTML: HTMLContent
	        }
	      });
	    } catch (e) {
	      _vue2.default.util.warn('MdHighlightText can only render text nodes.', this);
	    }

	    return null;
	  }
	});

	/***/ }),
	/* 271 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdImage = __webpack_require__(272);

	var _MdImage2 = _interopRequireDefault(_MdImage);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdImage2.default.name, _MdImage2.default);
	};

	/***/ }),
	/* 272 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdImage/MdImage.vue
	var MdImage = __webpack_require__(274);
	var MdImage_default = /*#__PURE__*/__webpack_require__.n(MdImage);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-4511ea59","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdImage/MdImage.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-image", class: [_vm.$mdActiveTheme] },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdImage_MdImage = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-4511ea59", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdImage/MdImage.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(273)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdImage_default.a,
	  MdImage_MdImage,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdImage/MdImage.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-4511ea59", Component.options)
	  } else {
	    hotAPI.reload("data-v-4511ea59", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdImage_MdImage = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 273 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 274 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdImage',
	  props: {
	    mdSrc: String
	  }
	});

	/***/ }),
	/* 275 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	__webpack_require__(276);

	exports.default = function (Vue) {};

	/***/ }),
	/* 276 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 277 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdList = __webpack_require__(47);

	var _MdList2 = _interopRequireDefault(_MdList);

	var _MdListItem = __webpack_require__(48);

	var _MdListItem2 = _interopRequireDefault(_MdListItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdList2.default.name, _MdList2.default);
	  Vue.component(_MdListItem2.default.name, _MdListItem2.default);
	};

	/***/ }),
	/* 278 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 279 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _MdInteractionEvents = __webpack_require__(49);

	var _MdInteractionEvents2 = _interopRequireDefault(_MdInteractionEvents);

	var _MdRouterLinkProps = __webpack_require__(12);

	var _MdRouterLinkProps2 = _interopRequireDefault(_MdRouterLinkProps);

	var _MdListItemDefault = __webpack_require__(280);

	var _MdListItemDefault2 = _interopRequireDefault(_MdListItemDefault);

	var _MdListItemButton = __webpack_require__(284);

	var _MdListItemButton2 = _interopRequireDefault(_MdListItemButton);

	var _MdListItemLink = __webpack_require__(286);

	var _MdListItemLink2 = _interopRequireDefault(_MdListItemLink);

	var _MdListItemRouter = __webpack_require__(288);

	var _MdListItemRouter2 = _interopRequireDefault(_MdListItemRouter);

	var _MdListItemExpand = __webpack_require__(290);

	var _MdListItemExpand2 = _interopRequireDefault(_MdListItemExpand);

	var _MdButton = __webpack_require__(13);

	var _MdButton2 = _interopRequireDefault(_MdButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function hasExpansion(props) {
	  return props.hasOwnProperty('mdExpand') && props.mdExpand !== false;
	}

	function resolveScopedSlot(props, children) {
	  if (hasExpansion(props)) {
	    return {
	      'md-expand': function mdExpand() {
	        return children['md-expand'][0];
	      }
	    };
	  }
	}

	exports.default = {
	  name: 'MdListItem',
	  functional: true,
	  components: {
	    MdButton: _MdButton2.default
	  },
	  render: function render(createElement, _ref) {
	    var parent = _ref.parent,
	        props = _ref.props,
	        listeners = _ref.listeners,
	        data = _ref.data,
	        slots = _ref.slots;

	    var children = slots();
	    var listComponent = _MdListItemDefault2.default;
	    var staticClass = 'md-list-item';

	    if (hasExpansion(props)) {
	      listComponent = _MdListItemExpand2.default;
	    } else if (parent && parent.$router && props.to) {
	      listComponent = _MdListItemRouter2.default;
	      listComponent.props = (0, _MdRouterLinkProps2.default)(parent, {
	        target: String
	      });
	      delete listComponent.props.href;
	    } else if (props.href) {
	      listComponent = _MdListItemLink2.default;
	    } else {
	      var listenerNames = Object.keys(listeners);

	      listenerNames.forEach(function (listener) {
	        if (_MdInteractionEvents2.default.includes(listener)) {
	          listComponent = _MdListItemButton2.default;
	        }
	      });
	    }

	    if (data.staticClass) {
	      staticClass += ' ' + data.staticClass;
	    }

	    return createElement('li', _extends({}, data, {
	      staticClass: staticClass,
	      on: listeners
	    }), [createElement(listComponent, {
	      props: props,
	      scopedSlots: resolveScopedSlot(props, children),
	      staticClass: 'md-list-item-container md-button-clean'
	    }, children.default)]);
	  }
	};

	/***/ }),
	/* 280 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdList/MdListItem/MdListItemDefault.vue
	var MdListItemDefault = __webpack_require__(281);
	var MdListItemDefault_default = /*#__PURE__*/__webpack_require__.n(MdListItemDefault);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-b4eac868","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdList/MdListItem/MdListItemDefault.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-list-item-default", on: { click: _vm.toggleControl } },
	    [
	      _c(
	        "md-list-item-content",
	        { attrs: { "md-disabled": "" } },
	        [_vm._t("default")],
	        2
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdListItem_MdListItemDefault = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-b4eac868", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdList/MdListItem/MdListItemDefault.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdListItemDefault_default.a,
	  MdListItem_MdListItemDefault,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdList/MdListItem/MdListItemDefault.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-b4eac868", Component.options)
	  } else {
	    hotAPI.reload("data-v-b4eac868", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdList_MdListItem_MdListItemDefault = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 281 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdListItemMixin = __webpack_require__(11);

	var _MdListItemMixin2 = _interopRequireDefault(_MdListItemMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdListItemDefault',
	  mixins: [_MdListItemMixin2.default],
	  methods: {
	    toggleControl: function toggleControl() {
	      var control = this.$el.querySelector('.md-checkbox-container, .md-switch-container, .md-radio-container');

	      if (control) {
	        control.click();
	      }
	    }
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 282 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdList/MdListItem/MdListItemContent.vue
	var MdListItemContent = __webpack_require__(283);
	var MdListItemContent_default = /*#__PURE__*/__webpack_require__.n(MdListItemContent);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-af37c3f8","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdList/MdListItem/MdListItemContent.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-ripple",
	    {
	      staticClass: "md-list-item-content",
	      attrs: { "md-disabled": _vm.mdDisabled }
	    },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdListItem_MdListItemContent = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-af37c3f8", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdList/MdListItem/MdListItemContent.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdListItemContent_default.a,
	  MdListItem_MdListItemContent,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdList/MdListItem/MdListItemContent.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-af37c3f8", Component.options)
	  } else {
	    hotAPI.reload("data-v-af37c3f8", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdList_MdListItem_MdListItemContent = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 283 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdRipple = __webpack_require__(8);

	var _MdRipple2 = _interopRequireDefault(_MdRipple);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdListItemContent',
	  components: {
	    MdRipple: _MdRipple2.default
	  },
	  props: {
	    mdDisabled: Boolean
	  }
	}; //
	//
	//
	//
	//
	//

	/***/ }),
	/* 284 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdList/MdListItem/MdListItemButton.vue
	var MdListItemButton = __webpack_require__(285);
	var MdListItemButton_default = /*#__PURE__*/__webpack_require__.n(MdListItemButton);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-4d27ca12","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdList/MdListItem/MdListItemButton.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "button",
	    {
	      staticClass: "md-list-item-button",
	      attrs: { type: "button", disabled: _vm.disabled }
	    },
	    [
	      _c(
	        "md-list-item-content",
	        { attrs: { "md-disabled": _vm.isDisabled } },
	        [_vm._t("default")],
	        2
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdListItem_MdListItemButton = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-4d27ca12", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdList/MdListItem/MdListItemButton.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdListItemButton_default.a,
	  MdListItem_MdListItemButton,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdList/MdListItem/MdListItemButton.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-4d27ca12", Component.options)
	  } else {
	    hotAPI.reload("data-v-4d27ca12", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdList_MdListItem_MdListItemButton = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 285 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdListItemMixin = __webpack_require__(11);

	var _MdListItemMixin2 = _interopRequireDefault(_MdListItemMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdListItemButton',
	  mixins: [_MdListItemMixin2.default]
	}; //
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 286 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdList/MdListItem/MdListItemLink.vue
	var MdListItemLink = __webpack_require__(287);
	var MdListItemLink_default = /*#__PURE__*/__webpack_require__.n(MdListItemLink);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-49acb202","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdList/MdListItem/MdListItemLink.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "a",
	    _vm._b(
	      { staticClass: "md-list-item-link" },
	      "a",
	      { href: _vm.href, disabled: _vm.disabled, target: _vm.target },
	      false
	    ),
	    [
	      _c(
	        "md-list-item-content",
	        { attrs: { "md-disabled": _vm.isDisabled } },
	        [_vm._t("default")],
	        2
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdListItem_MdListItemLink = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-49acb202", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdList/MdListItem/MdListItemLink.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdListItemLink_default.a,
	  MdListItem_MdListItemLink,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdList/MdListItem/MdListItemLink.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-49acb202", Component.options)
	  } else {
	    hotAPI.reload("data-v-49acb202", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdList_MdListItem_MdListItemLink = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 287 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdListItemMixin = __webpack_require__(11);

	var _MdListItemMixin2 = _interopRequireDefault(_MdListItemMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdListItemLink',
	  mixins: [_MdListItemMixin2.default],
	  props: {
	    href: String,
	    target: String
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 288 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdList/MdListItem/MdListItemRouter.vue
	var MdListItemRouter = __webpack_require__(289);
	var MdListItemRouter_default = /*#__PURE__*/__webpack_require__.n(MdListItemRouter);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-091cb0e4","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdList/MdListItem/MdListItemRouter.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "router-link",
	    _vm._b(
	      { staticClass: "md-list-item-router" },
	      "router-link",
	      _vm.routerProps,
	      false
	    ),
	    [
	      _c(
	        "md-list-item-content",
	        { attrs: { "md-disabled": _vm.isDisabled } },
	        [_vm._t("default")],
	        2
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdListItem_MdListItemRouter = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-091cb0e4", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdList/MdListItem/MdListItemRouter.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdListItemRouter_default.a,
	  MdListItem_MdListItemRouter,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdList/MdListItem/MdListItemRouter.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-091cb0e4", Component.options)
	  } else {
	    hotAPI.reload("data-v-091cb0e4", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdList_MdListItem_MdListItemRouter = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 289 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdListItemMixin = __webpack_require__(11);

	var _MdListItemMixin2 = _interopRequireDefault(_MdListItemMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdListItemRouter',
	  mixins: [_MdListItemMixin2.default],
	  computed: {
	    routerProps: function routerProps() {
	      return this.$props;
	    }
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 290 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdList/MdListItem/MdListItemExpand.vue
	var MdListItemExpand = __webpack_require__(292);
	var MdListItemExpand_default = /*#__PURE__*/__webpack_require__.n(MdListItemExpand);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-378e4342","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdList/MdListItem/MdListItemExpand.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-list-item-expand", class: _vm.expandClasses },
	    [
	      _c(
	        "md-list-item-content",
	        {
	          attrs: { "md-disabled": _vm.isDisabled },
	          nativeOn: {
	            click: function($event) {
	              _vm.toggleExpand($event)
	            }
	          }
	        },
	        [
	          _vm._t("default"),
	          _vm._v(" "),
	          _c("md-arrow-down-icon", { staticClass: "md-list-expand-icon" })
	        ],
	        2
	      ),
	      _vm._v(" "),
	      _c(
	        "div",
	        {
	          ref: "listExpand",
	          staticClass: "md-list-expand",
	          style: _vm.expandStyles
	        },
	        [_vm._t("md-expand")],
	        2
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdListItem_MdListItemExpand = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-378e4342", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdList/MdListItem/MdListItemExpand.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(291)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdListItemExpand_default.a,
	  MdListItem_MdListItemExpand,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdList/MdListItem/MdListItemExpand.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-378e4342", Component.options)
	  } else {
	    hotAPI.reload("data-v-378e4342", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdList_MdListItem_MdListItemExpand = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 291 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 292 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _raf = __webpack_require__(9);

	var _raf2 = _interopRequireDefault(_raf);

	var _MdArrowDownIcon = __webpack_require__(293);

	var _MdArrowDownIcon2 = _interopRequireDefault(_MdArrowDownIcon);

	var _MdListItemMixin = __webpack_require__(11);

	var _MdListItemMixin2 = _interopRequireDefault(_MdListItemMixin);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdListItemExpand',
	  components: {
	    MdArrowDownIcon: _MdArrowDownIcon2.default
	  },
	  mixins: [_MdListItemMixin2.default],
	  data: function data() {
	    return {
	      expandStyles: {},
	      showContent: false
	    };
	  },
	  computed: {
	    expandClasses: function expandClasses() {
	      return {
	        'md-active': this.showContent
	      };
	    }
	  },
	  methods: {
	    getChildrenSize: function getChildrenSize() {
	      var expandEl = this.$refs.listExpand;
	      var size = 0;

	      Array.from(expandEl.children).forEach(function (child) {
	        size += child.offsetHeight;
	      });

	      return size;
	    },
	    toggleExpand: function toggleExpand() {
	      var _this = this;

	      (0, _raf2.default)(function () {
	        var fullHeight = 0;

	        if (!_this.showContent) {
	          fullHeight = 'auto'; // this.getChildrenSize() + 'px'
	        }

	        _this.expandStyles = { height: fullHeight };
	        _this.showContent = !_this.showContent;
	      });
	    }
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 293 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdArrowDownIcon.vue
	var MdArrowDownIcon = __webpack_require__(294);
	var MdArrowDownIcon_default = /*#__PURE__*/__webpack_require__.n(MdArrowDownIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-2443de21","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdArrowDownIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(0)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [
	      _c(
	        "svg",
	        {
	          attrs: {
	            height: "24",
	            viewBox: "0 0 24 24",
	            width: "24",
	            xmlns: "http://www.w3.org/2000/svg"
	          }
	        },
	        [
	          _c("path", {
	            attrs: { d: "M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z" }
	          }),
	          _vm._v(" "),
	          _c("path", { attrs: { d: "M0-.75h24v24H0z", fill: "none" } })
	        ]
	      )
	    ])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdArrowDownIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-2443de21", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdArrowDownIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdArrowDownIcon_default.a,
	  icons_MdArrowDownIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdArrowDownIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-2443de21", Component.options)
	  } else {
	    hotAPI.reload("data-v-2443de21", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdArrowDownIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 294 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdArrowDownIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 295 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdMenu = __webpack_require__(44);

	var _MdMenu2 = _interopRequireDefault(_MdMenu);

	var _MdMenuContent = __webpack_require__(45);

	var _MdMenuContent2 = _interopRequireDefault(_MdMenuContent);

	var _MdMenuItem = __webpack_require__(296);

	var _MdMenuItem2 = _interopRequireDefault(_MdMenuItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdMenu2.default.name, _MdMenu2.default);
	  Vue.component(_MdMenuContent2.default.name, _MdMenuContent2.default);
	  Vue.component(_MdMenuItem2.default.name, _MdMenuItem2.default);
	};

	/***/ }),
	/* 296 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdMenu/MdMenuItem.vue
	var MdMenuItem = __webpack_require__(297);
	var MdMenuItem_default = /*#__PURE__*/__webpack_require__.n(MdMenuItem);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-26762702","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdMenu/MdMenuItem.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-list-item",
	    _vm._g(
	      _vm._b(
	        {
	          staticClass: "md-menu-item",
	          class: [_vm.itemClasses, _vm.$mdActiveTheme],
	          attrs: { disabled: _vm.disabled, tabindex: _vm.highlighted && -1 }
	        },
	        "md-list-item",
	        _vm.$attrs,
	        false
	      ),
	      _vm.listeners
	    ),
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdMenu_MdMenuItem = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-26762702", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdMenu/MdMenuItem.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdMenuItem_default.a,
	  MdMenu_MdMenuItem,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdMenu/MdMenuItem.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-26762702", Component.options)
	  } else {
	    hotAPI.reload("data-v-26762702", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdMenu_MdMenuItem = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 297 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdInteractionEvents = __webpack_require__(49);

	var _MdInteractionEvents2 = _interopRequireDefault(_MdInteractionEvents);

	var _MdListItem = __webpack_require__(48);

	var _MdListItem2 = _interopRequireDefault(_MdListItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdMenuItem',
	  props: {
	    disabled: Boolean
	  },
	  inject: ['MdMenu'],
	  data: function data() {
	    return {
	      listeners: {},
	      highlighted: false
	    };
	  },
	  computed: {
	    itemClasses: function itemClasses() {
	      return {
	        'md-highlight': this.highlighted
	      };
	    }
	  },
	  created: function created() {
	    var _this = this;

	    if (this.MdMenu.closeOnSelect) {
	      var listenerNames = Object.keys(this.$listeners);
	      var hasInteraction = false;

	      listenerNames.forEach(function (listener) {
	        if (_MdInteractionEvents2.default.includes(listener)) {
	          _this.listeners[listener] = function ($event) {
	            if (!_this.disabled) {
	              _this.$listeners[listener]($event);
	              _this.MdMenu.active = false;

	              if (_this.MdMenu.eventObserver) {
	                _this.MdMenu.eventObserver.destroy();
	              }
	            }
	          };
	        } else {
	          _this.listeners[listener] = _this.$listeners[listener];
	        }
	      });
	    } else {
	      this.listeners = this.$listeners;
	    }
	  }
	}); //
	//
	//
	//
	//
	//

	/***/ }),
	/* 298 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdProgressBar = __webpack_require__(299);

	var _MdProgressBar2 = _interopRequireDefault(_MdProgressBar);

	var _MdProgressSpinner = __webpack_require__(302);

	var _MdProgressSpinner2 = _interopRequireDefault(_MdProgressSpinner);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdProgressBar2.default.name, _MdProgressBar2.default);
	  Vue.component(_MdProgressSpinner2.default.name, _MdProgressSpinner2.default);
	};

	/***/ }),
	/* 299 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdProgress/MdProgressBar/MdProgressBar.vue
	var MdProgressBar = __webpack_require__(301);
	var MdProgressBar_default = /*#__PURE__*/__webpack_require__.n(MdProgressBar);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-ec82e758","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdProgress/MdProgressBar/MdProgressBar.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c("transition", { attrs: { name: "md-progress-bar", appear: "" } }, [
	    _c(
	      "div",
	      {
	        staticClass: "md-progress-bar",
	        class: [_vm.progressClasses, _vm.$mdActiveTheme]
	      },
	      [
	        _c("div", {
	          staticClass: "md-progress-bar-track",
	          style: _vm.progressTrackStyle
	        }),
	        _vm._v(" "),
	        _c("div", {
	          staticClass: "md-progress-bar-fill",
	          style: _vm.progressValueStyle
	        }),
	        _vm._v(" "),
	        _c("div", {
	          staticClass: "md-progress-bar-buffer",
	          attrs: { Style: _vm.progressBufferStyle }
	        })
	      ]
	    )
	  ])
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdProgressBar_MdProgressBar = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-ec82e758", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdProgress/MdProgressBar/MdProgressBar.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(300)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdProgressBar_default.a,
	  MdProgressBar_MdProgressBar,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdProgress/MdProgressBar/MdProgressBar.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-ec82e758", Component.options)
	  } else {
	    hotAPI.reload("data-v-ec82e758", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdProgress_MdProgressBar_MdProgressBar = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 300 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 301 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdProgressBar',
	  props: {
	    mdValue: {
	      type: Number,
	      default: 0
	    },
	    mdBuffer: {
	      type: Number,
	      default: 0
	    },
	    mdMode: _extends({
	      type: String,
	      default: 'determinate'
	    }, (0, _MdPropValidator2.default)('md-mode', ['determinate', 'indeterminate', 'query', 'buffer']))
	  },
	  computed: {
	    isDeterminate: function isDeterminate() {
	      return this.mdMode === 'determinate';
	    },
	    isBuffer: function isBuffer() {
	      return this.mdMode === 'buffer';
	    },
	    hasAmountFill: function hasAmountFill() {
	      return this.isBuffer || this.isDeterminate;
	    },
	    progressClasses: function progressClasses() {
	      return 'md-' + this.mdMode;
	    },
	    progressValueStyle: function progressValueStyle() {
	      if (this.hasAmountFill) {
	        return 'width: ' + this.mdValue + '%';
	      }
	    },
	    progressTrackStyle: function progressTrackStyle() {
	      if (this.hasAmountFill) {
	        return 'width: ' + this.mdBuffer + '%';
	      }
	    },
	    progressBufferStyle: function progressBufferStyle() {
	      if (this.hasAmountFill) {
	        return 'left: calc(' + this.mdBuffer + '% + 8px)';
	      }
	    }
	  }
	});

	/***/ }),
	/* 302 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdProgress/MdProgressSpinner/MdProgressSpinner.vue
	var MdProgressSpinner = __webpack_require__(304);
	var MdProgressSpinner_default = /*#__PURE__*/__webpack_require__.n(MdProgressSpinner);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-0abf13e0","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdProgress/MdProgressSpinner/MdProgressSpinner.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "transition",
	    { attrs: { name: "md-progress-spinner", appear: "" } },
	    [
	      _c(
	        "div",
	        {
	          staticClass: "md-progress-spinner",
	          class: [_vm.progressClasses, _vm.$mdActiveTheme]
	        },
	        [
	          _c(
	            "svg",
	            {
	              staticClass: "md-progress-spinner-draw",
	              style: _vm.svgStyles,
	              attrs: {
	                preserveAspectRatio: "xMidYMid meet",
	                focusable: "false",
	                viewBox: "0 0 " + _vm.mdDiameter + " " + _vm.mdDiameter
	              }
	            },
	            [
	              _c("circle", {
	                staticClass: "md-progress-spinner-circle",
	                style: _vm.circleStyles,
	                attrs: { cx: "50%", cy: "50%", r: _vm.circleRadius }
	              })
	            ]
	          )
	        ]
	      )
	    ]
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdProgressSpinner_MdProgressSpinner = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-0abf13e0", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdProgress/MdProgressSpinner/MdProgressSpinner.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(303)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdProgressSpinner_default.a,
	  MdProgressSpinner_MdProgressSpinner,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdProgress/MdProgressSpinner/MdProgressSpinner.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-0abf13e0", Component.options)
	  } else {
	    hotAPI.reload("data-v-0abf13e0", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var MdProgress_MdProgressSpinner_MdProgressSpinner = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 303 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 304 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	var _MdProgressSpinnerAnimation = __webpack_require__(305);

	var _MdProgressSpinnerAnimation2 = _interopRequireDefault(_MdProgressSpinnerAnimation);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var MdProgressSpinner = {
	  styleTag: null,
	  diameters: new Set()
	};

	exports.default = new _MdComponent2.default({
	  name: 'MdProgressSpinner',
	  props: {
	    mdValue: {
	      type: Number,
	      default: 0
	    },
	    mdDiameter: {
	      type: Number,
	      default: 60
	    },
	    mdStroke: {
	      type: Number,
	      default: 6
	    },
	    mdMode: _extends({
	      type: String,
	      default: 'determinate'
	    }, (0, _MdPropValidator2.default)('md-mode', ['determinate', 'indeterminate']))
	  },
	  computed: {
	    isDeterminate: function isDeterminate() {
	      return this.mdMode === 'determinate';
	    },
	    isIndeterminate: function isIndeterminate() {
	      return this.mdMode === 'indeterminate';
	    },
	    isIE: function isIE() {
	      return navigator.userAgent.toLowerCase().includes('trident');
	    },
	    progressClasses: function progressClasses() {
	      var _ref;

	      var animationClass = 'md-progress-spinner-indeterminate';

	      if (this.isIE) {
	        animationClass += '-fallback';
	      }

	      return _ref = {}, _defineProperty(_ref, animationClass, true), _defineProperty(_ref, 'md-' + this.mdMode, true), _ref;
	    },
	    svgStyles: function svgStyles() {
	      var size = this.mdDiameter + 'px';

	      return {
	        width: size,
	        height: size
	      };
	    },
	    circleStyles: function circleStyles() {
	      return {
	        'stroke-dashoffset': this.circleStrokeDashOffset,
	        'stroke-dasharray': this.circleStrokeDashArray,
	        'stroke-width': this.circleStrokeWidth,
	        'animation-name': 'md-progress-spinner-stroke-rotate-' + this.mdDiameter
	      };
	    },
	    circleRadius: function circleRadius() {
	      return (this.mdDiameter - this.mdStroke) / 2;
	    },
	    circleStrokeWidth: function circleStrokeWidth() {
	      return this.mdStroke + 'px';
	    },
	    circleCircumference: function circleCircumference() {
	      return 2 * Math.PI * this.circleRadius;
	    },
	    circleStrokeDashArray: function circleStrokeDashArray() {
	      return this.circleCircumference + 'px';
	    },
	    circleStrokeDashOffset: function circleStrokeDashOffset() {
	      if (this.isDeterminate) {
	        return this.circleCircumference * (100 - this.mdValue) / 100 + 'px';
	      }

	      if (this.isIndeterminate && this.isIE) {
	        return this.circleCircumference * 0.2 + 'px';
	      }

	      return null;
	    }
	  },
	  watch: {
	    mdDiameter: function mdDiameter() {
	      this.attachStyleTag();
	    }
	  },
	  methods: {
	    getAnimationCSS: function getAnimationCSS() {
	      return _MdProgressSpinnerAnimation2.default.replace(/START_VALUE/g, '' + 0.95 * this.circleCircumference).replace(/END_VALUE/g, '' + 0.2 * this.circleCircumference).replace(/DIAMETER/g, '' + this.mdDiameter);
	    },
	    attachStyleTag: function attachStyleTag() {
	      var styleTag = MdProgressSpinner.styleTag;

	      if (!styleTag) {
	        styleTag = document.getElementById('md-progress-spinner-styles');
	      }

	      if (!styleTag) {
	        styleTag = document.createElement('style');

	        styleTag.id = 'md-progress-spinner-styles';
	        document.head.appendChild(styleTag);
	        MdProgressSpinner.styleTag = styleTag;
	      }

	      if (styleTag && styleTag.sheet) {
	        styleTag.sheet.insertRule(this.getAnimationCSS(), 0);
	      }

	      MdProgressSpinner.diameters.add(this.mdDiameter);
	    }
	  },
	  mounted: function mounted() {
	    this.attachStyleTag();
	  }
	});

	/***/ }),
	/* 305 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = "\n  @keyframes md-progress-spinner-stroke-rotate-DIAMETER {\n    0% {\n      stroke-dashoffset: START_VALUE;\n      transform: rotate(0);\n    }\n\n    12.5% {\n      stroke-dashoffset: END_VALUE;\n      transform: rotate(0);\n    }\n\n    12.51% {\n      stroke-dashoffset: END_VALUE;\n      transform: rotateX(180deg) rotate(72.5deg);\n    }\n\n    25% {\n      stroke-dashoffset: START_VALUE;\n      transform: rotateX(180deg) rotate(72.5deg);\n    }\n\n    25.1% {\n      stroke-dashoffset: START_VALUE;\n      transform: rotate(270deg);\n    }\n\n    37.5% {\n      stroke-dashoffset: END_VALUE;\n      transform: rotate(270deg);\n    }\n\n    37.51% {\n      stroke-dashoffset: END_VALUE;\n      transform: rotateX(180deg) rotate(161.5deg);\n    }\n\n    50% {\n      stroke-dashoffset: START_VALUE;\n      transform: rotateX(180deg) rotate(161.5deg);\n    }\n\n    50.01% {\n      stroke-dashoffset: START_VALUE;\n      transform: rotate(180deg);\n    }\n\n    62.5% {\n      stroke-dashoffset: END_VALUE;\n      transform: rotate(180deg);\n    }\n\n    62.51% {\n      stroke-dashoffset: END_VALUE;\n      transform: rotateX(180deg) rotate(251.5deg);\n    }\n\n    75% {\n      stroke-dashoffset: START_VALUE;\n      transform: rotateX(180deg) rotate(251.5deg);\n    }\n\n    75.01% {\n      stroke-dashoffset: START_VALUE;\n      transform: rotate(90deg);\n    }\n\n    87.5% {\n      stroke-dashoffset: END_VALUE;\n      transform: rotate(90deg);\n    }\n\n    87.51% {\n      stroke-dashoffset: END_VALUE;\n      transform: rotateX(180deg) rotate(341.5deg);\n    }\n\n    100% {\n      stroke-dashoffset: START_VALUE;\n      transform: rotateX(180deg) rotate(341.5deg);\n    }\n  }\n";

	/***/ }),
	/* 306 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdRadio = __webpack_require__(307);

	var _MdRadio2 = _interopRequireDefault(_MdRadio);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdRadio2.default.name, _MdRadio2.default);
	};

	/***/ }),
	/* 307 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdRadio/MdRadio.vue
	var MdRadio = __webpack_require__(309);
	var MdRadio_default = /*#__PURE__*/__webpack_require__.n(MdRadio);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-b5b900ce","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdRadio/MdRadio.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-radio", class: [_vm.$mdActiveTheme, _vm.radioClasses] },
	    [
	      _c(
	        "div",
	        {
	          staticClass: "md-radio-container",
	          on: {
	            click: function($event) {
	              $event.stopPropagation()
	              _vm.toggleCheck($event)
	            }
	          }
	        },
	        [
	          _c(
	            "md-ripple",
	            {
	              attrs: {
	                "md-centered": "",
	                "md-active": _vm.rippleActive,
	                "md-disabled": _vm.disabled
	              },
	              on: {
	                "update:mdActive": function($event) {
	                  _vm.rippleActive = $event
	                }
	              }
	            },
	            [
	              _c(
	                "input",
	                _vm._b(
	                  { attrs: { type: "radio" } },
	                  "input",
	                  {
	                    id: _vm.id,
	                    name: _vm.name,
	                    disabled: _vm.disabled,
	                    required: _vm.required,
	                    value: _vm.value
	                  },
	                  false
	                )
	              )
	            ]
	          )
	        ],
	        1
	      ),
	      _vm._v(" "),
	      _vm.$slots.default
	        ? _c(
	            "label",
	            {
	              staticClass: "md-radio-label",
	              attrs: { for: _vm.id },
	              on: {
	                click: function($event) {
	                  $event.preventDefault()
	                  _vm.toggleCheck($event)
	                }
	              }
	            },
	            [_vm._t("default")],
	            2
	          )
	        : _vm._e()
	    ]
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdRadio_MdRadio = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-b5b900ce", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdRadio/MdRadio.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(308)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdRadio_default.a,
	  MdRadio_MdRadio,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdRadio/MdRadio.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-b5b900ce", Component.options)
	  } else {
	    hotAPI.reload("data-v-b5b900ce", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdRadio_MdRadio = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 308 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 309 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	var _MdRipple = __webpack_require__(8);

	var _MdRipple2 = _interopRequireDefault(_MdRipple);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdRadio',
	  components: {
	    MdRipple: _MdRipple2.default
	  },
	  props: {
	    model: [String, Number, Boolean],
	    value: {
	      type: [String, Number, Boolean],
	      default: 'on'
	    },
	    id: {
	      type: String,
	      default: function _default() {
	        return 'md-radio-' + (0, _MdUuid2.default)();
	      }
	    },
	    name: [String, Number],
	    required: Boolean,
	    disabled: Boolean
	  },
	  model: {
	    prop: 'model',
	    event: 'change'
	  },
	  data: function data() {
	    return {
	      rippleActive: false
	    };
	  },
	  computed: {
	    isSelected: function isSelected() {
	      return this.model === this.value;
	    },
	    radioClasses: function radioClasses() {
	      return {
	        'md-checked': this.isSelected,
	        'md-disabled': this.disabled,
	        'md-required': this.required
	      };
	    }
	  },
	  methods: {
	    toggleCheck: function toggleCheck() {
	      if (!this.disabled) {
	        this.rippleActive = true;
	        this.$emit('change', this.value);
	      }
	    }
	  }
	}); //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 310 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdRipple = __webpack_require__(8);

	var _MdRipple2 = _interopRequireDefault(_MdRipple);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdRipple2.default.name, _MdRipple2.default);
	};

	/***/ }),
	/* 311 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdSnackbar = __webpack_require__(312);

	var _MdSnackbar2 = _interopRequireDefault(_MdSnackbar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdSnackbar2.default.name, _MdSnackbar2.default);
	};

	/***/ }),
	/* 312 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdSnackbar/MdSnackbar.vue
	var MdSnackbar = __webpack_require__(314);
	var MdSnackbar_default = /*#__PURE__*/__webpack_require__.n(MdSnackbar);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-7063bc8f","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdSnackbar/MdSnackbar.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm.mdPersistent && _vm.mdDuration !== Infinity
	    ? _c(
	        "md-portal",
	        [
	          _c(
	            "keep-alive",
	            [
	              _vm.mdActive
	                ? _c(
	                    "md-snackbar-content",
	                    {
	                      attrs: {
	                        "md-classes": [_vm.snackbarClasses, _vm.$mdActiveTheme]
	                      }
	                    },
	                    [_vm._t("default")],
	                    2
	                  )
	                : _vm._e()
	            ],
	            1
	          )
	        ],
	        1
	      )
	    : _c(
	        "md-portal",
	        [
	          _vm.mdActive
	            ? _c(
	                "md-snackbar-content",
	                {
	                  attrs: {
	                    "md-classes": [_vm.snackbarClasses, _vm.$mdActiveTheme]
	                  }
	                },
	                [_vm._t("default")],
	                2
	              )
	            : _vm._e()
	        ],
	        1
	      )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSnackbar_MdSnackbar = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-7063bc8f", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdSnackbar/MdSnackbar.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(313)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdSnackbar_default.a,
	  MdSnackbar_MdSnackbar,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdSnackbar/MdSnackbar.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-7063bc8f", Component.options)
	  } else {
	    hotAPI.reload("data-v-7063bc8f", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdSnackbar_MdSnackbar = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 313 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 314 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	var _MdPortal = __webpack_require__(16);

	var _MdPortal2 = _interopRequireDefault(_MdPortal);

	var _MdSnackbarContent = __webpack_require__(315);

	var _MdSnackbarContent2 = _interopRequireDefault(_MdSnackbarContent);

	var _MdSnackbarQueue = __webpack_require__(317);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	exports.default = new _MdComponent2.default({
	  name: 'MdSnackbar',
	  components: {
	    MdPortal: _MdPortal2.default,
	    MdSnackbarContent: _MdSnackbarContent2.default
	  },
	  props: {
	    mdActive: Boolean,
	    mdPersistent: Boolean,
	    mdDuration: {
	      type: Number,
	      default: 4000
	    },
	    mdPosition: _extends({
	      type: String,
	      default: 'center'
	    }, (0, _MdPropValidator2.default)('md-position', ['center', 'left']))
	  },
	  computed: {
	    snackbarClasses: function snackbarClasses() {
	      return _defineProperty({}, 'md-position-' + this.mdPosition, true);
	    }
	  },
	  watch: {
	    mdActive: function () {
	      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(isActive) {
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                if (!isActive) {
	                  _context.next = 7;
	                  break;
	                }

	                _context.next = 3;
	                return (0, _MdSnackbarQueue.createSnackbar)(this.mdDuration, this);

	              case 3:

	                this.$emit('update:mdActive', false);
	                this.$emit('md-opened');
	                _context.next = 9;
	                break;

	              case 7:
	                (0, _MdSnackbarQueue.destroySnackbar)();
	                this.$emit('md-closed');

	              case 9:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function mdActive(_x) {
	        return _ref2.apply(this, arguments);
	      }

	      return mdActive;
	    }()
	  }
	});

	/***/ }),
	/* 315 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdSnackbar/MdSnackbarContent.vue
	var MdSnackbarContent = __webpack_require__(316);
	var MdSnackbarContent_default = /*#__PURE__*/__webpack_require__.n(MdSnackbarContent);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-ffe066cc","hasScoped":false,"buble":{"transforms":{"stripWithFunctional":true}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdSnackbar/MdSnackbarContent.vue
	var render = function(_h, _vm) {
	  var _c = _vm._c
	  return _c("transition", { attrs: { name: "md-snackbar", appear: "" } }, [
	    _c("div", { staticClass: "md-snackbar", class: _vm.props.mdClasses }, [
	      _c("div", { staticClass: "md-snackbar-content" }, [_vm._t("default")], 2)
	    ])
	  ])
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSnackbar_MdSnackbarContent = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-ffe066cc", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdSnackbar/MdSnackbarContent.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = true
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdSnackbarContent_default.a,
	  MdSnackbar_MdSnackbarContent,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdSnackbar/MdSnackbarContent.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-ffe066cc", Component.options)
	  } else {
	    hotAPI.rerender("data-v-ffe066cc", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdSnackbar_MdSnackbarContent = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 316 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdSnackbarContent',
	  props: {
	    mdClasses: Array
	  }
	};

	/***/ }),
	/* 317 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	var currentSnackbar = null;
	var timeout = null;

	function createPromise(duration, context) {
	  return new Promise(function (resolve) {
	    currentSnackbar = {
	      destroy: function destroy() {
	        currentSnackbar = null;
	        resolve();
	      }
	    };

	    if (duration !== Infinity) {
	      timeout = window.setTimeout(function () {
	        destroySnackbar();
	        context._vnode.componentInstance.initDestroy(true);
	      }, duration);
	    }
	  });
	}

	var destroySnackbar = exports.destroySnackbar = function destroySnackbar() {
	  return new Promise(function () {
	    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve) {
	      return regeneratorRuntime.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              if (currentSnackbar) {
	                window.clearTimeout(timeout);
	                currentSnackbar.destroy();
	                window.setTimeout(resolve, 400);
	              } else {
	                resolve();
	              }

	            case 1:
	            case "end":
	              return _context.stop();
	          }
	        }
	      }, _callee, undefined);
	    }));

	    return function (_x) {
	      return _ref.apply(this, arguments);
	    };
	  }());
	};

	var createSnackbar = exports.createSnackbar = function () {
	  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(duration, context) {
	    return regeneratorRuntime.wrap(function _callee2$(_context2) {
	      while (1) {
	        switch (_context2.prev = _context2.next) {
	          case 0:
	            if (!currentSnackbar) {
	              _context2.next = 4;
	              break;
	            }

	            _context2.next = 3;
	            return destroySnackbar();

	          case 3:
	            return _context2.abrupt("return", createPromise(duration, context));

	          case 4:
	            return _context2.abrupt("return", createPromise(duration, context));

	          case 5:
	          case "end":
	            return _context2.stop();
	        }
	      }
	    }, _callee2, undefined);
	  }));

	  return function createSnackbar(_x2, _x3) {
	    return _ref2.apply(this, arguments);
	  };
	}();

	/***/ }),
	/* 318 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdSpeedDial = __webpack_require__(319);

	var _MdSpeedDial2 = _interopRequireDefault(_MdSpeedDial);

	var _MdSpeedDialTarget = __webpack_require__(322);

	var _MdSpeedDialTarget2 = _interopRequireDefault(_MdSpeedDialTarget);

	var _MdSpeedDialContent = __webpack_require__(325);

	var _MdSpeedDialContent2 = _interopRequireDefault(_MdSpeedDialContent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdSpeedDial2.default.name, _MdSpeedDial2.default);
	  Vue.component(_MdSpeedDialTarget2.default.name, _MdSpeedDialTarget2.default);
	  Vue.component(_MdSpeedDialContent2.default.name, _MdSpeedDialContent2.default);
	};

	/***/ }),
	/* 319 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdSpeedDial/MdSpeedDial.vue
	var MdSpeedDial = __webpack_require__(321);
	var MdSpeedDial_default = /*#__PURE__*/__webpack_require__.n(MdSpeedDial);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-470f76d1","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdSpeedDial/MdSpeedDial.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    {
	      staticClass: "md-speed-dial",
	      class: [_vm.$mdActiveTheme, _vm.speedDialClasses]
	    },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSpeedDial_MdSpeedDial = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-470f76d1", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdSpeedDial/MdSpeedDial.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(320)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdSpeedDial_default.a,
	  MdSpeedDial_MdSpeedDial,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdSpeedDial/MdSpeedDial.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-470f76d1", Component.options)
	  } else {
	    hotAPI.reload("data-v-470f76d1", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdSpeedDial_MdSpeedDial = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 320 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 321 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	exports.default = new _MdComponent2.default({
	  name: 'MdSpeedDial',
	  props: {
	    mdEvent: _extends({
	      type: String,
	      default: 'hover'
	    }, (0, _MdPropValidator2.default)('md-event', ['click', 'hover'])),
	    mdDirection: _extends({
	      type: String,
	      default: 'top'
	    }, (0, _MdPropValidator2.default)('md-direction', ['top', 'bottom'])),
	    mdEffect: _extends({
	      type: String,
	      default: 'fling'
	    }, (0, _MdPropValidator2.default)('md-effect', ['fling', 'scale', 'opacity']))
	  },
	  data: function data() {
	    return {
	      MdSpeedDial: {
	        active: false,
	        event: this.mdEvent,
	        direction: this.mdDirection
	      }
	    };
	  },
	  provide: function provide() {
	    return {
	      MdSpeedDial: this.MdSpeedDial
	    };
	  },

	  computed: {
	    speedDialClasses: function speedDialClasses() {
	      var _ref;

	      return _ref = {
	        'md-active': this.MdSpeedDial.active,
	        'md-with-hover': this.mdEvent === 'hover'
	      }, _defineProperty(_ref, 'md-direction-' + this.mdDirection, true), _defineProperty(_ref, 'md-effect-' + this.mdEffect, true), _ref;
	    }
	  }
	});

	/***/ }),
	/* 322 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdSpeedDial/MdSpeedDialTarget.vue
	var MdSpeedDialTarget = __webpack_require__(324);
	var MdSpeedDialTarget_default = /*#__PURE__*/__webpack_require__.n(MdSpeedDialTarget);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-654a757c","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdSpeedDial/MdSpeedDialTarget.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-button",
	    _vm._g(
	      _vm._b(
	        {
	          staticClass: "md-speed-dial-target md-fab",
	          on: { click: _vm.handleClick }
	        },
	        "md-button",
	        _vm.$attrs,
	        false
	      ),
	      _vm.$listeners
	    ),
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSpeedDial_MdSpeedDialTarget = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-654a757c", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdSpeedDial/MdSpeedDialTarget.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(323)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdSpeedDialTarget_default.a,
	  MdSpeedDial_MdSpeedDialTarget,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdSpeedDial/MdSpeedDialTarget.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-654a757c", Component.options)
	  } else {
	    hotAPI.reload("data-v-654a757c", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdSpeedDial_MdSpeedDialTarget = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 323 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 324 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdButton = __webpack_require__(13);

	var _MdButton2 = _interopRequireDefault(_MdButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdSpeedDialTarget',
	  components: {
	    MdButton: _MdButton2.default
	  },
	  inject: ['MdSpeedDial'],
	  methods: {
	    handleClick: function handleClick() {
	      if (this.MdSpeedDial.event === 'click') {
	        this.MdSpeedDial.active = !this.MdSpeedDial.active;
	      }
	    }
	  }
	}; //
	//
	//
	//
	//
	//

	/***/ }),
	/* 325 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdSpeedDial/MdSpeedDialContent.vue
	var MdSpeedDialContent = __webpack_require__(327);
	var MdSpeedDialContent_default = /*#__PURE__*/__webpack_require__.n(MdSpeedDialContent);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-45ac6418","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdSpeedDial/MdSpeedDialContent.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-speed-dial-content" },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSpeedDial_MdSpeedDialContent = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-45ac6418", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdSpeedDial/MdSpeedDialContent.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(326)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdSpeedDialContent_default.a,
	  MdSpeedDial_MdSpeedDialContent,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdSpeedDial/MdSpeedDialContent.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-45ac6418", Component.options)
	  } else {
	    hotAPI.reload("data-v-45ac6418", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdSpeedDial_MdSpeedDialContent = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 326 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 327 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	//
	//
	//
	//
	//
	//

	function getChildIndex(direction, index, count) {
	  if (direction === 'top') {
	    return count - index - 1;
	  }

	  return index;
	}

	exports.default = {
	  name: 'MdSpeedDialContent',
	  inject: ['MdSpeedDial'],
	  methods: {
	    setChildrenIndexes: function () {
	      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	        var _this = this;

	        var countChild;
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.next = 2;
	                return this.$nextTick();

	              case 2:
	                countChild = this.$children.length;


	                this.$children.forEach(function (child, index) {
	                  if (child._vnode.tag === 'button') {
	                    var childIndex = getChildIndex(_this.MdSpeedDial.direction, index, countChild);

	                    child.$el.setAttribute('md-button-index', childIndex);
	                    child.$el.classList.add('md-raised');
	                  }
	                });

	              case 4:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function setChildrenIndexes() {
	        return _ref.apply(this, arguments);
	      }

	      return setChildrenIndexes;
	    }()
	  },
	  mounted: function mounted() {
	    this.setChildrenIndexes();
	  },
	  updated: function updated() {
	    this.setChildrenIndexes();
	  }
	};

	/***/ }),
	/* 328 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdSteppers = __webpack_require__(329);

	var _MdSteppers2 = _interopRequireDefault(_MdSteppers);

	var _MdStep = __webpack_require__(339);

	var _MdStep2 = _interopRequireDefault(_MdStep);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdSteppers2.default.name, _MdSteppers2.default);
	  Vue.component(_MdStep2.default.name, _MdStep2.default);
	};

	/***/ }),
	/* 329 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdSteppers/MdSteppers.vue
	var MdSteppers = __webpack_require__(331);
	var MdSteppers_default = /*#__PURE__*/__webpack_require__.n(MdSteppers);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-95acb722","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdSteppers/MdSteppers.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    {
	      staticClass: "md-steppers",
	      class: [_vm.steppersClasses, _vm.$mdActiveTheme]
	    },
	    [
	      !_vm.mdVertical
	        ? _c(
	            "div",
	            { staticClass: "md-steppers-navigation" },
	            _vm._l(_vm.MdSteppers.items, function(_, index) {
	              return _c("md-step-header", {
	                key: index,
	                attrs: { index: index }
	              })
	            })
	          )
	        : _vm._e(),
	      _vm._v(" "),
	      _c(
	        "div",
	        { staticClass: "md-steppers-wrapper", style: _vm.contentStyles },
	        [
	          _c(
	            "div",
	            {
	              staticClass: "md-steppers-container",
	              style: _vm.containerStyles
	            },
	            [_vm._t("default")],
	            2
	          )
	        ]
	      )
	    ]
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSteppers_MdSteppers = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-95acb722", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdSteppers/MdSteppers.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(330)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdSteppers_default.a,
	  MdSteppers_MdSteppers,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdSteppers/MdSteppers.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-95acb722", Component.options)
	  } else {
	    hotAPI.reload("data-v-95acb722", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdSteppers_MdSteppers = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 330 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 331 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdObserveElement = __webpack_require__(26);

	var _MdObserveElement2 = _interopRequireDefault(_MdObserveElement);

	var _MdStepHeader = __webpack_require__(50);

	var _MdStepHeader2 = _interopRequireDefault(_MdStepHeader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = new _MdComponent2.default({
	  name: 'MdSteppers',
	  components: {
	    MdStepHeader: _MdStepHeader2.default
	  },
	  props: {
	    mdSyncRoute: Boolean,
	    mdDynamicHeight: Boolean,
	    mdVertical: Boolean,
	    mdLinear: Boolean,
	    mdAlternative: Boolean,
	    mdActiveStep: [String, Number]
	  },
	  data: function data() {
	    return {
	      activeStepIndex: 0,
	      noTransition: true,
	      containerStyles: {},
	      contentStyles: {},
	      MdSteppers: {
	        activeStep: 0,
	        isLinear: false,
	        isVertical: false,
	        items: {}
	      }
	    };
	  },
	  provide: function provide() {
	    var MdSteppers = this.MdSteppers;

	    MdSteppers.getStepperNumber = this.getStepperNumber;
	    MdSteppers.setActiveStep = this.setActiveStep;
	    MdSteppers.isPreviousStepperDone = this.isPreviousStepperDone;

	    return { MdSteppers: MdSteppers };
	  },

	  computed: {
	    steppersClasses: function steppersClasses() {
	      return {
	        'md-no-transition': this.noTransition,
	        'md-alternative': this.mdAlternative,
	        'md-horizontal': !this.mdVertical,
	        'md-vertical': this.mdVertical,
	        'md-dynamic-height': this.mdDynamicHeight
	      };
	    },
	    activeIndex: function activeIndex() {
	      return this.MdSteppers.activeStep;
	    }
	  },
	  watch: {
	    mdActiveStep: function mdActiveStep(stepper) {
	      this.MdSteppers.activeStep = stepper;
	      this.$emit('md-changed', stepper);
	    },
	    mdLinear: function mdLinear(isLinear) {
	      this.MdSteppers.isLinear = isLinear;
	    },
	    mdVertical: function mdVertical(isVertical) {
	      this.MdSteppers.isVertical = isVertical;
	    },
	    activeIndex: function () {
	      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.next = 2;
	                return this.$nextTick();

	              case 2:
	                this.setActiveStepIndex();
	                this.calculateStepperPos();

	              case 4:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function activeIndex() {
	        return _ref.apply(this, arguments);
	      }

	      return activeIndex;
	    }()
	  },
	  methods: {
	    hasActiveStep: function hasActiveStep() {
	      return this.MdSteppers.activeStep || this.mdActiveStep;
	    },
	    getItemsAndKeys: function getItemsAndKeys() {
	      var items = this.MdSteppers.items;

	      return {
	        items: items,
	        keys: Object.keys(items)
	      };
	    },
	    getStepperNumber: function getStepperNumber(id) {
	      var stepperNames = Object.keys(this.MdSteppers.items);

	      return stepperNames.indexOf(id) + 1;
	    },
	    isStepperDone: function isStepperDone(id) {
	      return this.MdSteppers.items[id].done;
	    },
	    isPreviousStepperDone: function isPreviousStepperDone(id) {
	      var items = this.MdSteppers.items;

	      var stepperNames = Object.keys(items);
	      var activeIndex = this.getStepperNumber(id) - 2;
	      var previousIndex = stepperNames[activeIndex];

	      if (!previousIndex) {
	        return true;
	      }

	      return items[previousIndex].done;
	    },
	    isStepperEditable: function isStepperEditable(id) {
	      return this.MdSteppers.items[id].editable;
	    },
	    setStepperAsDone: function setStepperAsDone(id) {
	      this.MdSteppers.items[id].done = true;
	    },
	    setPreviousStepperAsDone: function setPreviousStepperAsDone(newId) {
	      var activeIndex = this.getStepperNumber(this.MdSteppers.activeStep);
	      var newIndex = this.getStepperNumber(newId);

	      if (newIndex > activeIndex) {
	        this.setStepperAsDone(this.MdSteppers.activeStep);
	      }
	    },
	    setActiveStep: function setActiveStep(id) {
	      if (this.mdLinear && !this.isPreviousStepperDone(id)) {
	        return false;
	      }

	      if (id !== this.MdSteppers.activeStep && (this.isStepperEditable(id) || !this.isStepperDone(id))) {
	        this.setPreviousStepperAsDone(id);
	        this.MdSteppers.activeStep = id;
	        this.$emit('md-changed', id);
	        this.$emit('update:mdActiveStep', id);
	        this.MdSteppers.items[id].error = null;
	      }
	    },
	    setActiveStepIndex: function setActiveStepIndex() {
	      var activeButton = this.$el.querySelector('.md-button.md-active');

	      if (activeButton) {
	        this.activeStepIndex = [].indexOf.call(activeButton.parentNode.childNodes, activeButton);
	      }
	    },
	    setActiveStepByIndex: function setActiveStepByIndex(index) {
	      var _getItemsAndKeys = this.getItemsAndKeys(),
	          keys = _getItemsAndKeys.keys;

	      if (!this.hasActiveStep()) {
	        this.MdSteppers.activeStep = keys[index];
	      }
	    },
	    setActiveStepByRoute: function setActiveStepByRoute() {
	      var _this = this;

	      var _getItemsAndKeys2 = this.getItemsAndKeys(),
	          items = _getItemsAndKeys2.items,
	          keys = _getItemsAndKeys2.keys;

	      var stepperIndex = null;

	      if (this.$router) {
	        keys.forEach(function (key, index) {
	          var item = items[key];
	          var toProp = item.props.to;

	          if (toProp && toProp === _this.$route.path) {
	            stepperIndex = index;
	          }
	        });
	      }

	      if (!this.hasActiveStep() && !stepperIndex) {
	        this.MdSteppers.activeStep = keys[0];
	      } else {
	        this.MdSteppers.activeStep = keys[stepperIndex];

	        for (var i = 0; i < stepperIndex; i++) {
	          this.setStepperAsDone(keys[i]);
	        }
	      }
	    },
	    setupObservers: function setupObservers() {
	      var steppersContent = this.$el.querySelector('.md-steppers-wrapper');

	      if ('ResizeObserver' in window) {
	        this.resizeObserver = new window.ResizeObserver(this.calculateStepperPos);
	        this.resizeObserver.observe(this.$el);
	      }

	      if (steppersContent) {
	        this.resizeObserver = (0, _MdObserveElement2.default)(this.$el.querySelector('.md-steppers-wrapper'), {
	          childList: true,
	          characterData: true,
	          subtree: true
	        }, this.calculateStepperPos);
	      }
	    },
	    calculateStepperPos: function calculateStepperPos() {
	      if (!this.mdVertical) {
	        var stepperElement = this.$el.querySelector('.md-stepper:nth-child(' + (this.activeStepIndex + 1) + ')');

	        this.contentStyles = {
	          height: stepperElement.offsetHeight + 'px'
	        };

	        this.containerStyles = {
	          transform: 'translate3D(' + -this.activeStepIndex * 100 + '%, 0, 0)'
	        };
	      }
	    },
	    setupWatchers: function setupWatchers() {
	      if (this.mdSyncRoute) {
	        this.$watch('$route', {
	          deep: true,
	          handler: function handler() {
	            this.setActiveStepByRoute();
	          }
	        });
	      }
	    }
	  },
	  created: function created() {
	    this.MdSteppers.activeStep = this.mdActiveStep;
	    this.MdSteppers.isLinear = this.mdLinear;
	    this.MdSteppers.isVertical = this.mdVertical;
	  },
	  mounted: function () {
	    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
	      var _this2 = this;

	      return regeneratorRuntime.wrap(function _callee2$(_context2) {
	        while (1) {
	          switch (_context2.prev = _context2.next) {
	            case 0:
	              _context2.next = 2;
	              return this.$nextTick();

	            case 2:

	              if (this.mdSyncRoute) {
	                this.setActiveStepByRoute();
	              } else {
	                this.setActiveStepByIndex(0);
	              }

	              _context2.next = 5;
	              return this.$nextTick();

	            case 5:

	              this.setActiveStepIndex();
	              this.calculateStepperPos();

	              window.setTimeout(function () {
	                _this2.noTransition = false;
	                _this2.setupObservers();
	                _this2.setupWatchers();
	              }, 100);

	            case 8:
	            case 'end':
	              return _context2.stop();
	          }
	        }
	      }, _callee2, this);
	    }));

	    function mounted() {
	      return _ref2.apply(this, arguments);
	    }

	    return mounted;
	  }()
	});

	/***/ }),
	/* 332 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdWarningIcon = __webpack_require__(333);

	var _MdWarningIcon2 = _interopRequireDefault(_MdWarningIcon);

	var _MdCheckIcon = __webpack_require__(335);

	var _MdCheckIcon2 = _interopRequireDefault(_MdCheckIcon);

	var _MdEditIcon = __webpack_require__(337);

	var _MdEditIcon2 = _interopRequireDefault(_MdEditIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdStepperHeader',
	  components: {
	    MdWarningIcon: _MdWarningIcon2.default,
	    MdCheckIcon: _MdCheckIcon2.default,
	    MdEditIcon: _MdEditIcon2.default
	  },
	  props: {
	    index: {
	      type: String,
	      required: true
	    }
	  },
	  inject: ['MdSteppers'],
	  computed: {
	    data: function data() {
	      return this.MdSteppers.items[this.index];
	    },
	    shouldDisable: function shouldDisable() {
	      var data = this.data,
	          index = this.index,
	          MdSteppers = this.MdSteppers;


	      if (data.done && !data.editable) {
	        return true;
	      }

	      return MdSteppers.isLinear && !MdSteppers.isPreviousStepperDone(index);
	    },
	    classes: function classes() {
	      return {
	        'md-active': this.index === this.MdSteppers.activeStep,
	        'md-error': this.data.error,
	        'md-done': this.data.done
	      };
	    }
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 333 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdWarningIcon.vue
	var MdWarningIcon = __webpack_require__(334);
	var MdWarningIcon_default = /*#__PURE__*/__webpack_require__.n(MdWarningIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-8993dc9c","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdWarningIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(0)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [
	      _c(
	        "svg",
	        {
	          attrs: {
	            height: "24",
	            viewBox: "0 0 24 24",
	            width: "24",
	            xmlns: "http://www.w3.org/2000/svg"
	          }
	        },
	        [
	          _c("path", { attrs: { d: "M0 0h24v24H0z", fill: "none" } }),
	          _vm._v(" "),
	          _c("path", {
	            attrs: { d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z" }
	          })
	        ]
	      )
	    ])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdWarningIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-8993dc9c", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdWarningIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdWarningIcon_default.a,
	  icons_MdWarningIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdWarningIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-8993dc9c", Component.options)
	  } else {
	    hotAPI.reload("data-v-8993dc9c", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdWarningIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 334 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdWarningIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 335 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdCheckIcon.vue
	var MdCheckIcon = __webpack_require__(336);
	var MdCheckIcon_default = /*#__PURE__*/__webpack_require__.n(MdCheckIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-4154b05e","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdCheckIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(0)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [
	      _c(
	        "svg",
	        {
	          attrs: {
	            height: "24",
	            viewBox: "0 0 24 24",
	            width: "24",
	            xmlns: "http://www.w3.org/2000/svg"
	          }
	        },
	        [
	          _c("path", { attrs: { d: "M0 0h24v24H0z", fill: "none" } }),
	          _vm._v(" "),
	          _c("path", {
	            attrs: { d: "M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z" }
	          })
	        ]
	      )
	    ])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdCheckIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-4154b05e", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdCheckIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdCheckIcon_default.a,
	  icons_MdCheckIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdCheckIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-4154b05e", Component.options)
	  } else {
	    hotAPI.reload("data-v-4154b05e", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdCheckIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 336 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdDoneIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 337 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdEditIcon.vue
	var MdEditIcon = __webpack_require__(338);
	var MdEditIcon_default = /*#__PURE__*/__webpack_require__.n(MdEditIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-75d6b514","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdEditIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(0)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [
	      _c(
	        "svg",
	        {
	          attrs: {
	            height: "24",
	            viewBox: "0 0 24 24",
	            width: "24",
	            xmlns: "http://www.w3.org/2000/svg"
	          }
	        },
	        [
	          _c("path", {
	            attrs: {
	              d:
	                "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
	            }
	          }),
	          _vm._v(" "),
	          _c("path", { attrs: { d: "M0 0h24v24H0z", fill: "none" } })
	        ]
	      )
	    ])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdEditIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-75d6b514", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdEditIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdEditIcon_default.a,
	  icons_MdEditIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdEditIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-75d6b514", Component.options)
	  } else {
	    hotAPI.reload("data-v-75d6b514", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdEditIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 338 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdEditIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 339 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdSteppers/MdStep.vue
	var MdStep = __webpack_require__(341);
	var MdStep_default = /*#__PURE__*/__webpack_require__.n(MdStep);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-8624960e","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdSteppers/MdStep.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-stepper" },
	    [
	      _vm.MdSteppers.isVertical
	        ? _c("md-step-header", { attrs: { index: _vm.id } })
	        : _vm._e(),
	      _vm._v(" "),
	      _c(
	        "div",
	        {
	          staticClass: "md-stepper-content",
	          class: { "md-active": _vm.id === _vm.MdSteppers.activeStep }
	        },
	        [_vm._t("default")],
	        2
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSteppers_MdStep = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-8624960e", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdSteppers/MdStep.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(340)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdStep_default.a,
	  MdSteppers_MdStep,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdSteppers/MdStep.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-8624960e", Component.options)
	  } else {
	    hotAPI.reload("data-v-8624960e", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdSteppers_MdStep = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 340 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 341 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	var _MdStepHeader = __webpack_require__(50);

	var _MdStepHeader2 = _interopRequireDefault(_MdStepHeader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdStep',
	  components: {
	    MdStepHeader: _MdStepHeader2.default
	  },
	  props: {
	    id: {
	      type: String,
	      default: function _default() {
	        return 'md-stepper-' + (0, _MdUuid2.default)();
	      }
	    },
	    href: [String, Number],
	    to: null,
	    mdLabel: String,
	    mdDescription: String,
	    mdError: String,
	    mdDone: Boolean,
	    mdEditable: {
	      type: Boolean,
	      default: true
	    }
	  },
	  inject: ['MdSteppers'],
	  watch: {
	    $props: {
	      deep: true,
	      handler: function handler() {
	        this.setStepperData();
	      }
	    }
	  },
	  methods: {
	    getPropValues: function getPropValues() {
	      var _this = this;

	      var propNames = Object.keys(this.$options.props);
	      var ignoredProps = ['id', 'mdLabel', 'mdDescription', 'mdError', 'mdEditable'];
	      var values = {};

	      propNames.forEach(function (prop) {
	        if (!ignoredProps.includes(prop)) {
	          if (_this[prop]) {
	            values[prop] = _this[prop];
	          } else if (_this.$attrs.hasOwnProperty(prop)) {
	            if (prop) {
	              values[prop] = _this.$attrs[prop];
	            } else {
	              values[prop] = true;
	            }
	          }
	        }
	      });

	      return values;
	    },
	    setStepperData: function setStepperData() {
	      this.$set(this.MdSteppers.items, this.id, {
	        label: this.mdLabel,
	        description: this.mdDescription,
	        error: this.mdError,
	        done: this.mdDone,
	        editable: this.mdEditable,
	        props: this.getPropValues(),
	        events: this.$listeners
	      });
	    },
	    setupWatchers: function setupWatchers() {
	      var _this2 = this;

	      var getProp = function getProp(prop) {
	        if (_this2.MdSteppers.items[_this2.id]) {
	          return _this2.MdSteppers.items[_this2.id][prop];
	        }
	      };

	      this.$watch(function () {
	        return getProp('error');
	      }, function () {
	        return _this2.$emit('update:mdError', getProp('error'));
	      });

	      this.$watch(function () {
	        return getProp('done');
	      }, function () {
	        return _this2.$emit('update:mdDone', getProp('done'));
	      });
	    }
	  },
	  created: function created() {
	    this.setStepperData();
	    this.setupWatchers();
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.$delete(this.MdSteppers.items, this.id);
	  },
	  render: function render(createElement) {
	    var stepperAttrs = {
	      staticClass: 'md-stepper',
	      attrs: _extends({}, this.$attrs, {
	        id: this.id
	      }),
	      on: this.$listeners
	    };

	    if (this.href) {
	      this.buttonProps = this.$options.props;
	    } else if (this.$router && this.to) {
	      this.$options.props = MdRouterLinkProps(this, this.$options.props);

	      stepperAttrs.props = this.$props;
	    }

	    return createElement('div', stepperAttrs, this.$slots.default);
	  }
	};

	/***/ }),
	/* 342 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdSubheader = __webpack_require__(343);

	var _MdSubheader2 = _interopRequireDefault(_MdSubheader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdSubheader2.default.name, _MdSubheader2.default);
	};

	/***/ }),
	/* 343 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdSubheader/MdSubheader.vue
	var MdSubheader = __webpack_require__(345);
	var MdSubheader_default = /*#__PURE__*/__webpack_require__.n(MdSubheader);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-7ff30e86","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdSubheader/MdSubheader.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm.insideList
	    ? _c(
	        "li",
	        { staticClass: "md-subheader", class: [_vm.$mdActiveTheme] },
	        [_vm._t("default")],
	        2
	      )
	    : _c(
	        "div",
	        { staticClass: "md-subheader", class: [_vm.$mdActiveTheme] },
	        [_vm._t("default")],
	        2
	      )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSubheader_MdSubheader = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-7ff30e86", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdSubheader/MdSubheader.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(344)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdSubheader_default.a,
	  MdSubheader_MdSubheader,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdSubheader/MdSubheader.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-7ff30e86", Component.options)
	  } else {
	    hotAPI.reload("data-v-7ff30e86", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdSubheader_MdSubheader = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 344 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 345 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdSubheader',
	  computed: {
	    insideList: function insideList() {
	      return this.$parent.$options._componentTag === 'md-list';
	    }
	  }
	}); //
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 346 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdSwitch = __webpack_require__(347);

	var _MdSwitch2 = _interopRequireDefault(_MdSwitch);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdSwitch2.default.name, _MdSwitch2.default);
	};

	/***/ }),
	/* 347 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdSwitch/MdSwitch.vue
	var MdSwitch = __webpack_require__(349);
	var MdSwitch_default = /*#__PURE__*/__webpack_require__.n(MdSwitch);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-5ff953a2","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdSwitch/MdSwitch.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-switch", class: [_vm.$mdActiveTheme, _vm.checkClasses] },
	    [
	      _c(
	        "div",
	        {
	          staticClass: "md-switch-container",
	          on: {
	            click: function($event) {
	              $event.stopPropagation()
	              _vm.toggleCheck($event)
	            }
	          }
	        },
	        [
	          _c(
	            "div",
	            { staticClass: "md-switch-thumb" },
	            [
	              _c(
	                "md-ripple",
	                {
	                  attrs: {
	                    "md-centered": "",
	                    "md-active": _vm.rippleActive,
	                    "md-disabled": _vm.disabled
	                  },
	                  on: {
	                    "update:mdActive": function($event) {
	                      _vm.rippleActive = $event
	                    }
	                  }
	                },
	                [
	                  _c(
	                    "input",
	                    _vm._b(
	                      { attrs: { type: "checkbox" } },
	                      "input",
	                      {
	                        id: _vm.id,
	                        name: _vm.name,
	                        disabled: _vm.disabled,
	                        required: _vm.required,
	                        value: _vm.value
	                      },
	                      false
	                    )
	                  )
	                ]
	              )
	            ],
	            1
	          )
	        ]
	      ),
	      _vm._v(" "),
	      _vm.$slots.default
	        ? _c(
	            "label",
	            {
	              staticClass: "md-switch-label",
	              attrs: { for: _vm.id },
	              on: {
	                click: function($event) {
	                  $event.preventDefault()
	                  _vm.toggleCheck($event)
	                }
	              }
	            },
	            [_vm._t("default")],
	            2
	          )
	        : _vm._e()
	    ]
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdSwitch_MdSwitch = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-5ff953a2", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdSwitch/MdSwitch.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(348)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdSwitch_default.a,
	  MdSwitch_MdSwitch,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdSwitch/MdSwitch.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-5ff953a2", Component.options)
	  } else {
	    hotAPI.reload("data-v-5ff953a2", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdSwitch_MdSwitch = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 348 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 349 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdCheckboxMixin = __webpack_require__(33);

	var _MdCheckboxMixin2 = _interopRequireDefault(_MdCheckboxMixin);

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdSwitch',
	  mixins: [_MdCheckboxMixin2.default],
	  props: {
	    id: {
	      type: String,
	      default: function _default() {
	        return 'md-switch-' + (0, _MdUuid2.default)();
	      }
	    }
	  }
	}); //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 350 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdTableContainer = __webpack_require__(351);

	var _MdTableContainer2 = _interopRequireDefault(_MdTableContainer);

	var _MdTableToolbar = __webpack_require__(374);

	var _MdTableToolbar2 = _interopRequireDefault(_MdTableToolbar);

	var _MdTableEmptyState = __webpack_require__(379);

	var _MdTableEmptyState2 = _interopRequireDefault(_MdTableEmptyState);

	var _MdTableRow = __webpack_require__(51);

	var _MdTableRow2 = _interopRequireDefault(_MdTableRow);

	var _MdTableHead = __webpack_require__(27);

	var _MdTableHead2 = _interopRequireDefault(_MdTableHead);

	var _MdTableCell = __webpack_require__(382);

	var _MdTableCell2 = _interopRequireDefault(_MdTableCell);

	var _MdTablePagination = __webpack_require__(385);

	var _MdTablePagination2 = _interopRequireDefault(_MdTablePagination);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component('MdTable', _MdTableContainer2.default);
	  Vue.component(_MdTableToolbar2.default.name, _MdTableToolbar2.default);
	  Vue.component(_MdTableEmptyState2.default.name, _MdTableEmptyState2.default);
	  Vue.component(_MdTableRow2.default.name, _MdTableRow2.default);
	  Vue.component(_MdTableHead2.default.name, _MdTableHead2.default);
	  Vue.component(_MdTableCell2.default.name, _MdTableCell2.default);
	  Vue.component(_MdTablePagination2.default.name, _MdTablePagination2.default);
	};

	/***/ }),
	/* 351 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _MdTable = __webpack_require__(352);

	var _MdTable2 = _interopRequireDefault(_MdTable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function processChildren(children, createElement) {
	  var slotNames = ['md-table-toolbar', 'md-table-empty-state', 'md-table-pagination'];
	  var nodes = Array.from(children);
	  var namedSlots = {};

	  nodes.forEach(function (node, index) {
	    if (node && node.tag) {
	      var tag = node.componentOptions && node.componentOptions.tag;

	      if (tag && slotNames.includes(tag)) {
	        node.data.slot = tag;
	        node.data.attrs = node.data.attrs || {};
	        namedSlots[tag] = function () {
	          return node;
	        };
	        nodes.splice(index, 1);
	      }
	    }
	  });

	  return {
	    childNodes: nodes,
	    slots: namedSlots
	  };
	}

	exports.default = {
	  name: 'MdTableContainer',
	  functional: true,
	  render: function render(createElement, _ref) {
	    var data = _ref.data,
	        props = _ref.props,
	        children = _ref.children;

	    var slotChildren = [];
	    var scopedSlots = data.scopedSlots;

	    if (children) {
	      var _processChildren = processChildren(children, createElement),
	          childNodes = _processChildren.childNodes,
	          slots = _processChildren.slots;

	      slotChildren = childNodes;
	      scopedSlots = _extends({}, scopedSlots, slots);
	    }

	    return createElement(_MdTable2.default, _extends({}, data, {
	      props: props,
	      scopedSlots: scopedSlots
	    }), [slotChildren]);
	  }
	};

	/***/ }),
	/* 352 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTable/MdTable.vue
	var MdTable = __webpack_require__(354);
	var MdTable_default = /*#__PURE__*/__webpack_require__.n(MdTable);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-aaeced82","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTable/MdTable.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-tag-switcher",
	    { staticClass: "md-table", attrs: { "md-tag": _vm.contentTag } },
	    [
	      _vm._t("md-table-toolbar"),
	      _vm._v(" "),
	      _c(
	        "keep-alive",
	        [
	          _vm.$scopedSlots["md-table-alternate-header"] && _vm.selectedCount
	            ? _c(
	                "md-table-alternate-header",
	                [
	                  _vm._t("md-table-alternate-header", null, {
	                    count: _vm.selectedCount
	                  })
	                ],
	                2
	              )
	            : _vm._e()
	        ],
	        1
	      ),
	      _vm._v(" "),
	      _vm.mdFixedHeader
	        ? _c(
	            "div",
	            {
	              staticClass: "md-table-fixed-header",
	              class: _vm.headerClasses,
	              style: _vm.headerStyles
	            },
	            [_c("table", [_c("md-table-thead")], 1)]
	          )
	        : _vm._e(),
	      _vm._v(" "),
	      _c(
	        "md-content",
	        {
	          staticClass: "md-table-content md-scrollbar",
	          class: _vm.contentClasses,
	          style: _vm.contentStyles,
	          on: { scroll: _vm.setScroll }
	        },
	        [
	          _c(
	            "table",
	            [
	              !_vm.mdFixedHeader && _vm.$scopedSlots["md-table-row"]
	                ? _c("md-table-thead", { class: _vm.headerClasses })
	                : _vm._e(),
	              _vm._v(" "),
	              !_vm.$scopedSlots["md-table-row"]
	                ? _c("tbody", [_vm._t("default")], 2)
	                : _vm.value.length
	                  ? _c(
	                      "tbody",
	                      _vm._l(_vm.value, function(item, index) {
	                        return _c(
	                          "md-table-row-ghost",
	                          {
	                            key: _vm.getRowId(item[_vm.mdModelId]),
	                            attrs: {
	                              "md-id": _vm.getRowId(item[_vm.mdModelId]),
	                              "md-index": index
	                            }
	                          },
	                          [_vm._t("md-table-row", null, { item: item })],
	                          2
	                        )
	                      })
	                    )
	                  : _vm.$scopedSlots["md-table-empty-state"]
	                    ? _c("tbody", [
	                        _c("tr", [
	                          _c(
	                            "td",
	                            { attrs: { colspan: _vm.headerCount } },
	                            [_vm._t("md-table-empty-state")],
	                            2
	                          )
	                        ])
	                      ])
	                    : _vm._e()
	            ],
	            1
	          ),
	          _vm._v(" "),
	          _vm._t("md-table-pagination")
	        ],
	        2
	      ),
	      _vm._v(" "),
	      _vm.value ? _vm._t("default") : _vm._e()
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTable_MdTable = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-aaeced82", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTable/MdTable.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(353)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTable_default.a,
	  MdTable_MdTable,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTable/MdTable.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-aaeced82", Component.options)
	  } else {
	    hotAPI.reload("data-v-aaeced82", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTable_MdTable = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 353 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 354 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var _raf = __webpack_require__(9);

	var _raf2 = _interopRequireDefault(_raf);

	var _MdTagSwitcher = __webpack_require__(355);

	var _MdTagSwitcher2 = _interopRequireDefault(_MdTagSwitcher);

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	var _MdTableThead = __webpack_require__(357);

	var _MdTableThead2 = _interopRequireDefault(_MdTableThead);

	var _MdTableAlternateHeader = __webpack_require__(365);

	var _MdTableAlternateHeader2 = _interopRequireDefault(_MdTableAlternateHeader);

	var _MdTableRow = __webpack_require__(51);

	var _MdTableRow2 = _interopRequireDefault(_MdTableRow);

	var _MdTableRowGhost = __webpack_require__(372);

	var _MdTableRowGhost2 = _interopRequireDefault(_MdTableRowGhost);

	var _MdTableCellSelection = __webpack_require__(52);

	var _MdTableCellSelection2 = _interopRequireDefault(_MdTableCellSelection);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdTable',
	  components: {
	    MdTagSwitcher: _MdTagSwitcher2.default,
	    MdTableAlternateHeader: _MdTableAlternateHeader2.default,
	    MdTableThead: _MdTableThead2.default,
	    MdTableRow: _MdTableRow2.default,
	    MdTableRowGhost: _MdTableRowGhost2.default,
	    MdTableCellSelection: _MdTableCellSelection2.default
	  },
	  props: {
	    value: [Array, Object],
	    mdModelId: {
	      type: String,
	      default: 'id'
	    },
	    mdCard: Boolean,
	    mdFixedHeader: Boolean,
	    mdHeight: {
	      type: Number,
	      default: 400
	    },
	    mdSort: String,
	    mdSortOrder: _extends({
	      type: String,
	      default: 'asc'
	    }, (0, _MdPropValidator2.default)('md-sort-order', ['asc', 'desc'])),
	    mdSortFn: {
	      type: Function,
	      default: function _default(value) {
	        var _this = this;

	        return value.sort(function (a, b) {
	          var sortBy = _this.MdTable.sort;

	          if (_this.MdTable.sortOrder === 'desc') {
	            return a[sortBy].localeCompare(b[sortBy]);
	          }

	          return b[sortBy].localeCompare(a[sortBy]);
	        });
	      }
	    }
	  },
	  data: function data() {
	    return {
	      fixedHeaderPadding: 0,
	      hasContentScroll: false,
	      MdTable: {
	        items: {},
	        sort: null,
	        sortOrder: null,
	        singleSelection: null,
	        selectedItems: {},
	        selectable: {},
	        fixedHeader: null,
	        contentPadding: null,
	        contentEl: null,
	        // computed
	        hasValue: this.hasValue,
	        // methods
	        emitEvent: this.emitEvent,
	        sortTable: this.sortTable,
	        manageItemSelection: this.manageItemSelection,
	        getModel: this.getModel,
	        getModelItem: this.getModelItem
	      }
	    };
	  },

	  computed: {
	    contentTag: function contentTag() {
	      if (this.mdCard) {
	        return 'md-card';
	      }

	      return 'md-content';
	    },
	    headerCount: function headerCount() {
	      return Object.keys(this.MdTable.items).length;
	    },
	    selectedCount: function selectedCount() {
	      return Object.keys(this.MdTable.selectedItems).length;
	    },
	    headerStyles: function headerStyles() {
	      if (this.mdFixedHeader) {
	        return 'padding-right: ' + this.fixedHeaderPadding + 'px';
	      }
	    },
	    hasValue: function hasValue() {
	      return this.value && this.value.length !== 0;
	    },
	    headerClasses: function headerClasses() {
	      if (this.mdFixedHeader && this.hasContentScroll || !this.hasValue) {
	        return 'md-table-fixed-header-active';
	      }
	    },
	    contentStyles: function contentStyles() {
	      if (this.mdFixedHeader) {
	        return 'height: ' + this.mdHeight + 'px';
	      }
	    },
	    contentClasses: function contentClasses() {
	      if (this.mdFixedHeader && this.value.length === 0) {
	        return 'md-table-empty';
	      }
	    }
	  },
	  provide: function provide() {
	    var MdTable = this.MdTable;

	    return { MdTable: MdTable };
	  },

	  watch: {
	    mdSort: {
	      immediate: true,
	      handler: function handler() {
	        this.MdTable.sort = this.mdSort;
	      }
	    },
	    mdSortOrder: {
	      immediate: true,
	      handler: function handler() {
	        this.MdTable.sortOrder = this.mdSortOrder;
	      }
	    },
	    mdFixedHeader: {
	      immediate: true,
	      handler: function handler() {
	        this.MdTable.fixedHeader = this.mdFixedHeader;
	      }
	    },
	    hasValue: {
	      immediate: true,
	      handler: function handler() {
	        this.MdTable.hasValue = this.hasValue;
	      }
	    }
	  },
	  methods: {
	    emitEvent: function emitEvent(eventName, value) {
	      this.$emit(eventName, value);
	    },
	    getRowId: function getRowId(id) {
	      if (id) {
	        return id;
	      }

	      return 'md-row-' + (0, _MdUuid2.default)();
	    },
	    setScroll: function setScroll($event) {
	      var _this2 = this;

	      (0, _raf2.default)(function () {
	        _this2.hasContentScroll = $event.target.scrollTop > 0;
	      });
	    },
	    getContentEl: function getContentEl() {
	      return this.$el.querySelector('.md-table-content');
	    },
	    setContentEl: function setContentEl() {
	      this.MdTable.contentEl = this.getContentEl();
	    },
	    setHeaderPadding: function setHeaderPadding() {
	      this.setContentEl();

	      var contentEl = this.MdTable.contentEl;

	      var tableEl = contentEl.childNodes[0];

	      this.fixedHeaderPadding = contentEl.offsetWidth - tableEl.offsetWidth;
	    },
	    getModel: function getModel() {
	      return this.value;
	    },
	    getModelItem: function getModelItem(index) {
	      return this.value[index];
	    },
	    manageItemSelection: function manageItemSelection(index) {
	      if (this.MdTable.selectedItems[index]) {
	        this.$delete(this.MdTable.selectedItems, index);
	      } else {
	        this.$set(this.MdTable.selectedItems, index, this.value[index]);
	      }

	      this.sendSelectionEvent();
	    },
	    sendSelectionEvent: function sendSelectionEvent() {
	      this.$emit('md-selected', Object.values(this.MdTable.selectedItems));
	    },
	    sortTable: function sortTable() {
	      if (Array.isArray(this.value)) {
	        this.$emit('input', this.mdSortFn(this.value));
	      }
	    }
	  },
	  mounted: function mounted() {
	    this.setContentEl();

	    if (this.mdFixedHeader) {
	      this.setHeaderPadding();
	    }
	  }
	};

	/***/ }),
	/* 355 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdTagSwitcher_vue__ = __webpack_require__(356);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdTagSwitcher_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdTagSwitcher_vue__);
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */
	var __vue_template__ = null
	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdTagSwitcher_vue___default.a,
	  __vue_template__,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTagSwitcher/MdTagSwitcher.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-6f07a399", Component.options)
	  } else {
	    hotAPI.reload("data-v-6f07a399", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 356 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = {
	  functional: true,
	  props: {
	    mdTag: {
	      type: String,
	      default: 'div'
	    }
	  },
	  render: function render(createElement, _ref) {
	    var props = _ref.props,
	        children = _ref.children,
	        data = _ref.data,
	        listeners = _ref.listeners;

	    return createElement(props.mdTag, _extends({}, data, {
	      on: listeners
	    }), children);
	  }
	};

	/***/ }),
	/* 357 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTable/MdTableThead.vue
	var MdTableThead = __webpack_require__(358);
	var MdTableThead_default = /*#__PURE__*/__webpack_require__.n(MdTableThead);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-8a8392f6","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTable/MdTableThead.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c("thead", [
	    _c(
	      "tr",
	      [
	        _c("md-table-head-selection"),
	        _vm._v(" "),
	        _vm._l(_vm.MdTable.items, function(item, index) {
	          return _c(
	            "md-table-head",
	            _vm._b({ key: index }, "md-table-head", item, false)
	          )
	        })
	      ],
	      2
	    )
	  ])
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTable_MdTableThead = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-8a8392f6", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTable/MdTableThead.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTableThead_default.a,
	  MdTable_MdTableThead,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTable/MdTableThead.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-8a8392f6", Component.options)
	  } else {
	    hotAPI.reload("data-v-8a8392f6", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTable_MdTableThead = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 358 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdTableHead = __webpack_require__(27);

	var _MdTableHead2 = _interopRequireDefault(_MdTableHead);

	var _MdTableHeadSelection = __webpack_require__(363);

	var _MdTableHeadSelection2 = _interopRequireDefault(_MdTableHeadSelection);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdTableThead',
	  inject: ['MdTable'],
	  components: {
	    MdTableHead: _MdTableHead2.default,
	    MdTableHeadSelection: _MdTableHeadSelection2.default
	  }
	};

	/***/ }),
	/* 359 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 360 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdUpwardIcon = __webpack_require__(361);

	var _MdUpwardIcon2 = _interopRequireDefault(_MdUpwardIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; } //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdTableHead',
	  components: {
	    MdUpwardIcon: _MdUpwardIcon2.default
	  },
	  props: {
	    mdNumeric: Boolean,
	    numeric: Boolean,
	    label: String,
	    tooltip: String,
	    sortBy: String
	  },
	  inject: ['MdTable'],
	  data: function data() {
	    return {
	      width: null
	    };
	  },
	  computed: {
	    hasSort: function hasSort() {
	      return this.MdTable.sort && this.sortBy;
	    },
	    isSorted: function isSorted() {
	      if (this.MdTable.sort) {
	        return this.MdTable.sort === this.sortBy;
	      }
	    },
	    isDescSorted: function isDescSorted() {
	      return this.isSorted && this.MdTable.sortOrder === 'desc';
	    },
	    isAscSorted: function isAscSorted() {
	      return this.isSorted && this.MdTable.sortOrder === 'asc';
	    },
	    headStyles: function headStyles() {
	      return {
	        width: this.width + 'px'
	      };
	    },
	    headClasses: function headClasses() {
	      return {
	        'md-numeric': this.numeric || this.mdNumeric,
	        'md-sortable': this.hasSort,
	        'md-sorted': this.isSorted,
	        'md-sorted-desc': this.isDescSorted
	      };
	    }
	  },
	  methods: {
	    changeSort: function changeSort() {
	      if (this.hasSort) {
	        if (this.isAscSorted) {
	          this.MdTable.sortOrder = 'desc';
	        } else {
	          this.MdTable.sortOrder = 'asc';
	        }

	        this.MdTable.sort = this.sortBy;
	        this.MdTable.emitEvent('md-sorted', this.MdTable.sort);
	        this.MdTable.emitEvent('update:mdSort', this.MdTable.sort);
	        this.MdTable.emitEvent('update:mdSortOrder', this.MdTable.sortOrder);
	        this.MdTable.sortTable();
	      }
	    },
	    getChildNodesBySelector: function getChildNodesBySelector(el, selector) {
	      return Array.from(el.childNodes).filter(function (_ref) {
	        var classList = _ref.classList;
	        return classList && classList.contains(selector);
	      });
	    },
	    getNodeIndex: function getNodeIndex(nodes, el) {
	      return [].indexOf.call(nodes, el);
	    },
	    setWidth: function setWidth() {
	      if (this.MdTable.fixedHeader) {
	        var cellSelector = 'md-table-cell';
	        var thEls = this.getChildNodesBySelector(this.$el.parentNode, 'md-table-head');
	        var tdEls = this.MdTable.contentEl.querySelectorAll('tr:first-child .' + cellSelector);
	        var nodeIndex = this.getNodeIndex(thEls, this.$el);

	        this.width = tdEls[nodeIndex].offsetWidth;
	      }
	    }
	  },
	  updated: function () {
	    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	      return regeneratorRuntime.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              _context.next = 2;
	              return this.$nextTick();

	            case 2:
	              this.setWidth();

	            case 3:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, _callee, this);
	    }));

	    function updated() {
	      return _ref2.apply(this, arguments);
	    }

	    return updated;
	  }(),
	  mounted: function () {
	    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
	      return regeneratorRuntime.wrap(function _callee2$(_context2) {
	        while (1) {
	          switch (_context2.prev = _context2.next) {
	            case 0:
	              _context2.next = 2;
	              return this.$nextTick();

	            case 2:
	              this.setWidth();

	            case 3:
	            case 'end':
	              return _context2.stop();
	          }
	        }
	      }, _callee2, this);
	    }));

	    function mounted() {
	      return _ref3.apply(this, arguments);
	    }

	    return mounted;
	  }()
	};

	/***/ }),
	/* 361 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/core/icons/MdUpwardIcon.vue
	var MdUpwardIcon = __webpack_require__(362);
	var MdUpwardIcon_default = /*#__PURE__*/__webpack_require__.n(MdUpwardIcon);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-235f197a","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/core/icons/MdUpwardIcon.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm._m(0)
	}
	var staticRenderFns = [
	  function() {
	    var _vm = this
	    var _h = _vm.$createElement
	    var _c = _vm._self._c || _h
	    return _c("md-icon", { staticClass: "md-icon-image" }, [
	      _c(
	        "svg",
	        {
	          attrs: {
	            height: "24",
	            viewBox: "0 0 24 24",
	            width: "24",
	            xmlns: "http://www.w3.org/2000/svg"
	          }
	        },
	        [
	          _c("path", { attrs: { d: "M0 0h24v24H0V0z", fill: "none" } }),
	          _vm._v(" "),
	          _c("path", {
	            attrs: {
	              d: "M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
	            }
	          })
	        ]
	      )
	    ])
	  }
	]
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var icons_MdUpwardIcon = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-235f197a", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/core/icons/MdUpwardIcon.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdUpwardIcon_default.a,
	  icons_MdUpwardIcon,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/core/icons/MdUpwardIcon.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-235f197a", Component.options)
	  } else {
	    hotAPI.reload("data-v-235f197a", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var core_icons_MdUpwardIcon = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 362 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdIcon = __webpack_require__(5);

	var _MdIcon2 = _interopRequireDefault(_MdIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdArrowDownIcon',
	  components: {
	    MdIcon: _MdIcon2.default
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 363 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTable/MdTableHeadSelection.vue
	var MdTableHeadSelection = __webpack_require__(364);
	var MdTableHeadSelection_default = /*#__PURE__*/__webpack_require__.n(MdTableHeadSelection);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-7fa31cbd","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTable/MdTableHeadSelection.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _vm.selectableCount
	    ? _c("md-table-head", { staticClass: "md-table-cell-selection" }, [
	        _c(
	          "div",
	          { staticClass: "md-table-cell-container" },
	          [
	            _c("md-checkbox", {
	              attrs: { disabled: _vm.isDisabled },
	              on: { change: _vm.onChange },
	              model: {
	                value: _vm.allSelected,
	                callback: function($$v) {
	                  _vm.allSelected = $$v
	                },
	                expression: "allSelected"
	              }
	            })
	          ],
	          1
	        )
	      ])
	    : _vm._e()
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTable_MdTableHeadSelection = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-7fa31cbd", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTable/MdTableHeadSelection.vue
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTableHeadSelection_default.a,
	  MdTable_MdTableHeadSelection,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTable/MdTableHeadSelection.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-7fa31cbd", Component.options)
	  } else {
	    hotAPI.reload("data-v-7fa31cbd", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTable_MdTableHeadSelection = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 364 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdTableHead = __webpack_require__(27);

	var _MdTableHead2 = _interopRequireDefault(_MdTableHead);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdTableHeadSelection',
	  components: {
	    MdTableHead: _MdTableHead2.default
	  },
	  inject: ['MdTable'],
	  data: function data() {
	    return {
	      allSelected: false
	    };
	  },
	  computed: {
	    selectableCount: function selectableCount() {
	      return Object.keys(this.selectable).length;
	    },
	    isDisabled: function isDisabled() {
	      return !this.selectableCount;
	    },
	    selectable: function selectable() {
	      return this.MdTable.selectable;
	    },
	    selectedItems: function selectedItems() {
	      return this.MdTable.selectedItems;
	    }
	  },
	  watch: {
	    selectedItems: {
	      immediate: true,
	      deep: true,
	      handler: function handler(items) {
	        var _this = this;

	        window.setTimeout(function () {
	          var countSelected = Object.keys(items).length;

	          if (_this.selectableCount > 0 && countSelected > 0) {
	            _this.allSelected = countSelected === _this.selectableCount;
	          }
	        }, 10);
	      }
	    }
	  },
	  methods: {
	    onChange: function onChange() {
	      var _this2 = this;

	      Object.values(this.MdTable.selectable).forEach(function (callback) {
	        callback(_this2.allSelected);
	      });
	    }
	  }
	}; //
	//
	//
	//
	//
	//
	//
	//

	/***/ }),
	/* 365 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTable/MdTableAlternateHeader.vue
	var MdTableAlternateHeader = __webpack_require__(367);
	var MdTableAlternateHeader_default = /*#__PURE__*/__webpack_require__.n(MdTableAlternateHeader);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-4241c118","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTable/MdTableAlternateHeader.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c("transition", { attrs: { name: "md-table-alternate-header" } }, [
	    _c(
	      "div",
	      { staticClass: "md-table-alternate-header" },
	      [_vm._t("default")],
	      2
	    )
	  ])
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTable_MdTableAlternateHeader = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-4241c118", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTable/MdTableAlternateHeader.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(366)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTableAlternateHeader_default.a,
	  MdTable_MdTableAlternateHeader,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTable/MdTableAlternateHeader.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-4241c118", Component.options)
	  } else {
	    hotAPI.reload("data-v-4241c118", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTable_MdTableAlternateHeader = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 366 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 367 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdTableAlternateHeader'
	};

	/***/ }),
	/* 368 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 369 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	var _MdTableCellSelection = __webpack_require__(52);

	var _MdTableCellSelection2 = _interopRequireDefault(_MdTableCellSelection);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdTableRow',
	  components: {
	    MdTableCellSelection: _MdTableCellSelection2.default
	  },
	  props: {
	    mdIndex: [Number, String],
	    mdId: [Number, String],
	    mdSelectable: _extends({
	      type: [String]
	    }, (0, _MdPropValidator2.default)('md-selectable', ['multiple', 'single'])),
	    mdDisabled: Boolean,
	    mdAutoSelect: Boolean
	  },
	  inject: ['MdTable'],
	  data: function data() {
	    return {
	      index: null,
	      isSelected: false
	    };
	  },
	  computed: {
	    selectableCount: function selectableCount() {
	      return Object.keys(this.MdTable.selectable).length;
	    },
	    isSingleSelected: function isSingleSelected() {
	      return this.MdTable.singleSelection === this.mdId;
	    },
	    hasMultipleSelection: function hasMultipleSelection() {
	      return this.MdTable.hasValue && this.mdSelectable === 'multiple';
	    },
	    hasSingleSelection: function hasSingleSelection() {
	      return this.MdTable.hasValue && this.mdSelectable === 'single';
	    },
	    rowClasses: function rowClasses() {
	      if (this.MdTable.hasValue) {
	        return {
	          'md-has-selection': !this.mdDisabled && (this.mdAutoSelect || this.hasSingleSelection),
	          'md-selected': this.isSelected,
	          'md-selected-single': this.isSingleSelected
	        };
	      }
	    }
	  },
	  watch: {
	    mdDisabled: function mdDisabled() {
	      if (this.mdDisabled) {
	        this.removeSelectableItem();
	      } else {
	        this.addSelectableItem();
	      }
	    },
	    mdId: function mdId(newId, oldId) {
	      this.removeSelectableItem(oldId);
	      this.addSelectableItem(newId);
	    },
	    isSelected: function isSelected() {
	      this.MdTable.manageItemSelection(this.mdIndex);
	    }
	  },
	  methods: {
	    onClick: function onClick() {
	      if (this.MdTable.hasValue && !this.mdDisabled) {
	        if (this.hasMultipleSelection) {
	          this.selectRowIfMultiple();
	        } else if (this.hasSingleSelection) {
	          this.selectRowIfSingle();
	        }
	      }
	    },
	    toggleSelection: function toggleSelection() {
	      this.isSelected = !this.isSelected;
	    },
	    selectRowIfSingle: function selectRowIfSingle() {
	      if (this.MdTable.singleSelection === this.mdId) {
	        this.MdTable.singleSelection = null;
	        this.$emit('md-selected', null);
	      } else {
	        this.MdTable.singleSelection = this.mdId;
	        this.$emit('md-selected', this.MdTable.getModelItem(this.mdIndex));
	      }
	    },
	    selectRowIfMultiple: function selectRowIfMultiple() {
	      if (this.mdAutoSelect) {
	        this.toggleSelection();
	      }
	    },
	    addSelectableItem: function addSelectableItem(id) {
	      var _this = this;

	      if (this.hasMultipleSelection && !this.mdDisabled) {
	        this.$set(this.MdTable.selectable, id || this.mdId, function (isSelected) {
	          _this.isSelected = isSelected;
	        });
	      }
	    },
	    removeSelectableItem: function removeSelectableItem(id) {
	      if (this.hasMultipleSelection) {
	        this.$delete(this.MdTable.selectable, id || this.mdId);
	      }
	    }
	  },
	  created: function created() {
	    this.addSelectableItem();
	  },
	  beforeDestroy: function beforeDestroy() {
	    this.removeSelectableItem();
	  }
	};

	/***/ }),
	/* 370 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 371 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdTableCellSelection',
	  props: {
	    value: Boolean,
	    mdRowId: [Number, String],
	    mdSelectable: Boolean,
	    mdDisabled: Boolean
	  },
	  inject: ['MdTable'],
	  data: function data() {
	    return {
	      isSelected: false
	    };
	  },
	  watch: {
	    value: function value() {
	      this.isSelected = this.value;
	    }
	  },
	  methods: {
	    onChange: function onChange() {
	      this.$emit('input', this.isSelected);
	    }
	  }
	};

	/***/ }),
	/* 372 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdTableRowGhost_vue__ = __webpack_require__(373);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdTableRowGhost_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdTableRowGhost_vue__);
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */
	var __vue_template__ = null
	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdTableRowGhost_vue___default.a,
	  __vue_template__,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTable/MdTableRowGhost.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-b1d6a698", Component.options)
	  } else {
	    hotAPI.reload("data-v-b1d6a698", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 373 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  name: 'MdTableRowGhost',
	  abstract: true,
	  props: {
	    mdIndex: [String, Number],
	    mdId: [String, Number]
	  },
	  render: function render() {
	    this.$slots.default[0].componentOptions.propsData.mdIndex = this.mdIndex;
	    this.$slots.default[0].componentOptions.propsData.mdId = this.mdId;

	    return this.$slots.default[0];
	  }
	};

	/***/ }),
	/* 374 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTable/MdTableToolbar.vue
	var MdTableToolbar = __webpack_require__(376);
	var MdTableToolbar_default = /*#__PURE__*/__webpack_require__.n(MdTableToolbar);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-3f6f4028","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTable/MdTableToolbar.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-toolbar",
	    {
	      staticClass: "md-table-toolbar md-transparent",
	      attrs: { "md-elevation": 0 }
	    },
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTable_MdTableToolbar = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-3f6f4028", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTable/MdTableToolbar.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(375)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTableToolbar_default.a,
	  MdTable_MdTableToolbar,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTable/MdTableToolbar.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-3f6f4028", Component.options)
	  } else {
	    hotAPI.reload("data-v-3f6f4028", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTable_MdTableToolbar = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 375 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 376 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdToolbar = __webpack_require__(53);

	var _MdToolbar2 = _interopRequireDefault(_MdToolbar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdTableToolbar',
	  components: {
	    MdToolbar: _MdToolbar2.default
	  },
	  inject: ['MdTable']
	}; //
	//
	//
	//
	//
	//

	/***/ }),
	/* 377 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 378 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdToolbar',
	  props: {
	    mdElevation: {
	      type: [String, Number],
	      default: 4
	    }
	  }
	}); //
	//
	//
	//
	//
	//

	/***/ }),
	/* 379 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTable/MdTableEmptyState.vue
	var MdTableEmptyState = __webpack_require__(381);
	var MdTableEmptyState_default = /*#__PURE__*/__webpack_require__.n(MdTableEmptyState);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-6f84743a","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTable/MdTableEmptyState.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-empty-state",
	    _vm._b(
	      { staticClass: "md-table-empty-state" },
	      "md-empty-state",
	      _vm.$props,
	      false
	    ),
	    [_vm._t("default")],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTable_MdTableEmptyState = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-6f84743a", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTable/MdTableEmptyState.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(380)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTableEmptyState_default.a,
	  MdTable_MdTableEmptyState,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTable/MdTableEmptyState.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-6f84743a", Component.options)
	  } else {
	    hotAPI.reload("data-v-6f84743a", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTable_MdTableEmptyState = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 380 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 381 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _MdEmptyState = __webpack_require__(41);

	var _MdEmptyState2 = _interopRequireDefault(_MdEmptyState);

	var _MdEmptyStateProps = __webpack_require__(42);

	var _MdEmptyStateProps2 = _interopRequireDefault(_MdEmptyStateProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdTableEmptyState',
	  props: _MdEmptyStateProps2.default,
	  inject: ['MdTable']
	};

	/***/ }),
	/* 382 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTable/MdTableCell.vue
	var MdTableCell = __webpack_require__(384);
	var MdTableCell_default = /*#__PURE__*/__webpack_require__.n(MdTableCell);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-813d6b7e","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTable/MdTableCell.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c("td", { staticClass: "md-table-cell", class: _vm.cellClasses }, [
	    _c(
	      "div",
	      { staticClass: "md-table-cell-container" },
	      [_vm._t("default")],
	      2
	    )
	  ])
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTable_MdTableCell = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-813d6b7e", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTable/MdTableCell.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(383)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTableCell_default.a,
	  MdTable_MdTableCell,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTable/MdTableCell.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-813d6b7e", Component.options)
	  } else {
	    hotAPI.reload("data-v-813d6b7e", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTable_MdTableCell = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 383 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 384 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdTableCell',
	  props: {
	    mdLabel: String,
	    mdNumeric: Boolean,
	    mdTooltip: String,
	    mdSortBy: String
	  },
	  inject: ['MdTable'],
	  data: function data() {
	    return {
	      index: null
	    };
	  },
	  computed: {
	    cellClasses: function cellClasses() {
	      return {
	        'md-numeric': this.mdNumeric
	      };
	    }
	  },
	  watch: {
	    mdSortBy: function mdSortBy() {
	      this.setCellData();
	    },
	    mdNumeric: function mdNumeric() {
	      this.setCellData();
	    },
	    mdLabel: function mdLabel() {
	      this.setCellData();
	    },
	    mdTooltip: function mdTooltip() {
	      this.setCellData();
	    }
	  },
	  methods: {
	    setCellData: function setCellData() {
	      var $vm = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;

	      this.$set(this.MdTable.items, $vm.index, {
	        label: $vm.mdLabel,
	        numeric: $vm.mdNumeric,
	        tooltip: $vm.mdTooltip,
	        sortBy: $vm.mdSortBy
	      });
	    },
	    updateAllCellData: function updateAllCellData() {
	      var _this = this;

	      var cells = Array.from(this.$el.parentNode.childNodes).filter(function (_ref) {
	        var tagName = _ref.tagName,
	            classList = _ref.classList;

	        var isSelection = classList && classList.contains('md-table-cell-selection');
	        var isTd = tagName && tagName.toLowerCase() === 'td';

	        return isTd && !isSelection;
	      });

	      cells.forEach(function (cell, index) {
	        var $vm = cell.__vue__;

	        $vm.index = index;

	        _this.setCellData($vm);
	      });
	    }
	  },
	  mounted: function mounted() {
	    this.updateAllCellData();
	  }
	};

	/***/ }),
	/* 385 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTable/MdTablePagination.vue
	var MdTablePagination = __webpack_require__(387);
	var MdTablePagination_default = /*#__PURE__*/__webpack_require__.n(MdTablePagination);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-4165698e","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTable/MdTablePagination.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-table-pagination" },
	    [
	      _vm.mdPageOptions !== false
	        ? [
	            _c("span", { staticClass: "md-table-pagination-label" }, [
	              _vm._v(_vm._s(_vm.mdLabel))
	            ]),
	            _vm._v(" "),
	            _c(
	              "md-field",
	              [
	                _c(
	                  "md-select",
	                  {
	                    attrs: {
	                      "md-dense": "",
	                      "md-class": "md-pagination-select"
	                    },
	                    on: { changed: _vm.setPageSize },
	                    model: {
	                      value: _vm.currentPageSize,
	                      callback: function($$v) {
	                        _vm.currentPageSize = $$v
	                      },
	                      expression: "currentPageSize"
	                    }
	                  },
	                  _vm._l(_vm.mdPageOptions, function(amount) {
	                    return _c(
	                      "md-option",
	                      { key: amount, attrs: { value: amount } },
	                      [_vm._v(_vm._s(amount))]
	                    )
	                  })
	                )
	              ],
	              1
	            )
	          ]
	        : _vm._e(),
	      _vm._v(" "),
	      _c("span", [
	        _vm._v(
	          _vm._s(_vm.currentItemCount) +
	            "-" +
	            _vm._s(_vm.currentPageCount) +
	            " " +
	            _vm._s(_vm.mdSeparator) +
	            " " +
	            _vm._s(_vm.mdTotal)
	        )
	      ]),
	      _vm._v(" "),
	      _c(
	        "md-button",
	        {
	          staticClass: "md-icon-button md-table-pagination-previous",
	          attrs: { disabled: _vm.mdPage === 1 },
	          on: {
	            click: function($event) {
	              _vm.goToPrevious()
	            }
	          }
	        },
	        [_c("md-icon", [_vm._v("keyboard_arrow_left")])],
	        1
	      ),
	      _vm._v(" "),
	      _c(
	        "md-button",
	        {
	          staticClass: "md-icon-button md-table-pagination-next",
	          on: {
	            click: function($event) {
	              _vm.goToNext()
	            }
	          }
	        },
	        [_c("md-icon", [_vm._v("keyboard_arrow_right")])],
	        1
	      )
	    ],
	    2
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTable_MdTablePagination = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-4165698e", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTable/MdTablePagination.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(386)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTablePagination_default.a,
	  MdTable_MdTablePagination,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTable/MdTablePagination.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-4165698e", Component.options)
	  } else {
	    hotAPI.reload("data-v-4165698e", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTable_MdTablePagination = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 386 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 387 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	exports.default = {
	  name: 'MdTablePagination',
	  inject: ['MdTable'],
	  props: {
	    mdPageSize: {
	      type: [String, Number],
	      default: 10
	    },
	    mdPageOptions: {
	      type: Array,
	      default: function _default() {
	        return [10, 25, 50, 100];
	      }
	    },
	    mdPage: {
	      type: Number,
	      default: 1
	    },
	    mdTotal: {
	      type: [String, Number],
	      default: 'Many'
	    },
	    mdLabel: {
	      type: String,
	      default: 'Rows per page:'
	    },
	    mdSeparator: {
	      type: String,
	      default: 'of'
	    }
	  },
	  data: function data() {
	    return {
	      currentPageSize: 0
	    };
	  },
	  computed: {
	    currentItemCount: function currentItemCount() {
	      return (this.mdPage - 1) * this.mdPageSize + 1;
	    },
	    currentPageCount: function currentPageCount() {
	      return this.mdPage * this.mdPageSize;
	    }
	  },
	  watch: {
	    mdPageSize: {
	      immediate: true,
	      handler: function handler(pageSize) {
	        this.currentPageSize = this.pageSize;
	      }
	    }
	  },
	  methods: {
	    setPageSize: function setPageSize() {
	      this.$emit('update:mdPageSize', this.currentPageSize);
	    },
	    goToPrevious: function goToPrevious() {},
	    goToNext: function goToNext() {}
	  },
	  created: function created() {
	    this.currentPageSize = this.mdPageSize;
	  }
	};

	/***/ }),
	/* 388 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdTabs = __webpack_require__(389);

	var _MdTabs2 = _interopRequireDefault(_MdTabs);

	var _MdTab = __webpack_require__(392);

	var _MdTab2 = _interopRequireDefault(_MdTab);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdTabs2.default.name, _MdTabs2.default);
	  Vue.component(_MdTab2.default.name, _MdTab2.default);
	};

	/***/ }),
	/* 389 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTabs/MdTabs.vue
	var MdTabs = __webpack_require__(391);
	var MdTabs_default = /*#__PURE__*/__webpack_require__.n(MdTabs);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-733c1bef","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTabs/MdTabs.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "div",
	    { staticClass: "md-tabs", class: [_vm.tabsClasses, _vm.$mdActiveTheme] },
	    [
	      _c(
	        "div",
	        { staticClass: "md-tabs-navigation", class: _vm.navigationClasses },
	        [
	          _vm._l(_vm.MdTabs.items, function(ref, index) {
	            var label = ref.label
	            var props = ref.props
	            var icon = ref.icon
	            var disabled = ref.disabled
	            var data = ref.data
	            var events = ref.events
	            return _c(
	              "md-button",
	              _vm._g(
	                _vm._b(
	                  {
	                    key: index,
	                    class: {
	                      "md-active": index === _vm.activeTab,
	                      "md-icon-label": icon && label
	                    },
	                    attrs: { disabled: disabled },
	                    nativeOn: {
	                      click: function($event) {
	                        _vm.setActiveTab(index)
	                      }
	                    }
	                  },
	                  "md-button",
	                  props,
	                  false
	                ),
	                events
	              ),
	              [
	                _vm.$scopedSlots["md-tab"]
	                  ? _vm._t("md-tab", null, {
	                      tab: { label: label, icon: icon, data: data }
	                    })
	                  : [
	                      !icon
	                        ? [_vm._v(_vm._s(label))]
	                        : [
	                            _vm.isAssetIcon(icon)
	                              ? _c("md-icon", {
	                                  staticClass: "md-tab-icon",
	                                  attrs: { "md-src": icon }
	                                })
	                              : _c("md-icon", { staticClass: "md-tab-icon" }, [
	                                  _vm._v(_vm._s(icon))
	                                ]),
	                            _vm._v(" "),
	                            _c("span", { staticClass: "md-tab-label" }, [
	                              _vm._v(_vm._s(label))
	                            ])
	                          ]
	                    ]
	              ],
	              2
	            )
	          }),
	          _vm._v(" "),
	          _c("span", {
	            ref: "indicator",
	            staticClass: "md-tabs-indicator",
	            class: _vm.indicatorClass,
	            style: _vm.indicatorStyles
	          })
	        ],
	        2
	      ),
	      _vm._v(" "),
	      _c(
	        "md-content",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.hasContent,
	              expression: "hasContent"
	            }
	          ],
	          staticClass: "md-tabs-content",
	          style: _vm.contentStyles
	        },
	        [
	          _c(
	            "div",
	            { staticClass: "md-tabs-container", style: _vm.containerStyles },
	            [_vm._t("default")],
	            2
	          )
	        ]
	      )
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTabs_MdTabs = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-733c1bef", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTabs/MdTabs.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(390)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTabs_default.a,
	  MdTabs_MdTabs,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTabs/MdTabs.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-733c1bef", Component.options)
	  } else {
	    hotAPI.reload("data-v-733c1bef", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTabs_MdTabs = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 390 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 391 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdAssetIcon = __webpack_require__(18);

	var _MdAssetIcon2 = _interopRequireDefault(_MdAssetIcon);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	var _MdObserveElement = __webpack_require__(26);

	var _MdObserveElement2 = _interopRequireDefault(_MdObserveElement);

	var _MdContent = __webpack_require__(35);

	var _MdContent2 = _interopRequireDefault(_MdContent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	exports.default = new _MdComponent2.default({
	  name: 'MdTabs',
	  mixins: [_MdAssetIcon2.default],
	  components: {
	    MdContent: _MdContent2.default
	  },
	  props: {
	    mdAlignment: _extends({
	      type: String,
	      default: 'left'
	    }, (0, _MdPropValidator2.default)('md-alignment', ['left', 'right', 'centered', 'fixed'])),
	    mdElevation: {
	      type: [Number, String],
	      default: 0
	    },
	    mdSyncRoute: Boolean,
	    mdDynamicHeight: Boolean,
	    mdActiveTab: [String, Number]
	  },
	  data: function data() {
	    return {
	      resizeObserver: null,
	      activeTab: 0,
	      activeTabIndex: 0,
	      indicatorStyles: {},
	      indicatorClass: null,
	      noTransition: true,
	      containerStyles: {},
	      contentStyles: {
	        height: '0px'
	      },
	      hasContent: false,
	      MdTabs: {
	        items: {}
	      }
	    };
	  },
	  provide: function provide() {
	    return {
	      MdTabs: this.MdTabs
	    };
	  },

	  computed: {
	    tabsClasses: function tabsClasses() {
	      var _ref;

	      return _ref = {}, _defineProperty(_ref, 'md-alignment-' + this.mdAlignment, true), _defineProperty(_ref, 'md-no-transition', this.noTransition), _defineProperty(_ref, 'md-dynamic-height', this.mdDynamicHeight), _ref;
	    },
	    navigationClasses: function navigationClasses() {
	      return 'md-elevation-' + this.mdElevation;
	    }
	  },
	  watch: {
	    MdTabs: {
	      deep: true,
	      handler: function handler() {
	        this.setHasContent();
	      }
	    },
	    activeTab: function () {
	      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _context.next = 2;
	                return this.$nextTick();

	              case 2:
	                this.setIndicatorStyles();
	                this.setActiveTabIndex();
	                this.calculateTabPos();

	              case 5:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, this);
	      }));

	      function activeTab() {
	        return _ref2.apply(this, arguments);
	      }

	      return activeTab;
	    }(),
	    mdActiveTab: function mdActiveTab(tab) {
	      this.activeTab = tab;
	      this.$emit('md-changed', tab);
	    },
	    mdAlignment: function () {
	      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
	        return regeneratorRuntime.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                _context2.next = 2;
	                return this.$nextTick();

	              case 2:
	                this.setIndicatorStyles();

	              case 3:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, this);
	      }));

	      function mdAlignment() {
	        return _ref3.apply(this, arguments);
	      }

	      return mdAlignment;
	    }()
	  },
	  methods: {
	    hasActiveTab: function hasActiveTab() {
	      return this.activeTab || this.mdActiveTab;
	    },
	    getItemsAndKeys: function getItemsAndKeys() {
	      var items = this.MdTabs.items;

	      return {
	        items: items,
	        keys: Object.keys(items)
	      };
	    },
	    setActiveTab: function setActiveTab(index) {
	      this.activeTab = index;
	      this.$emit('md-changed', index);
	    },
	    setActiveTabIndex: function setActiveTabIndex() {
	      var activeButton = this.$el.querySelector('.md-button.md-active');

	      if (activeButton) {
	        this.activeTabIndex = [].indexOf.call(activeButton.parentNode.childNodes, activeButton);
	      }
	    },
	    setActiveTabByIndex: function setActiveTabByIndex(index) {
	      var _getItemsAndKeys = this.getItemsAndKeys(),
	          keys = _getItemsAndKeys.keys;

	      if (!this.hasActiveTab()) {
	        this.activeTab = keys[index];
	      }
	    },
	    setActiveTabByRoute: function setActiveTabByRoute() {
	      var _this = this;

	      var _getItemsAndKeys2 = this.getItemsAndKeys(),
	          items = _getItemsAndKeys2.items,
	          keys = _getItemsAndKeys2.keys;

	      var tabIndex = null;

	      if (this.$router) {
	        keys.forEach(function (key, index) {
	          var item = items[key];
	          var toProp = item.props.to;

	          if (toProp && toProp === _this.$route.path) {
	            tabIndex = index;
	          }
	        });
	      }

	      if (!this.hasActiveTab() && !tabIndex) {
	        this.activeTab = keys[0];
	      } else {
	        this.activeTab = keys[tabIndex];
	      }
	    },
	    setHasContent: function setHasContent() {
	      var _getItemsAndKeys3 = this.getItemsAndKeys(),
	          items = _getItemsAndKeys3.items,
	          keys = _getItemsAndKeys3.keys;

	      this.hasContent = keys.some(function (key) {
	        return items[key].hasContent;
	      });
	    },
	    setIndicatorStyles: function setIndicatorStyles() {
	      var _this2 = this;

	      window.requestAnimationFrame(_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
	        var activeButton, buttonWidth, buttonLeft, indicatorLeft;
	        return regeneratorRuntime.wrap(function _callee3$(_context3) {
	          while (1) {
	            switch (_context3.prev = _context3.next) {
	              case 0:
	                _context3.next = 2;
	                return _this2.$nextTick();

	              case 2:
	                activeButton = _this2.$el.querySelector('.md-button.md-active');


	                if (activeButton && _this2.$refs.indicator) {
	                  buttonWidth = activeButton.offsetWidth;
	                  buttonLeft = activeButton.offsetLeft;
	                  indicatorLeft = _this2.$refs.indicator.offsetLeft;


	                  if (indicatorLeft < buttonLeft) {
	                    _this2.indicatorClass = 'md-tabs-indicator-right';
	                  } else {
	                    _this2.indicatorClass = 'md-tabs-indicator-left';
	                  }

	                  _this2.indicatorStyles = {
	                    left: buttonLeft + 'px',
	                    right: 'calc(100% - ' + (buttonWidth + buttonLeft) + 'px)'
	                  };
	                }

	              case 4:
	              case 'end':
	                return _context3.stop();
	            }
	          }
	        }, _callee3, _this2);
	      })));
	    },
	    calculateTabPos: function calculateTabPos() {
	      if (this.hasContent) {
	        var tabElement = this.$el.querySelector('.md-tab:nth-child(' + (this.activeTabIndex + 1) + ')');

	        this.contentStyles = {
	          height: tabElement.offsetHeight + 'px'
	        };

	        this.containerStyles = {
	          transform: 'translate3D(' + -this.activeTabIndex * 100 + '%, 0, 0)'
	        };
	      }
	    },
	    setupObservers: function setupObservers() {
	      var _this3 = this;

	      if ('ResizeObserver' in window) {
	        this.resizeObserver = new window.ResizeObserver(this.setIndicatorStyles);
	        this.resizeObserver.observe(this.$el);
	      } else {
	        this.resizeObserver = (0, _MdObserveElement2.default)(this.$el.querySelector('.md-tabs-content'), {
	          childList: true,
	          characterData: true,
	          subtree: true
	        }, function () {
	          _this3.setIndicatorStyles();
	          _this3.calculateTabPos();
	        });

	        window.addEventListener('resize', this.setIndicatorStyles);
	      }
	    },
	    setupWatchers: function setupWatchers() {
	      if (this.mdSyncRoute) {
	        this.$watch('$route', {
	          deep: true,
	          handler: function handler() {
	            if (this.mdSyncRoute) {
	              this.setActiveTabByRoute();
	            }
	          }
	        });
	      }
	    }
	  },
	  created: function created() {
	    this.setHasContent();
	    this.activeTab = this.mdActiveTab;
	  },
	  mounted: function () {
	    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
	      var _this4 = this;

	      return regeneratorRuntime.wrap(function _callee4$(_context4) {
	        while (1) {
	          switch (_context4.prev = _context4.next) {
	            case 0:
	              _context4.next = 2;
	              return this.$nextTick();

	            case 2:

	              if (this.mdSyncRoute) {
	                this.setActiveTabByRoute();
	              } else {
	                this.setActiveTabByIndex(0);
	              }

	              _context4.next = 5;
	              return this.$nextTick();

	            case 5:

	              this.setActiveTabIndex();
	              this.calculateTabPos();

	              window.setTimeout(function () {
	                _this4.noTransition = false;
	                _this4.setupObservers();
	                _this4.setupWatchers();
	              }, 100);

	            case 8:
	            case 'end':
	              return _context4.stop();
	          }
	        }
	      }, _callee4, this);
	    }));

	    function mounted() {
	      return _ref5.apply(this, arguments);
	    }

	    return mounted;
	  }(),
	  beforeDestroy: function beforeDestroy() {
	    if (this.resizeObserver) {
	      this.resizeObserver.disconnect();
	    }

	    window.removeEventListener('resize', this.setIndicatorStyles);
	  }
	});

	/***/ }),
	/* 392 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdTab_vue__ = __webpack_require__(393);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdTab_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdTab_vue__);
	var disposed = false
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */
	var __vue_template__ = null
	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = null
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_bustCache_MdTab_vue___default.a,
	  __vue_template__,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTabs/MdTab.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-4b620898", Component.options)
	  } else {
	    hotAPI.reload("data-v-4b620898", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 393 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _MdUuid = __webpack_require__(6);

	var _MdUuid2 = _interopRequireDefault(_MdUuid);

	var _MdObserveElement = __webpack_require__(26);

	var _MdObserveElement2 = _interopRequireDefault(_MdObserveElement);

	var _MdRouterLinkProps = __webpack_require__(12);

	var _MdRouterLinkProps2 = _interopRequireDefault(_MdRouterLinkProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  name: 'MdTab',
	  props: {
	    id: {
	      type: String,
	      default: function _default() {
	        return 'md-tab-' + (0, _MdUuid2.default)();
	      }
	    },
	    href: [String, Number],
	    to: null,
	    mdDisabled: Boolean,
	    mdLabel: [String, Number],
	    mdIcon: String,
	    mdTemplateData: {
	      type: Object,
	      default: function _default() {
	        return {};
	      }
	    }
	  },
	  inject: ['MdTabs'],
	  data: function data() {
	    return {
	      observer: null
	    };
	  },
	  watch: {
	    $props: {
	      deep: true,
	      handler: function handler() {
	        this.setTabData();
	      }
	    },
	    $attrs: {
	      deep: true,
	      handler: function handler() {
	        this.setTabData();
	      }
	    }
	  },
	  methods: {
	    setTabContent: function setTabContent() {
	      this.$set(this.MdTabs.items[this.id], 'hasContent', !!this.$slots.default);
	    },
	    setupObserver: function setupObserver() {
	      this.observer = (0, _MdObserveElement2.default)(this.$el, {
	        childList: true
	      }, this.setTabContent);
	    },
	    setTabData: function setTabData() {
	      this.$set(this.MdTabs.items, this.id, {
	        hasContent: !!this.$slots.default,
	        label: this.mdLabel,
	        icon: this.mdIcon,
	        disabled: this.mdDisabled,
	        data: this.mdTemplateData,
	        props: this.getPropValues(),
	        events: this.$listeners
	      });
	    },
	    getPropValues: function getPropValues() {
	      var _this = this;

	      var propNames = Object.keys(this.$options.props);
	      var ignoredProps = ['id', 'mdLabel', 'mdDisabled', 'mdTemplateData'];
	      var values = {};

	      propNames.forEach(function (prop) {
	        if (!ignoredProps.includes(prop)) {
	          if (_this[prop]) {
	            values[prop] = _this[prop];
	          } else if (_this.$attrs.hasOwnProperty(prop)) {
	            if (prop) {
	              values[prop] = _this.$attrs[prop];
	            } else {
	              values[prop] = true;
	            }
	          }
	        }
	      });

	      return values;
	    }
	  },
	  mounted: function mounted() {
	    this.setupObserver();
	    this.setTabData();
	  },
	  beforeDestroy: function beforeDestroy() {
	    if (this.observer) {
	      this.observer.disconnect();
	    }

	    this.$delete(this.MdTabs.items, this.id);
	  },
	  render: function render(createElement) {
	    var tabAttrs = {
	      staticClass: 'md-tab',
	      attrs: _extends({}, this.$attrs, {
	        id: this.id
	      }),
	      on: this.$listeners
	    };

	    if (this.href) {
	      this.buttonProps = this.$options.props;
	    } else if (this.$router && this.to) {
	      this.$options.props = (0, _MdRouterLinkProps2.default)(this, this.$options.props);

	      tabAttrs.props = this.$props;
	    }

	    return createElement('div', tabAttrs, this.$slots.default);
	  }
	};

	/***/ }),
	/* 394 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdToolbar = __webpack_require__(53);

	var _MdToolbar2 = _interopRequireDefault(_MdToolbar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdToolbar2.default.name, _MdToolbar2.default);
	};

	/***/ }),
	/* 395 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _material = __webpack_require__(1);

	var _material2 = _interopRequireDefault(_material);

	var _MdTooltip = __webpack_require__(396);

	var _MdTooltip2 = _interopRequireDefault(_MdTooltip);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (Vue) {
	  (0, _material2.default)(Vue);
	  Vue.component(_MdTooltip2.default.name, _MdTooltip2.default);
	};

	/***/ }),
	/* 396 */
	/***/ (function(module, __webpack_exports__, __webpack_require__) {

	"use strict";
	Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

	// EXTERNAL MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/MdTooltip/MdTooltip.vue
	var MdTooltip = __webpack_require__(398);
	var MdTooltip_default = /*#__PURE__*/__webpack_require__.n(MdTooltip);

	// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-03252be9","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/MdTooltip/MdTooltip.vue
	var render = function() {
	  var _vm = this
	  var _h = _vm.$createElement
	  var _c = _vm._self._c || _h
	  return _c(
	    "md-popover",
	    {
	      attrs: {
	        "md-settings": _vm.popperSettings,
	        "md-active": _vm.shouldRender
	      }
	    },
	    [
	      _vm.shouldRender
	        ? _c("transition", { attrs: { name: "md-tooltip" } }, [
	            _c(
	              "div",
	              {
	                staticClass: "md-tooltip",
	                class: [_vm.tooltipClasses, _vm.$mdActiveTheme],
	                style: _vm.tooltipStyles
	              },
	              [_vm._t("default")],
	              2
	            )
	          ])
	        : _vm._e()
	    ],
	    1
	  )
	}
	var staticRenderFns = []
	render._withStripped = true
	var esExports = { render: render, staticRenderFns: staticRenderFns }
	/* harmony default export */ var MdTooltip_MdTooltip = (esExports);
	if (false) {
	  module.hot.accept()
	  if (module.hot.data) {
	    require("vue-hot-reload-api")      .rerender("data-v-03252be9", esExports)
	  }
	}
	// CONCATENATED MODULE: ./src/components/MdTooltip/MdTooltip.vue
	var disposed = false
	function injectStyle (ssrContext) {
	  if (disposed) return
	  __webpack_require__(397)
	}
	var normalizeComponent = __webpack_require__(0)
	/* script */

	/* template */

	/* template functional */
	  var __vue_template_functional__ = false
	/* styles */
	var __vue_styles__ = injectStyle
	/* scopeId */
	var __vue_scopeId__ = null
	/* moduleIdentifier (server only) */
	var __vue_module_identifier__ = null
	var Component = normalizeComponent(
	  MdTooltip_default.a,
	  MdTooltip_MdTooltip,
	  __vue_template_functional__,
	  __vue_styles__,
	  __vue_scopeId__,
	  __vue_module_identifier__
	)
	Component.options.__file = "src/components/MdTooltip/MdTooltip.vue"
	if (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== "default" && key.substr(0, 2) !== "__"})) {  console.error("named exports are not supported in *.vue files.")}

	/* hot reload */
	if (false) {(function () {
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  module.hot.accept()
	  if (!module.hot.data) {
	    hotAPI.createRecord("data-v-03252be9", Component.options)
	  } else {
	    hotAPI.reload("data-v-03252be9", Component.options)
	' + '  }
	  module.hot.dispose(function (data) {
	    disposed = true
	  })
	})()}

	/* harmony default export */ var components_MdTooltip_MdTooltip = __webpack_exports__["default"] = (Component.exports);


	/***/ }),
	/* 397 */
	/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

	/***/ }),
	/* 398 */
	/***/ (function(module, exports, __webpack_require__) {

	"use strict";


	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; //
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var _MdComponent = __webpack_require__(2);

	var _MdComponent2 = _interopRequireDefault(_MdComponent);

	var _MdPropValidator = __webpack_require__(4);

	var _MdPropValidator2 = _interopRequireDefault(_MdPropValidator);

	var _MdPopover = __webpack_require__(25);

	var _MdPopover2 = _interopRequireDefault(_MdPopover);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

	exports.default = new _MdComponent2.default({
	  name: 'MdTooltip',
	  components: {
	    MdPopover: _MdPopover2.default
	  },
	  props: {
	    mdActive: Boolean,
	    mdDelay: {
	      type: [String, Number],
	      default: 0
	    },
	    mdDirection: _extends({
	      type: String,
	      default: 'bottom'
	    }, (0, _MdPropValidator2.default)('md-direction', ['top', 'right', 'bottom', 'left']))
	  },
	  data: function data() {
	    return {
	      shouldRender: false,
	      targetEl: null
	    };
	  },
	  computed: {
	    tooltipClasses: function tooltipClasses() {
	      return 'md-tooltip-' + this.mdDirection;
	    },
	    tooltipStyles: function tooltipStyles() {
	      return 'transition-delay: ' + this.mdDelay + 'ms';
	    },
	    popperSettings: function popperSettings() {
	      return {
	        placement: this.mdDirection,
	        modifiers: {
	          offset: {
	            offset: '0, 16'
	          }
	        }
	      };
	    }
	  },
	  watch: {
	    mdActive: function mdActive() {
	      this.shouldRender = this.mdActive;
	    }
	  },
	  methods: {
	    show: function show() {
	      this.shouldRender = true;
	    },
	    hide: function hide() {
	      this.$emit('update:mdActive', false);
	      this.shouldRender = false;
	    }
	  },
	  mounted: function () {
	    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
	      return regeneratorRuntime.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              _context.next = 2;
	              return this.$nextTick();

	            case 2:

	              this.shouldRender = this.mdActive;
	              this.targetEl = this._vnode.componentInstance.originalParentEl;

	              if (this.targetEl) {
	                this.targetEl.addEventListener('mouseenter', this.show, false);
	                this.targetEl.addEventListener('mouseleave', this.hide, false);
	              }

	            case 5:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, _callee, this);
	    }));

	    function mounted() {
	      return _ref.apply(this, arguments);
	    }

	    return mounted;
	  }(),
	  beforeDestroy: function beforeDestroy() {
	    if (this.targetEl) {
	      this.targetEl.removeEventListener('mouseenter', this.show);
	      this.targetEl.removeEventListener('mouseleave', this.hide);
	    }
	  }
	});

	/***/ })
	/******/ ]);
	});

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(22);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(23)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../css-loader/index.js!./vue-material.min.css", function() {
				var newContent = require("!!../../css-loader/index.js!./vue-material.min.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(11)();
	// imports


	// module
	exports.push([module.id, "/*!\n * vue-material v1.0.0-beta-7\n * Made with <3 by marcosmoura 2017\n * Released under the MIT License.\n */html{height:100%;box-sizing:border-box;transition:background-color .3s cubic-bezier(.25,.8,.25,1)}html *,html :after,html :before{box-sizing:inherit}body{min-height:100%;margin:0;position:relative;-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto,Noto Sans,-apple-system,BlinkMacSystemFont,sans-serif}a:not(.md-button){transition:.3s cubic-bezier(.25,.8,.25,1);transition-property:color,background-color,opacity}audio,canvas,embed,iframe,img,object,video{max-width:100%;font-style:italic;vertical-align:middle}audio:not(.md-image),canvas:not(.md-image),embed:not(.md-image),iframe:not(.md-image),img:not(.md-image),object:not(.md-image),video:not(.md-image){height:auto}[tabindex=\"-1\"]:focus{outline:none!important}.md-scrollbar::-webkit-scrollbar{width:8px;height:8px;border-radius:8px}.md-scrollbar::-webkit-scrollbar-thumb{border-radius:8px}.md-scrollbar::-webkit-scrollbar-button{display:none}.md-caption{font-size:12px;font-weight:400;letter-spacing:.02em;line-height:17px}.md-body-1,body{font-weight:400;line-height:20px}.md-body-1,.md-body-2,body{font-size:14px;letter-spacing:.01em}.md-body-2{font-weight:500;line-height:24px}.md-subheading{font-size:16px;font-weight:400;letter-spacing:.01em;line-height:24px}.md-title{font-size:20px;font-weight:500;letter-spacing:.005em;line-height:26px}.md-headline{font-size:24px;line-height:32px}.md-display-1,.md-headline{font-weight:400;letter-spacing:0}.md-display-1{font-size:34px;line-height:40px}.md-display-2{font-size:45px;font-weight:400;letter-spacing:0;line-height:48px}.md-display-3{font-size:56px;font-weight:400;letter-spacing:-.005em;line-height:58px}.md-display-4{font-size:112px;font-weight:300;letter-spacing:-.01em;line-height:112px}a:not(.md-button){text-decoration:none}a:not(.md-button):hover{text-decoration:underline}button:focus{outline:none}.md-app{display:-webkit-box;display:flex;overflow:hidden;position:relative}.md-app.md-fixed .md-app-scroller{overflow:auto}.md-app.md-fixed-last,.md-app.md-flexible,.md-app.md-overlap,.md-app.md-reveal{-webkit-transform:translateZ(0);transform:translateZ(0)}.md-app.md-fixed-last .md-app-toolbar,.md-app.md-flexible .md-app-toolbar,.md-app.md-overlap .md-app-toolbar,.md-app.md-reveal .md-app-toolbar{position:absolute;top:0}.md-app.md-flexible .md-app-toolbar,.md-app.md-overlap .md-app-toolbar{min-height:0}.md-app.md-flexible .md-toolbar-row:first-child{z-index:2}.md-app.md-flexible .md-toolbar-row:last-child{position:fixed;bottom:0;z-index:1}.md-app.md-flexible .md-display-1{position:fixed}.md-app.md-overlap .md-app-toolbar{z-index:1}.md-app.md-overlap .md-app-content{margin:-64px 24px 24px;position:relative;z-index:2}.md-app-content{padding:16px}.md-app-content>p:first-child{margin-top:0}.md-app-content>p:last-child{margin-bottom:0}.md-app-container{display:-webkit-box;display:flex;overflow:auto;-webkit-transform:translate3D(0,0,0);transform:translate3D(0,0,0);transition:padding-left .4s cubic-bezier(.4,0,.2,1);will-change:padding-left}.md-app-container,.md-app-scroller{-webkit-box-flex:1;flex:1}@media (max-width:944px){.md-app.md-overlap .md-app-content{margin:-64px 16px 16px}}@media (max-width:600px){.md-app.md-overlap .md-app-content{margin:-64px 8px 8px}}@media (min-width:600px){.md-app-drawer.md-permanent-card+.md-app-scroller .md-content{padding-left:0;border-left:none}.md-app-content{border-left:1px solid transparent}}.md-app-internal-drawer,.md-app-side-drawer .md-app-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.md-app-internal-drawer .md-app-scroller{overflow:auto}.md-no-elevation{box-shadow:none!important}.md-fixed-last .md-reveal-active,.md-flexible .md-reveal-active,.md-overlap .md-reveal-active,.md-reveal .md-reveal-active{-webkit-transform:translate3d(0,calc(100% + 10px),0);transform:translate3d(0,calc(100% + 10px),0);transition:.3s cubic-bezier(.25,.8,.25,1);transition-property:box-shadow,-webkit-transform;transition-property:box-shadow,transform;transition-property:box-shadow,transform,-webkit-transform;will-change:height,box-shadow,transform}.md-overlap .md-app-toolbar{height:196px}.md-fixed-last-active{transition:.3s cubic-bezier(.25,.8,.25,1);transition-property:box-shadow,-webkit-transform;transition-property:box-shadow,transform;transition-property:box-shadow,transform,-webkit-transform;will-change:height,box-shadow,transform}.md-overlap-off{z-index:3!important}.md-app-content{height:100%}.md-app-content .md-card{margin-right:16px;margin-left:16px;overflow:visible}.md-autocomplete .md-menu{width:100%;display:-webkit-box;display:flex}.md-autocomplete-loading{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;position:absolute;top:0;right:0;bottom:0;left:0;z-index:9}.md-field.md-inline.md-autocomplete-box{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);padding-top:2px;border-radius:2px}.md-field.md-inline.md-autocomplete-box.md-focused{z-index:11}.md-field.md-inline.md-autocomplete-box:after,.md-field.md-inline.md-autocomplete-box:before{display:none}.md-toolbar .md-field.md-inline.md-autocomplete-box{min-height:40px;height:40px;margin:0;box-shadow:none}.md-field.md-inline.md-autocomplete-box .md-menu{-webkit-box-align:center;align-items:center}.md-field.md-inline.md-autocomplete-box .md-input{padding-left:16px}.md-field.md-inline.md-autocomplete-box.md-focused label,.md-field.md-inline.md-autocomplete-box .md-input-action,.md-field.md-inline.md-autocomplete-box label{top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.md-field.md-inline.md-autocomplete-box .md-input-action{right:8px}.md-field.md-inline.md-autocomplete-box.md-focused label,.md-field.md-inline.md-autocomplete-box label{margin-top:2px;left:16px}.md-autocomplete-box-content:after{height:6px;position:absolute;top:-6px;right:0;left:0;z-index:11;border-bottom:1px solid;content:\"\"}.md-avatar{width:40px;min-width:40px;height:40px;margin:auto;display:-webkit-inline-box;display:inline-flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;border-radius:40px;transition:.4s cubic-bezier(.4,0,.2,1);transition-property:color,background-color;will-change:color,background-color;font-size:24px;letter-spacing:-.05em;vertical-align:middle}.md-avatar.md-large{min-width:64px;min-height:64px;border-radius:64px;font-size:32px}.md-avatar.md-large .md-icon{font-size:40px!important}.md-avatar.md-small{width:24px;min-width:24px;height:24px;border-radius:24px;font-size:14px}.md-avatar.md-small .md-icon{font-size:16px!important}.md-avatar .md-icon{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.md-avatar img{width:100%;height:100%;display:block}.md-avatar .md-ripple{cursor:pointer;display:-webkit-inline-box;display:inline-flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;border-radius:50%}.md-bottom-bar{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);width:100%;transition:background-color .5s cubic-bezier(.4,0,.2,1)}.md-bottom-bar>.md-ripple{display:-webkit-box;display:flex;flex-wrap:wrap}.md-bottom-bar.md-type-fixed{-webkit-box-pack:center;justify-content:center}.md-bottom-bar.md-type-fixed .md-bottom-bar-item{min-width:80px;max-width:168px;transition:.4s cubic-bezier(.4,0,.2,1);transition-property:color;will-change:color}.md-bottom-bar.md-type-fixed .md-bottom-bar-item .md-bottom-bar-label{-webkit-transform:scale(.8571) translate3D(0,4px,0);transform:scale(.8571) translate3D(0,4px,0)}.md-bottom-bar.md-type-fixed .md-bottom-bar-item.md-active .md-ripple{padding-top:6px}.md-bottom-bar.md-type-fixed .md-bottom-bar-item.md-active .md-bottom-bar-icon{-webkit-transform:translate3d(0,-2px,0);transform:translate3d(0,-2px,0)}.md-bottom-bar.md-type-fixed .md-bottom-bar-item.md-active .md-bottom-bar-label{-webkit-transform:translate3D(0,3px,0);transform:translate3D(0,3px,0)}.md-bottom-bar.md-type-shift{-webkit-box-pack:center;justify-content:center}.md-bottom-bar.md-type-shift>.md-ripple .md-ripple-enter-active{transition-duration:1.1s!important}.md-bottom-bar.md-type-shift>.md-ripple .md-ripple-enter{opacity:1}.md-bottom-bar.md-type-shift .md-bottom-bar-item{min-width:56px;max-width:96px;-webkit-box-flex:1;flex:1 1 32px;transition:.3s cubic-bezier(.4,0,.2,1);transition-property:padding,min-width,max-width,color,-webkit-box-flex;transition-property:padding,min-width,max-width,flex,color;transition-property:padding,min-width,max-width,flex,color,-webkit-box-flex;will-change:padding,min-width,max-width,flex,color}.md-bottom-bar.md-type-shift .md-bottom-bar-item .md-ripple{padding:16px}.md-bottom-bar.md-type-shift .md-bottom-bar-item .md-bottom-bar-icon{-webkit-transform:translate3d(0,8px,0);transform:translate3d(0,8px,0)}.md-bottom-bar.md-type-shift .md-bottom-bar-item .md-bottom-bar-label{opacity:0;-webkit-transform:scale(.7) translate3d(0,6px,0);transform:scale(.7) translate3d(0,6px,0)}.md-bottom-bar.md-type-shift .md-bottom-bar-item.md-active{min-width:96px;max-width:168px;-webkit-box-flex:1;flex:1 1 72px}.md-bottom-bar.md-type-shift .md-bottom-bar-item.md-active .md-ripple{padding:6px 0 10px}.md-bottom-bar.md-type-shift .md-bottom-bar-item.md-active .md-bottom-bar-icon{-webkit-transform:translateZ(0);transform:translateZ(0)}.md-bottom-bar.md-type-shift .md-bottom-bar-item.md-active .md-bottom-bar-label{opacity:1;-webkit-transform:translate3d(0,3px,0);transform:translate3d(0,3px,0)}.md-bottom-bar .md-bottom-bar-item{height:56px;margin:0;-webkit-box-flex:1;flex:1;cursor:pointer;border-radius:0;font-size:14px;font-weight:400;line-height:1em;text-transform:none}.md-bottom-bar .md-bottom-bar-item .md-ripple{padding:8px 12px 10px;transition:padding .3s cubic-bezier(.25,.8,.25,1);will-change:padding}.md-bottom-bar .md-bottom-bar-item .md-button-content{position:static;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center}.md-bottom-bar .md-bottom-bar-item .md-bottom-bar-icon,.md-bottom-bar .md-bottom-bar-item .md-bottom-bar-label{transition:.3s cubic-bezier(.4,0,.2,1);transition-property:opacity,-webkit-transform;transition-property:transform,opacity;transition-property:transform,opacity,-webkit-transform;will-change:transform,opacity}.md-ripple{width:100%;height:100%;position:relative;z-index:4;overflow:hidden;-webkit-mask-image:radial-gradient(circle,#fff 100%,#000 0)}.md-ripple-wave{position:absolute;z-index:1;pointer-events:none;background:currentColor;border-radius:50%;opacity:0;-webkit-transform:scale(2) translateZ(0);transform:scale(2) translateZ(0)}.md-ripple-wave.md-centered{top:50%;left:50%}.md-ripple-wave~*{position:relative;z-index:2}.md-ripple-enter-active{transition:.8s cubic-bezier(.25,.8,.25,1);transition-property:opacity,-webkit-transform;transition-property:opacity,transform;transition-property:opacity,transform,-webkit-transform;will-change:opacity,transform}.md-ripple-enter-active.md-centered{transition-duration:1.2s}.md-ripple-enter{opacity:.26;-webkit-transform:scale(.26) translateZ(0);transform:scale(.26) translateZ(0)}.md-button,.md-button-clean{margin:0;padding:0;display:inline-block;position:relative;overflow:hidden;outline:none;background:transparent;border:0;border-radius:0;transition:.4s cubic-bezier(.4,0,.2,1);font-family:inherit;line-height:normal;text-transform:uppercase;text-decoration:none;vertical-align:top;white-space:nowrap}.md-button{min-width:88px;height:36px;margin:6px 8px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:2px;font-size:14px;font-weight:500}.md-button:active{outline:none}.md-button[disabled]{pointer-events:none}.md-button:not([disabled]){cursor:pointer}.md-button:not([disabled]).md-focused:before,.md-button:not([disabled]):active:before,.md-button:not([disabled]):hover:before{background-color:currentColor;opacity:.12}.md-button:not([disabled]).md-focused.md-accent:before,.md-button:not([disabled]).md-focused.md-primary:before,.md-button:not([disabled]):active:before{opacity:.2}.md-button:not([disabled]).md-ripple-off:active:before{opacity:.26}.md-button.md-plain.md-button.md-raised:not([disabled]){color:rgba(0,0,0,.87);background-color:#fff}.md-button.md-plain.md-button.md-raised:not([disabled]) .md-icon-font{color:rgba(0,0,0,.87)}.md-button.md-plain.md-button.md-raised:not([disabled]) .md-icon-image{fill:rgba(0,0,0,.87)}.md-button::-moz-focus-inner{padding:0;border:0}.md-button:before{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;opacity:0;transition:.4s cubic-bezier(.4,0,.2,1);will-change:background-color,opacity;content:\" \"}.md-button.md-dense{height:32px;font-size:13px}.md-button.md-raised:not([disabled]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.md-button.md-raised:not([disabled]):active{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.md-button.md-raised:not([disabled]).md-ripple-off:active:before{opacity:.2}.md-button+.md-button{margin-left:0}.md-button .md-ripple{padding:0 8px;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center}.md-button-spaced .md-ripple{padding:0 16px}.md-fab,.md-fab .md-ripple,.md-fab:before,.md-icon-button,.md-icon-button .md-ripple,.md-icon-button:before{border-radius:50%}.md-fab.md-dense .md-ripple-wave,.md-fab.md-mini .md-ripple-wave,.md-icon-button .md-ripple-wave{top:0!important;right:0!important;bottom:0!important;left:0!important}.md-icon-button{width:40px;min-width:40px;height:40px;margin:0 6px}.md-icon-button.md-dense{width:32px;min-width:32px;height:32px}.md-icon-button .md-ripple-enter-active{transition-duration:1.2s}.md-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);width:56px;height:56px;min-width:0;overflow:hidden}.md-fab:active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.md-fab.md-dense,.md-fab.md-mini{width:40px;height:40px}.md-fab.md-fab-top-left,.md-fab.md-fab-top-right{position:absolute;top:24px}.md-fab.md-fab-bottom-left,.md-fab.md-fab-bottom-right{position:absolute;bottom:24px}.md-fab.md-fab-bottom-center,.md-fab.md-fab-top-center{position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);top:24px}.md-fab.md-fab-bottom-right,.md-fab.md-fab-top-right{right:24px}.md-fab.md-fab-bottom-left,.md-fab.md-fab-top-left{left:24px}.md-fab.md-fixed{position:fixed}.md-fab .md-ripple{padding:0}.md-button-content{position:relative;z-index:2}.md-card{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);overflow:auto;position:relative;z-index:1;border-radius:2px;transition:.3s cubic-bezier(.4,0,.2,1);transition-property:color,background-color;will-change:color,background-color}.md-card.md-with-hover{cursor:pointer;transition:background-color .3s cubic-bezier(.4,0,.2,1),box-shadow .4s cubic-bezier(.25,.8,.25,1);will-change:background-color,box-shadow}.md-card.md-with-hover:hover{z-index:2;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.md-card.md-expand-active .md-card-expand-trigger.md-icon-button{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.md-card .md-subhead,.md-card .md-subheading,.md-card .md-title{margin:0;font-weight:400}.md-card .md-subhead{opacity:.54;font-size:14px;letter-spacing:.01em;line-height:20px}.md-card .md-subhead+.md-title{margin-top:4px}.md-card .md-title{font-size:24px;letter-spacing:0;line-height:32px}.md-card-area,.md-card>.md-card-area:not(:last-child){position:relative}.md-card>.md-card-area:not(:last-child):after{height:1px;position:absolute;bottom:0;content:\" \"}.md-card>.md-card-area:not(:last-child):not(.md-inset):after{right:0;left:0}.md-card>.md-card-area:not(:last-child).md-inset:after{right:16px;left:16px}.md-card-header{padding:16px}.md-card-header:first-child>.md-card-header-text>.md-title:first-child,.md-card-header:first-child>.md-title:first-child{margin-top:8px}.md-card-header:last-child{margin-bottom:8px}.md-card-header.md-card-header-flex{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between}.md-card-header+.md-card-content{padding-top:0}.md-card-header+.md-card-actions:not(:last-child){padding:0 8px}.md-card-header>img{border-radius:50%}.md-card-header .md-avatar,.md-card-header>img{margin-right:16px;float:left}.md-card-header .md-avatar~.md-title,.md-card-header>img~.md-title{font-size:14px}.md-card-header .md-avatar~.md-subhead,.md-card-header .md-avatar~.md-title,.md-card-header>img~.md-subhead,.md-card-header>img~.md-title{font-weight:500;line-height:20px}.md-card-header .md-button{margin:0}.md-card-header .md-button:last-child{margin-right:-4px}.md-card-header .md-button+.md-button{margin-left:8px}.md-card-header .md-card-header-text{-webkit-box-flex:1;flex:1}.md-card-header .md-card-media{width:80px;height:80px;margin-left:16px;-webkit-box-flex:0;flex:0 0 80px}.md-card-header .md-card-media.md-medium{width:120px;height:120px;-webkit-box-flex:0;flex:0 0 120px}.md-card-header .md-card-media.md-big{width:160px;height:160px;-webkit-box-flex:0;flex:0 0 160px}.md-card-media{position:relative}.md-card-media.md-ratio-16-9{overflow:hidden}.md-card-media.md-ratio-16-9:before{width:100%;padding-top:56.25%;display:block;content:\" \"}.md-card-media.md-ratio-16-9 img{position:absolute;top:50%;right:0;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.md-card-media.md-ratio-4-3{overflow:hidden}.md-card-media.md-ratio-4-3:before{width:100%;padding-top:75%;display:block;content:\" \"}.md-card-media.md-ratio-4-3 img{position:absolute;top:50%;right:0;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.md-card-media.md-ratio-1-1{overflow:hidden}.md-card-media.md-ratio-1-1:before{width:100%;padding-top:100%;display:block;content:\" \"}.md-card-media.md-ratio-1-1 img{position:absolute;top:50%;right:0;left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.md-card-media+.md-card-header{padding-top:24px}.md-card-media+.md-card-content:last-child{padding-bottom:16px}.md-card-media img{width:100%}.md-card-media-actions{padding:16px;display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between}.md-card-media-actions .md-card-media{max-width:240px;max-height:240px;-webkit-box-flex:1;flex:1}.md-card-media-actions .md-card-actions{margin-left:16px;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:start;justify-content:flex-start;-webkit-box-align:center;align-items:center}.md-card-media-actions .md-card-actions .md-button+.md-button{margin:8px 0 0}.md-card-media-cover{position:relative;color:#fff}.md-card-media-cover.md-solid .md-card-area{background-color:rgba(0,0,0,.54)}.md-card-media-cover.md-text-scrim .md-card-backdrop{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1}.md-card-media-cover .md-card-area{position:absolute;right:0;bottom:0;left:0;z-index:2}.md-card-media-cover .md-card-area,.md-card-media-cover .md-card-header{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.md-card-media-cover .md-card-header+.md-card-actions{padding-top:0}.md-card-media-cover .md-subhead{opacity:1}.md-card-media-cover .md-card-actions .md-button:not(.md-primary):not(.md-accent),.md-card-media-cover .md-card-actions .md-button:not(.md-primary):not(.md-accent).md-icon-button .md-icon,.md-card-media-cover .md-card-header .md-button:not(.md-primary):not(.md-accent),.md-card-media-cover .md-card-header .md-button:not(.md-primary):not(.md-accent).md-icon-button .md-icon{color:#fff!important}.md-card-content{padding:16px;font-size:14px;line-height:22px}.md-card-content:last-of-type{padding-bottom:24px}.md-card-expand{overflow:hidden}.md-card-expand .md-card-actions{position:relative;z-index:2}.md-card-expand .md-card-expand-content{position:relative;z-index:1}.md-card-expand-trigger.md-icon-button{transition:-webkit-transform .4s cubic-bezier(.25,.8,.25,1);transition:transform .4s cubic-bezier(.25,.8,.25,1);transition:transform .4s cubic-bezier(.25,.8,.25,1),-webkit-transform .4s cubic-bezier(.25,.8,.25,1);will-change:transform}.md-card-expand-content{overflow:hidden;-webkit-transform:translate3D(0,0,0);transform:translate3D(0,0,0);transition:.4s cubic-bezier(.4,0,.2,1);transition-property:opacity,margin-top;will-change:opacity,margin-top}.md-card-actions{padding:8px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.md-card-actions.md-alignment-right{-webkit-box-pack:end;justify-content:flex-end}.md-card-actions.md-alignment-left{-webkit-box-pack:start;justify-content:flex-start}.md-card-actions.md-alignment-space-between{-webkit-box-pack:justify;justify-content:space-between}.md-card-actions .md-button{margin:0}.md-card-actions .md-button:first-child{margin-left:0}.md-card-actions .md-button:last-child{margin-right:0}.md-card-actions .md-button+.md-button{margin-left:4px}.md-checkbox{width:auto;margin:16px 16px 16px 0;display:-webkit-inline-box;display:inline-flex;position:relative}.md-checkbox:not(.md-disabled),.md-checkbox:not(.md-disabled) .md-checkbox-label{cursor:pointer}.md-checkbox .md-checkbox-container{width:20px;min-width:20px;height:20px;position:relative;border-radius:2px;border:2px solid transparent;transition:.4s cubic-bezier(.25,.8,.25,1)}.md-checkbox .md-checkbox-container:focus{outline:none}.md-checkbox .md-checkbox-container:after,.md-checkbox .md-checkbox-container:before{position:absolute;transition:.4s cubic-bezier(.55,0,.55,.2);content:\" \"}.md-checkbox .md-checkbox-container:before{width:48px;height:48px;top:50%;left:50%;z-index:5;border-radius:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.md-checkbox .md-checkbox-container:after{width:6px;height:13px;top:0;left:5px;z-index:6;border:2px solid transparent;border-top:0;border-left:0;opacity:0;-webkit-transform:rotate(45deg) scale3D(.15,.15,1);transform:rotate(45deg) scale3D(.15,.15,1)}.md-checkbox .md-checkbox-container .md-ripple{width:48px!important;height:48px!important;top:50%!important;left:50%!important;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);border-radius:50%}.md-checkbox .md-checkbox-container input{position:absolute;left:-999em}.md-checkbox .md-checkbox-label{height:20px;padding-left:16px;position:relative;line-height:20px}.md-checkbox.md-checked .md-checkbox-container:after{opacity:1;-webkit-transform:rotate(45deg) scale3D(1,1,1);transform:rotate(45deg) scale3D(1,1,1);transition:.4s cubic-bezier(.25,.8,.25,1)}.md-checkbox.md-disabled.md-checked .md-checkbox-container{border-color:transparent!important}.md-checkbox.md-required label:after{position:absolute;top:2px;right:0;-webkit-transform:translateX(calc(100% + 2px));transform:translateX(calc(100% + 2px));content:\"*\";line-height:1em;vertical-align:top}.md-chips.md-field{padding-top:12px;flex-wrap:wrap}.md-chips.md-field.md-has-value label{top:-6px}.md-chips.md-field .md-chip{margin-bottom:4px}.md-chips.md-field .md-chip:last-of-type{margin-right:8px}.md-chips.md-field .md-input{min-width:128px}.md-field{width:100%;min-height:48px;margin:4px 0 24px;padding-top:16px;display:-webkit-box;display:flex;position:relative;font-family:inherit}.md-field:after,.md-field:before{position:absolute;bottom:0;right:0;left:0;z-index:1;transition:border .3s cubic-bezier(.4,0,.2,1),opacity .3s cubic-bezier(.4,0,.2,1),-webkit-transform 0s cubic-bezier(.4,0,.2,1) .3s;transition:border .3s cubic-bezier(.4,0,.2,1),opacity .3s cubic-bezier(.4,0,.2,1),transform 0s cubic-bezier(.4,0,.2,1) .3s;transition:border .3s cubic-bezier(.4,0,.2,1),opacity .3s cubic-bezier(.4,0,.2,1),transform 0s cubic-bezier(.4,0,.2,1) .3s,-webkit-transform 0s cubic-bezier(.4,0,.2,1) .3s;will-change:border,opacity,transform;content:\" \"}.md-field:after{height:1px}.md-field:before{height:2px;z-index:2;opacity:0;-webkit-transform:scaleX(.12);transform:scaleX(.12)}.md-field label{position:absolute;top:23px;left:0;pointer-events:none;transition:.4s cubic-bezier(.25,.8,.25,1);transition-duration:.3s;font-size:16px;line-height:20px}.md-field .md-input,.md-field .md-textarea{width:100%;height:32px;padding:0;display:block;-webkit-box-flex:1;flex:1;border:none;background:none;transition:.4s cubic-bezier(.25,.8,.25,1);transition-property:font-size,padding-top,color;font-family:inherit;font-size:1px;line-height:32px}.md-field .md-input[type=date],.md-field .md-textarea[type=date]{font-size:16px}.md-field .md-input[disabled],.md-field .md-textarea[disabled]{cursor:default}.md-field .md-input:focus,.md-field .md-textarea:focus{outline:none}.md-field .md-input::-webkit-input-placeholder,.md-field .md-textarea::-webkit-input-placeholder{font-size:16px;text-shadow:none;-webkit-text-fill-color:initial;transition:.4s cubic-bezier(.25,.8,.25,1);transition-property:font-size,color}.md-field .md-textarea{min-height:32px;max-height:230px;padding:5px 0;resize:none;line-height:1.3em}.md-field .md-count,.md-field .md-error,.md-field .md-helper-text{height:20px;position:absolute;bottom:-22px;font-size:12px;transition:.3s cubic-bezier(.4,0,.2,1)}.md-field .md-error{display:block!important;left:0;opacity:0;-webkit-transform:translate3d(0,-8px,0);transform:translate3d(0,-8px,0)}.md-field .md-count{right:0}.md-field .md-input-action{width:32px;min-width:32px;height:32px;margin:0;position:absolute;top:16px;right:0;transition:.4s cubic-bezier(.4,0,.2,1)}.md-field .md-input-action.md-input-action-enter-active,.md-field .md-input-action.md-input-action-leave-active{opacity:0}.md-field .md-input-action.md-input-action-enter-to{opacity:1}.md-field>.md-icon{margin:4px auto;position:relative;z-index:3;transition:.4s cubic-bezier(.25,.8,.25,1)}.md-field>.md-icon:last-of-type:not(:first-child):after{display:none}.md-field>.md-icon:after{width:37px;height:4px;position:absolute;left:-1px;bottom:-5px;transition:.3s cubic-bezier(.4,0,.2,1);content:\"\"}.md-field>.md-icon~label{left:36px}.md-field>.md-icon~.md-file,.md-field>.md-icon~.md-input,.md-field>.md-icon~.md-textarea{margin-left:12px}.md-field+.md-has-textarea:not(.md-autogrow){margin-top:36px}.md-field.md-has-placeholder label{pointer-events:auto;top:10px;opacity:0;font-size:12px}.md-field.md-has-placeholder .md-input,.md-field.md-has-placeholder .md-textarea{font-size:16px}.md-field.md-has-textarea:not(.md-autogrow):after,.md-field.md-has-textarea:not(.md-autogrow):before{height:auto;pointer-events:none;top:0;bottom:0;-webkit-transform:none;transform:none;background:none!important;border:1px solid transparent;border-radius:3px}.md-field.md-has-textarea:not(.md-autogrow):before{border-width:2px}.md-field.md-has-textarea:not(.md-autogrow) label{top:16px;left:16px}.md-field.md-has-textarea:not(.md-autogrow) .md-textarea{min-height:100px;padding:0 16px;resize:vertical}.md-field.md-has-textarea:not(.md-autogrow)>.md-icon{position:absolute;top:6px;right:6px;z-index:3}.md-field.md-has-textarea:not(.md-autogrow) .md-count{right:6px;bottom:2px}.md-field.md-has-textarea:not(.md-autogrow) .md-clear{top:6px;right:6px}.md-field.md-has-textarea:not(.md-autogrow).md-focused label,.md-field.md-has-textarea:not(.md-autogrow).md-has-value label{top:6px}.md-field.md-has-textarea:not(.md-autogrow).md-focused .md-textarea,.md-field.md-has-textarea:not(.md-autogrow).md-has-value .md-textarea{padding-top:10px}.md-field.md-has-file:after,.md-field.md-has-file:before,.md-field.md-has-file label{left:36px}.md-field.md-has-file .md-input{margin-left:12px}.md-field.md-focused:before,.md-field.md-highlight:before{opacity:1;-webkit-transform:scaleX(1);transform:scaleX(1);transition:.3s cubic-bezier(.4,0,.2,1);transition-property:border,opacity,-webkit-transform;transition-property:border,opacity,transform;transition-property:border,opacity,transform,-webkit-transform}.md-field.md-focused label,.md-field.md-has-value label{pointer-events:auto;top:0;opacity:1;font-size:12px}.md-field.md-focused .md-input,.md-field.md-focused .md-textarea,.md-field.md-has-value .md-input,.md-field.md-has-value .md-textarea{font-size:16px}.md-field.md-inline label{pointer-events:none}.md-field.md-inline.md-focused label{top:23px;font-size:16px}.md-field.md-inline.md-has-value label{opacity:0}.md-field.md-disabled:after{background:0 100% repeat-x;background-size:4px 1px}.md-field.md-has-password .md-toggle-password{margin:0;position:absolute;right:0;bottom:-2px}.md-field.md-has-password .md-toggle-password svg{width:22px;height:22px}.md-field.md-clearable .md-input{padding-right:30px}@-webkit-keyframes a{10%,90%{-webkit-transform:translate3d(-1px,0,0);transform:translate3d(-1px,0,0)}30%,70%{-webkit-transform:translate3d(-4px,0,0);transform:translate3d(-4px,0,0)}40%,60%{-webkit-transform:translate3d(4px,0,0);transform:translate3d(4px,0,0)}}@keyframes a{10%,90%{-webkit-transform:translate3d(-1px,0,0);transform:translate3d(-1px,0,0)}30%,70%{-webkit-transform:translate3d(-4px,0,0);transform:translate3d(-4px,0,0)}40%,60%{-webkit-transform:translate3d(4px,0,0);transform:translate3d(4px,0,0)}}.md-field.md-invalid.md-has-value label:not(:focus){-webkit-animation:a .4s cubic-bezier(.4,0,.2,1) both;animation:a .4s cubic-bezier(.4,0,.2,1) both;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-perspective:1000px;perspective:1000px}.md-field.md-invalid.md-has-textarea:not(.md-autogrow):before{border-width:2px}.md-field.md-invalid .md-error{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}.md-field.md-invalid .md-helper-text{opacity:0;-webkit-transform:translate3d(0,-8px,0);transform:translate3d(0,-8px,0)}.md-field.md-required label:after{position:absolute;top:2px;right:0;-webkit-transform:translateX(calc(100% + 2px));transform:translateX(calc(100% + 2px));content:\"*\";line-height:1em;vertical-align:top}.md-icon{width:24px;min-width:24px;height:24px;font-size:24px!important;margin:auto;display:-webkit-inline-box;display:inline-flex;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;vertical-align:middle}.md-icon.md-size-2x{width:48px;min-width:48px;height:48px;font-size:48px!important}.md-icon.md-size-3x{width:72px;min-width:72px;height:72px;font-size:72px!important}.md-icon.md-size-4x{width:96px;min-width:96px;height:96px;font-size:96px!important}.md-icon.md-size-5x{width:120px;min-width:120px;height:120px;font-size:120px!important}.md-icon-image svg{height:100%;-webkit-box-flex:1;flex:1;transition:fill .4s cubic-bezier(.4,0,.2,1)}.md-icon{transition:color .4s cubic-bezier(.4,0,.2,1);direction:ltr;font-family:Material Icons;-webkit-font-feature-settings:\"liga\";font-feature-settings:\"liga\";font-style:normal;letter-spacing:normal;line-height:1;text-rendering:optimizeLegibility;text-transform:none;word-wrap:normal;white-space:nowrap;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.md-svg-loader{display:block}.md-svg-loader svg{width:100%}.md-chip{height:32px;padding:0 12px;display:inline-block;cursor:default;border-radius:32px;transition:.3s cubic-bezier(.25,.8,.25,1);transition-property:background-color,color,opacity,box-shadow,-webkit-transform;transition-property:background-color,color,opacity,transform,box-shadow;transition-property:background-color,color,opacity,transform,box-shadow,-webkit-transform;will-change:background-color,color,opacity,transform,box-shadow;font-size:13px;line-height:32px;vertical-align:middle;white-space:nowrap}.md-chip:focus{outline:none}.md-chip.md-chip-enter-active,.md-chip.md-chip-leave-active{opacity:0;-webkit-transform:transformZ(0) scale(.8);transform:transformZ(0) scale(.8)}.md-chip.md-chip-enter-to{opacity:1;-webkit-transform:transformZ(0) scale(1);transform:transformZ(0) scale(1)}.md-chip.md-clickable:not(.md-disabled):active,.md-chip.md-deletable:not(.md-disabled):active,.md-chip.md-focused{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}.md-chip.md-clickable{padding:0;cursor:pointer}.md-chip.md-clickable>.md-ripple{padding:0 12px}.md-chip.md-deletable{padding-right:32px;position:relative}.md-chip.md-deletable.md-clickable{padding-right:0}.md-chip.md-deletable.md-clickable>.md-ripple{padding-right:32px}.md-chip.md-disabled{cursor:default}.md-chip+.md-chip{margin-left:4px}.md-chip .md-button.md-input-action{width:18px;min-width:18px;height:18px;margin:0;position:absolute;top:50%;right:7px;z-index:5;-webkit-transform:translate3D(0,-50%,0);transform:translate3D(0,-50%,0);transition-duration:.3s;transition-timing-function:cubic-bezier(.25,.8,.25,1);font-size:18px}.md-chip .md-button.md-input-action .md-ripple{padding:0}.md-chip .md-button.md-input-action .md-button-content{height:14px}.md-chip .md-button.md-input-action .md-icon{width:14px;min-width:14px;height:14px;font-size:14px!important;vertical-align:top}.md-chip .md-button.md-input-action .md-icon svg{transition-duration:.3s;transition-timing-function:cubic-bezier(.25,.8,.25,1)}.md-datepicker-overlay{opacity:0}.md-datepicker .md-date-icon{cursor:pointer}.md-datepicker input[type=date]::-webkit-calendar-picker-indicator,.md-datepicker input[type=date]::-webkit-clear-button,.md-datepicker input[type=date]::-webkit-inner-spin-button{display:none}@media (max-width:600px){.md-datepicker-overlay{opacity:1}}.md-overlay{position:absolute;top:0;right:0;bottom:0;left:0;z-index:4;overflow:hidden;background:rgba(0,0,0,.6);transition:.35s cubic-bezier(.4,0,.2,1);transition-property:opacity;will-change:opacity}.md-overlay.md-fixed,body>.md-overlay{position:fixed}.md-overlay-enter,.md-overlay-leave-active{opacity:0}.md-datepicker-dialog{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);display:-webkit-box;display:flex;overflow:hidden;z-index:10;border-radius:2px;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto;-webkit-transform-origin:top left;transform-origin:top left;transition:opacity .2s cubic-bezier(.25,.8,.25,1),-webkit-transform .35s cubic-bezier(.25,.8,.25,1);transition:opacity .2s cubic-bezier(.25,.8,.25,1),transform .35s cubic-bezier(.25,.8,.25,1);transition:opacity .2s cubic-bezier(.25,.8,.25,1),transform .35s cubic-bezier(.25,.8,.25,1),-webkit-transform .35s cubic-bezier(.25,.8,.25,1);will-change:opacity,transform,left,top}.md-datepicker-dialog-leave-active{opacity:0}.md-datepicker-dialog-enter{opacity:0;-webkit-transform:scale(.9);transform:scale(.9)}.md-datepicker-dialog-enter .md-datepicker-body .md-datepicker-calendar{opacity:0;-webkit-transform:translate3D(0,10%,0);transform:translate3D(0,10%,0)}.md-datepicker-header{min-width:150px;padding:16px}.md-datepicker-header .md-datepicker-year-select{cursor:pointer;opacity:.54;transition:opacity .3s cubic-bezier(.4,0,.2,1);font-size:16px;font-weight:700;letter-spacing:.01em;line-height:24px}.md-datepicker-header .md-datepicker-date-select{cursor:pointer;opacity:.54;transition:opacity .3s cubic-bezier(.4,0,.2,1);font-size:32px;font-weight:900;letter-spacing:0;line-height:1.2em}.md-datepicker-header .md-datepicker-dayname{display:block}.md-datepicker-header .md-selected{opacity:1}.md-datepicker-body{width:320px;position:relative;overflow:hidden;transition:width .3s cubic-bezier(.25,.8,.25,1);will-change:width}.md-datepicker-body .md-button{margin:0}.md-datepicker-body-header{padding:8px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between;position:absolute;top:0;right:0;left:0;pointer-events:none}.md-datepicker-body-header:after,.md-datepicker-body-header:before{width:48px;height:48px;position:absolute;top:0;z-index:2;pointer-events:none;content:\" \"}.md-datepicker-body-header:after{left:0}.md-datepicker-body-header:before{right:0}.md-datepicker-body-header .md-button{pointer-events:auto;z-index:3}.md-datepicker-body-header-enter .md-button:first-child,.md-datepicker-body-header-leave-active .md-button:first-child{-webkit-transform:translate3d(-150%,0,0);transform:translate3d(-150%,0,0)}.md-datepicker-body-header-enter .md-button:last-child,.md-datepicker-body-header-leave-active .md-button:last-child{-webkit-transform:translate3d(150%,0,0);transform:translate3d(150%,0,0)}.md-datepicker-body-content{overflow:hidden;transition:height .35s cubic-bezier(.4,0,.2,1);will-change:height}.md-datepicker-panel{display:-webkit-box;display:flex;position:absolute;top:0;right:0;bottom:0;left:0;transition:.35s cubic-bezier(.4,0,.2,1);transition-property:opacity,-webkit-transform;transition-property:transform,opacity;transition-property:transform,opacity,-webkit-transform;will-change:transform,opacity}.md-datepicker-calendar.md-datepicker-view-enter,.md-datepicker-calendar.md-datepicker-view-leave-active{-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}.md-datepicker-calendar.md-previous .md-datepicker-month-enter{-webkit-transform:translate3D(-100%,0,0);transform:translate3D(-100%,0,0)}.md-datepicker-calendar.md-previous .md-datepicker-month-enter .md-datepicker-month-trigger{-webkit-transform:translate3D(-30%,0,0);transform:translate3D(-30%,0,0)}.md-datepicker-calendar.md-next .md-datepicker-month-enter,.md-datepicker-calendar.md-previous .md-datepicker-month-leave-active{-webkit-transform:translate3D(100%,0,0);transform:translate3D(100%,0,0)}.md-datepicker-calendar.md-next .md-datepicker-month-enter .md-datepicker-month-trigger{-webkit-transform:translate3D(30%,0,0);transform:translate3D(30%,0,0)}.md-datepicker-calendar.md-next .md-datepicker-month-leave-active{-webkit-transform:translate3D(-100%,0,0);transform:translate3D(-100%,0,0)}.md-datepicker-month{top:8px;bottom:auto;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;transition:.35s cubic-bezier(.4,0,.2,1);transition-property:opacity,-webkit-transform;transition-property:transform,opacity;transition-property:transform,opacity,-webkit-transform;will-change:transform,opacity}.md-datepicker-month .md-datepicker-month-trigger{min-height:32px;margin:0 46px 10px;-webkit-box-flex:1;flex:1;border-radius:0;transition:-webkit-transform .45s cubic-bezier(.4,0,.2,1);transition:transform .45s cubic-bezier(.4,0,.2,1);transition:transform .45s cubic-bezier(.4,0,.2,1),-webkit-transform .45s cubic-bezier(.4,0,.2,1);will-change:transform}.md-datepicker-week{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center}.md-datepicker-week span{-webkit-box-flex:1;flex:1;font-size:12px;text-align:center}.md-datepicker-days{display:-webkit-box;display:flex;flex-wrap:wrap}.md-datepicker-days .md-datepicker-day,.md-datepicker-days .md-datepicker-empty{margin:1px 0;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;-webkit-box-flex:0;flex:0 1 14.28571%}.md-datepicker-days .md-datepicker-day-button{width:30px;min-width:30px;height:30px;cursor:pointer;border-radius:30px;transition:.3s cubic-bezier(.4,0,.2,1);line-height:30px;text-align:center}.md-datepicker-days .md-datepicker-selected,.md-datepicker-days .md-datepicker-today{font-weight:700}.md-datepicker-days .md-datepicker-disabled{pointer-events:none}.md-datepicker-month-selector{padding:6px 8px 10px;flex-wrap:wrap;bottom:auto;transition:.35s cubic-bezier(.4,0,.2,1);transition-property:opacity,-webkit-transform;transition-property:transform,opacity;transition-property:transform,opacity,-webkit-transform;will-change:transform,opacity}.md-datepicker-month-selector.md-datepicker-view-enter,.md-datepicker-month-selector.md-datepicker-view-leave-active{-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}.md-datepicker-month-selector .md-datepicker-year-trigger{width:100%;margin:0 0 8px;-webkit-box-flex:1;flex:1 1 100%}.md-datepicker-month-button,.md-datepicker-year-button{height:36px;margin:3px 0;cursor:pointer;transition:.3s cubic-bezier(.4,0,.2,1);line-height:36px;font-weight:500;text-align:center;text-transform:uppercase}.md-datepicker-month-button{-webkit-box-flex:1;flex:1 1 33.3333%;border-radius:2px;font-size:13px}.md-datepicker-year-selector{-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;overflow:auto;bottom:52px;border-bottom:1px solid}.md-datepicker-year-selector.md-datepicker-view-enter,.md-datepicker-year-selector.md-datepicker-view-leave-active{-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}.md-datepicker-year-selector .md-button{min-height:36px}.md-datepicker-year-button{font-size:16px}.md-datepicker-year-button.md-datepicker-selected{font-size:24px}@media (max-width:600px){.md-datepicker-dialog{-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;top:50%!important;left:50%!important;-webkit-transform:translate3D(-50%,-50%,0);transform:translate3D(-50%,-50%,0);-webkit-transform-origin:center center;transform-origin:center center}.md-datepicker-dialog-enter{-webkit-transform:translate3D(-50%,-50%,0) scale(.9);transform:translate3D(-50%,-50%,0) scale(.9)}.md-datepicker-header{min-width:auto;padding:16px 20px}.md-datepicker-header .md-datepicker-dayname{display:inline-block}.md-datepicker-body{width:296px}.md-datepicker-month{padding:0 6px}}.md-popover.md-rendering{opacity:0;transition:none!important}.md-dialog{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);min-width:280px;max-width:80%;max-height:80%;margin:auto;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-flow:column;overflow:hidden;position:fixed;top:50%;left:50%;z-index:10;border-radius:2px;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-webkit-transform-origin:center center;transform-origin:center center;transition:opacity .15s cubic-bezier(.25,.8,.25,1),-webkit-transform .2s cubic-bezier(.25,.8,.25,1);transition:opacity .15s cubic-bezier(.25,.8,.25,1),transform .2s cubic-bezier(.25,.8,.25,1);transition:opacity .15s cubic-bezier(.25,.8,.25,1),transform .2s cubic-bezier(.25,.8,.25,1),-webkit-transform .2s cubic-bezier(.25,.8,.25,1);will-change:opacity,transform,left,top}.md-dialog>.md-dialog-actions,.md-dialog>.md-dialog-content,.md-dialog>.md-dialog-tabs,.md-dialog>.md-dialog-title{transition:opacity .3s cubic-bezier(.4,0,.2,1),-webkit-transform .25s cubic-bezier(.4,0,.2,1);transition:opacity .3s cubic-bezier(.4,0,.2,1),transform .25s cubic-bezier(.4,0,.2,1);transition:opacity .3s cubic-bezier(.4,0,.2,1),transform .25s cubic-bezier(.4,0,.2,1),-webkit-transform .25s cubic-bezier(.4,0,.2,1);will-change:opacity,transform}.md-dialog-enter-active,.md-dialog-leave-active{opacity:0;-webkit-transform:translate(-50%,-50%) scale(.9);transform:translate(-50%,-50%) scale(.9)}.md-dialog-enter-active>.md-dialog-actions,.md-dialog-enter-active>.md-dialog-content,.md-dialog-enter-active>.md-dialog-tabs,.md-dialog-enter-active>.md-dialog-title,.md-dialog-leave-active>.md-dialog-actions,.md-dialog-leave-active>.md-dialog-content,.md-dialog-leave-active>.md-dialog-tabs,.md-dialog-leave-active>.md-dialog-title{opacity:0;-webkit-transform:scale(.95) translate3D(0,10%,0);transform:scale(.95) translate3D(0,10%,0)}.md-dialog-container{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-flow:column}.md-dialog-container,.md-dialog-container .md-tabs{-webkit-box-flex:1;flex:1}.md-dialog-container .md-tabs-navigation{padding:0 12px}@media (max-width:600px){.md-dialog-container .md-tab{padding:12px}.md-dialog-fullscreen{max-width:100%;max-height:100%;position:fixed;top:0;right:0;bottom:0;left:0;border-radius:0;-webkit-transform:none;transform:none}.md-dialog-fullscreen.md-dialog-enter{opacity:0;-webkit-transform:translate3D(0,30%,0);transform:translate3D(0,30%,0)}.md-dialog-fullscreen.md-dialog-leave-active{opacity:0;-webkit-transform:translate3D(0,0,0);transform:translate3D(0,0,0)}}.md-dialog-title{margin-bottom:20px;padding:24px 24px 0}.md-dialog-content{padding:0 24px 24px;-webkit-box-flex:1;flex:1;flex-basis:auto;overflow:auto;position:relative}.md-dialog-content:first-child{padding-top:24px}.md-dialog-content p:first-child:not(:only-child){margin-top:0}.md-dialog-content p:last-child:not(:only-child){margin-bottom:0}.md-dialog-actions{min-height:52px;padding:8px 8px 8px 24px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:end;justify-content:flex-end;position:relative}.md-dialog-actions:before{height:1px;position:absolute;top:-1px;right:0;left:0;content:\" \"}.md-dialog-actions .md-button{min-width:64px;margin:0}.md-dialog-actions .md-button+.md-button{margin-left:8px}.md-divider{height:1px;margin:0;padding:0;display:block;border:0;transition:margin-left .3s cubic-bezier(.4,0,.2,1);will-change:margin-left}.md-divider.md-inset{margin-left:72px}.md-drawer{position:absolute;top:0;bottom:0;left:0;z-index:7;-webkit-transform:translate3D(-100%,0,0);transform:translate3D(-100%,0,0);transition:-webkit-transform .4s cubic-bezier(.25,.8,.25,1);transition:transform .4s cubic-bezier(.25,.8,.25,1);transition:transform .4s cubic-bezier(.25,.8,.25,1),-webkit-transform .4s cubic-bezier(.25,.8,.25,1);will-change:transform,box-shadow;width:400px;max-width:calc(100vw - 56px);overflow-x:hidden;overflow-y:auto}.md-drawer.md-right{right:0;left:auto;-webkit-transform:translate3D(100%,0,0);transform:translate3D(100%,0,0)}.md-drawer.md-fixed{position:fixed}.md-drawer.md-active{-webkit-transform:translate3D(0,0,0);transform:translate3D(0,0,0);transition-timing-function:cubic-bezier(.4,0,.2,1)}.md-drawer.md-temporary+.md-app-container .md-content{border-left:none}.md-drawer.md-temporary.md-active{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.md-drawer.md-persistent:not(.md-active)+.md-app-container .md-content{border-left:none}.md-drawer.md-persistent-mini{border-right:1px solid;-webkit-transform:translate3D(0,64px,0);transform:translate3D(0,64px,0);transition:.3s cubic-bezier(.25,.8,.25,1);transition-property:width,-webkit-transform;transition-property:transform,width;transition-property:transform,width,-webkit-transform;will-change:transform,box-shadow}.md-drawer.md-persistent-mini.md-active+.md-app-container .md-content{border-left:none}.md-drawer.md-persistent-mini:not(.md-active){width:70px!important;z-index:1;white-space:nowrap}.md-drawer.md-persistent-mini:not(.md-active) .md-toolbar{display:none}.md-drawer.md-persistent-mini:not(.md-active) .md-list-item-content{padding:0 23px}.md-drawer.md-persistent-mini.md-active{position:relative;-webkit-transform:translate3D(0,0,0);transform:translate3D(0,0,0);white-space:normal}.md-drawer .md-list-item-container{font-size:14px;text-transform:none}@media (max-width:600px){.md-drawer{width:320px}.md-drawer.md-active{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}}@media (min-width:600px){.md-drawer:not(.md-temporary)~.md-overlay{background:none;pointer-events:none}.md-drawer.md-permanent{position:relative;-webkit-transform:translate3D(0,0,0);transform:translate3D(0,0,0)}.md-drawer.md-permanent-full{z-index:3}.md-drawer.md-permanent-full .md-list{padding-top:0}.md-drawer.md-permanent-card,.md-drawer.md-permanent-clipped{z-index:1}.md-drawer.md-permanent-card{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);overflow:auto;position:relative;border-radius:2px;transition:.3s cubic-bezier(.4,0,.2,1);transition-property:color,background-color;will-change:color,background-color;margin:8px;z-index:1}}@media (min-width:960px){.md-drawer.md-permanent-card{margin:16px}}@media (min-width:1280px){.md-drawer.md-permanent-card{margin:24px}}.md-elevation-0{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.md-elevation-1{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}.md-elevation-2{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.md-elevation-3{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}.md-elevation-4{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}.md-elevation-5{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 5px 8px 0 rgba(0,0,0,.14),0 1px 14px 0 rgba(0,0,0,.12)}.md-elevation-6{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.md-elevation-7{box-shadow:0 4px 5px -2px rgba(0,0,0,.2),0 7px 10px 1px rgba(0,0,0,.14),0 2px 16px 1px rgba(0,0,0,.12)}.md-elevation-8{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.md-elevation-9{box-shadow:0 5px 6px -3px rgba(0,0,0,.2),0 9px 12px 1px rgba(0,0,0,.14),0 3px 16px 2px rgba(0,0,0,.12)}.md-elevation-10{box-shadow:0 6px 6px -3px rgba(0,0,0,.2),0 10px 14px 1px rgba(0,0,0,.14),0 4px 18px 3px rgba(0,0,0,.12)}.md-elevation-11{box-shadow:0 6px 7px -4px rgba(0,0,0,.2),0 11px 15px 1px rgba(0,0,0,.14),0 4px 20px 3px rgba(0,0,0,.12)}.md-elevation-12{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.md-elevation-13{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12)}.md-elevation-14{box-shadow:0 7px 9px -4px rgba(0,0,0,.2),0 14px 21px 2px rgba(0,0,0,.14),0 5px 26px 4px rgba(0,0,0,.12)}.md-elevation-15{box-shadow:0 8px 9px -5px rgba(0,0,0,.2),0 15px 22px 2px rgba(0,0,0,.14),0 6px 28px 5px rgba(0,0,0,.12)}.md-elevation-16{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.md-elevation-17{box-shadow:0 8px 11px -5px rgba(0,0,0,.2),0 17px 26px 2px rgba(0,0,0,.14),0 6px 32px 5px rgba(0,0,0,.12)}.md-elevation-18{box-shadow:0 9px 11px -5px rgba(0,0,0,.2),0 18px 28px 2px rgba(0,0,0,.14),0 7px 34px 6px rgba(0,0,0,.12)}.md-elevation-19{box-shadow:0 9px 12px -6px rgba(0,0,0,.2),0 19px 29px 2px rgba(0,0,0,.14),0 7px 36px 6px rgba(0,0,0,.12)}.md-elevation-20{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 20px 31px 3px rgba(0,0,0,.14),0 8px 38px 7px rgba(0,0,0,.12)}.md-elevation-21{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 21px 33px 3px rgba(0,0,0,.14),0 8px 40px 7px rgba(0,0,0,.12)}.md-elevation-22{box-shadow:0 10px 14px -6px rgba(0,0,0,.2),0 22px 35px 3px rgba(0,0,0,.14),0 8px 42px 7px rgba(0,0,0,.12)}.md-elevation-23{box-shadow:0 11px 14px -7px rgba(0,0,0,.2),0 23px 36px 3px rgba(0,0,0,.14),0 9px 44px 8px rgba(0,0,0,.12)}.md-elevation-24{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)}.md-empty-state{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;text-align:center;max-width:420px;padding:36px;margin:0 auto;position:relative;transition:opacity .15s cubic-bezier(0,0,.2,1),-webkit-transform .3s cubic-bezier(0,0,.2,1);transition:opacity .15s cubic-bezier(0,0,.2,1),transform .3s cubic-bezier(0,0,.2,1);transition:opacity .15s cubic-bezier(0,0,.2,1),transform .3s cubic-bezier(0,0,.2,1),-webkit-transform .3s cubic-bezier(0,0,.2,1);will-change:transform,opacity}.md-empty-state.md-rounded{max-width:auto;border-radius:50%}.md-empty-state.md-rounded .md-empty-state-container{padding:40px;position:absolute;top:0;right:0;bottom:0;left:0}.md-empty-state .md-button{margin:.5em 0 0}.md-empty-state-enter{opacity:0;-webkit-transform:scale(.87);transform:scale(.87)}.md-empty-state-enter .md-empty-state-container{opacity:0}.md-empty-state-container{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;text-align:center;transition:opacity .4s cubic-bezier(.4,0,.2,1);will-change:opacity}.md-empty-state-icon{width:160px;min-width:160px;height:160px;font-size:160px!important;margin:0}.md-empty-state-label{font-size:26px;font-weight:500;line-height:40px}.md-empty-state-description{margin:1em 0;font-size:16px;line-height:24px}.md-menu.md-select{display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1}.md-menu.md-select:not(.md-disabled) .md-icon,.md-menu.md-select:not(.md-disabled) .md-input{cursor:pointer;outline:none}.md-menu.md-select .md-input{-webkit-box-flex:1;flex:1}.md-menu.md-select .md-input-fake,.md-menu.md-select select{width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;clip:rect(0 0 0 0);border:0}.md-menu-content.md-select-menu{width:100%}.md-menu-content.md-select-menu.md-menu-content-enter{-webkit-transform:translate3d(0,-8px,0) scaleY(.3);transform:translate3d(0,-8px,0) scaleY(.3)}.md-menu-content.md-select-menu .md-list{transition:opacity .3s cubic-bezier(.55,0,.55,.2)}.md-menu-content.md-select-menu .md-dense .md-ripple.md-list-item-content{font-size:14px}.md-menu{display:inline-block}.md-menu>.md-button{margin:0}.md-menu-content{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);min-width:112px;max-width:280px;max-height:35vh;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;position:absolute;z-index:8;border-radius:2px;transition:opacity .3s cubic-bezier(.25,.8,.25,1),-webkit-transform .2s cubic-bezier(.25,.8,.25,1);transition:transform .2s cubic-bezier(.25,.8,.25,1),opacity .3s cubic-bezier(.25,.8,.25,1);transition:transform .2s cubic-bezier(.25,.8,.25,1),opacity .3s cubic-bezier(.25,.8,.25,1),-webkit-transform .2s cubic-bezier(.25,.8,.25,1);will-change:opacity,transform,top,left!important}.md-menu-content.md-shallow{position:fixed!important;top:-9999em!important;left:-9999em!important;pointer-events:none}.md-menu-content.md-menu-content-enter-active{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}.md-menu-content.md-menu-content-leave-active{transition:opacity .4s cubic-bezier(.4,0,.2,1);opacity:0}.md-menu-content.md-menu-content-enter.md-menu-content-top-start{-webkit-transform-origin:bottom left;transform-origin:bottom left;-webkit-transform:translate3d(0,8px,0) scaleY(.95);transform:translate3d(0,8px,0) scaleY(.95)}.md-menu-content.md-menu-content-enter.md-menu-content-top-end{-webkit-transform-origin:bottom right;transform-origin:bottom right;-webkit-transform:translate3d(0,8px,0) scaleY(.95);transform:translate3d(0,8px,0) scaleY(.95)}.md-menu-content.md-menu-content-enter.md-menu-content-right-start{-webkit-transform-origin:left top;transform-origin:left top;-webkit-transform:translate3d(0,-8px,0) scaleY(.95);transform:translate3d(0,-8px,0) scaleY(.95)}.md-menu-content.md-menu-content-enter.md-menu-content-right-end{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:translate3d(0,8px,0) scaleY(.95);transform:translate3d(0,8px,0) scaleY(.95)}.md-menu-content.md-menu-content-enter.md-menu-content-bottom-start{-webkit-transform-origin:top left;transform-origin:top left;-webkit-transform:translate3d(0,-8px,0) scaleY(.95);transform:translate3d(0,-8px,0) scaleY(.95)}.md-menu-content.md-menu-content-enter.md-menu-content-bottom-end{-webkit-transform-origin:top right;transform-origin:top right;-webkit-transform:translate3d(0,-8px,0) scaleY(.95);transform:translate3d(0,-8px,0) scaleY(.95)}.md-menu-content.md-menu-content-enter.md-menu-content-left-start{-webkit-transform-origin:right top;transform-origin:right top;-webkit-transform:translate3d(0,-8px,0) scaleY(.95);transform:translate3d(0,-8px,0) scaleY(.95)}.md-menu-content.md-menu-content-enter.md-menu-content-left-end{-webkit-transform-origin:right bottom;transform-origin:right bottom;-webkit-transform:translate3d(0,8px,0) scaleY(.95);transform:translate3d(0,8px,0) scaleY(.95)}.md-menu-content.md-menu-content-enter .md-list{opacity:0}.md-menu-content.md-menu-content-medium{min-width:168px}.md-menu-content.md-menu-content-big{min-width:224px}.md-menu-content.md-menu-content-huge{min-width:280px}.md-menu-content-container{-webkit-box-flex:1;flex:1;overflow:auto}.md-menu-content-container .md-list{transition:opacity .3s cubic-bezier(.25,.8,.25,1);will-change:opacity;font-family:Roboto,sans-serif;text-transform:none;white-space:nowrap}@media (max-width:944px){.md-menu-content-container .md-list{font-size:14px}}.md-list{margin:0;padding:8px 0;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-flow:column nowrap;position:relative;list-style:none}.md-list.md-dense{padding:4px 0}.md-list .md-divider{margin-top:-1px}.md-list .md-subheader.md-inset{padding-left:72px}.md-list>.md-subheader:first-of-type{margin-top:-8px}.md-optgroup .md-subheader{text-transform:uppercase}.md-optgroup .md-ripple.md-list-item-content{padding-left:24px}.md-file{display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1}.md-file input[type=file]{width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;position:absolute;clip:rect(0 0 0 0);border:0}.md-file .md-icon{cursor:pointer}.md-highlight-text{-webkit-box-flex:1;flex:1}.md-highlight-text-match{font-weight:500}.md-image{display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center}.md-layout{display:flex;flex-wrap:wrap}.md-layout .md-layout{flex:1}.md-layout .md-layout-nowrap{flex-wrap:nowrap}.md-layout.md-centered{width:100%;max-width:1200px;margin:0 auto}.md-layout.md-gutter{margin-right:-20px;margin-left:-20px}.md-layout.md-gutter>.md-layout-item{padding-right:20px;padding-left:20px}@media (max-width:1264px){.md-layout.md-gutter{margin-right:-12px;margin-left:-12px}.md-layout.md-gutter>.md-layout-item{padding-right:12px;padding-left:12px}}@media (max-width:944px){.md-layout.md-gutter{margin-right:-8px;margin-left:-8px}.md-layout.md-gutter>.md-layout-item{padding-right:8px;padding-left:8px}}@media (max-width:600px){.md-layout.md-gutter{margin-right:-4px;margin-left:-4px}.md-layout.md-gutter>.md-layout-item{padding-right:4px;padding-left:4px}}.md-layout.md-alignment-top-left{justify-content:flex-start;align-items:flex-start}.md-layout.md-alignment-top-center{justify-content:center;align-items:flex-start}.md-layout.md-alignment-top-right{justify-content:flex-end;align-items:flex-start}.md-layout.md-alignment-top-space-around{justify-content:space-around;align-items:flex-start}.md-layout.md-alignment-top-space-between{justify-content:space-between;align-items:flex-start}.md-layout.md-alignment-center-left{justify-content:flex-start;align-items:center}.md-layout.md-alignment-center,.md-layout.md-alignment-center-center{justify-content:center;align-items:center}.md-layout.md-alignment-center-right{justify-content:flex-end;align-items:center}.md-layout.md-alignment-center-space-around{justify-content:space-around;align-items:center}.md-layout.md-alignment-center-space-between{justify-content:space-between;align-items:center}.md-layout.md-alignment-bottom-left{justify-content:flex-start;align-items:flex-end}.md-layout.md-alignment-bottom-center{justify-content:center;align-items:flex-end}.md-layout.md-alignment-bottom-right{justify-content:flex-end;align-items:flex-end}.md-layout.md-alignment-bottom-space-around{justify-content:space-around;align-items:flex-end}.md-layout.md-alignment-bottom-space-between{justify-content:space-between;align-items:flex-end}.md-layout.md-alignment-space-around-left{justify-content:flex-start;align-items:space-around}.md-layout.md-alignment-space-around-center{justify-content:center;align-items:space-around}.md-layout.md-alignment-space-around-right{justify-content:flex-end;align-items:space-around}.md-layout.md-alignment-space-around-space-around{justify-content:space-around;align-items:space-around}.md-layout.md-alignment-space-around-space-between{justify-content:space-between;align-items:space-around}.md-layout.md-alignment-space-between-left{justify-content:flex-start;align-items:space-between}.md-layout.md-alignment-space-between-center{justify-content:center;align-items:space-between}.md-layout.md-alignment-space-between-right{justify-content:flex-end;align-items:space-between}.md-layout.md-alignment-space-between-space-around{justify-content:space-around;align-items:space-between}.md-layout.md-alignment-space-between-space-between{justify-content:space-between;align-items:space-between}.md-layout-item,.md-layout-item.md-size{flex:1 1}.md-layout-item.md-size-5{min-width:5%;max-width:5%;flex:0 1 5%}.md-layout-item.md-size-10{min-width:10%;max-width:10%;flex:0 1 10%}.md-layout-item.md-size-15{min-width:15%;max-width:15%;flex:0 1 15%}.md-layout-item.md-size-20{min-width:20%;max-width:20%;flex:0 1 20%}.md-layout-item.md-size-25{min-width:25%;max-width:25%;flex:0 1 25%}.md-layout-item.md-size-30{min-width:30%;max-width:30%;flex:0 1 30%}.md-layout-item.md-size-35{min-width:35%;max-width:35%;flex:0 1 35%}.md-layout-item.md-size-40{min-width:40%;max-width:40%;flex:0 1 40%}.md-layout-item.md-size-45{min-width:45%;max-width:45%;flex:0 1 45%}.md-layout-item.md-size-50{min-width:50%;max-width:50%;flex:0 1 50%}.md-layout-item.md-size-55{min-width:55%;max-width:55%;flex:0 1 55%}.md-layout-item.md-size-60{min-width:60%;max-width:60%;flex:0 1 60%}.md-layout-item.md-size-65{min-width:65%;max-width:65%;flex:0 1 65%}.md-layout-item.md-size-70{min-width:70%;max-width:70%;flex:0 1 70%}.md-layout-item.md-size-75{min-width:75%;max-width:75%;flex:0 1 75%}.md-layout-item.md-size-80{min-width:80%;max-width:80%;flex:0 1 80%}.md-layout-item.md-size-85{min-width:85%;max-width:85%;flex:0 1 85%}.md-layout-item.md-size-90{min-width:90%;max-width:90%;flex:0 1 90%}.md-layout-item.md-size-95{min-width:95%;max-width:95%;flex:0 1 95%}.md-layout-item.md-size-33{min-width:33.3333%;max-width:33.3333%;flex:0 1 33.3333%}.md-layout-item.md-size-66{min-width:66.6666%;max-width:66.6666%;flex:0 1 66.6666%}.md-layout-item.md-size-100{min-width:100%;max-width:100%;margin-left:0!important;flex:1 1 100%}@media (max-width:1264px){.md-layout-item.md-medium-size{flex:1 1}.md-layout-item.md-medium-size-5{min-width:5%;max-width:5%;flex:0 1 5%}.md-layout-item.md-medium-size-10{min-width:10%;max-width:10%;flex:0 1 10%}.md-layout-item.md-medium-size-15{min-width:15%;max-width:15%;flex:0 1 15%}.md-layout-item.md-medium-size-20{min-width:20%;max-width:20%;flex:0 1 20%}.md-layout-item.md-medium-size-25{min-width:25%;max-width:25%;flex:0 1 25%}.md-layout-item.md-medium-size-30{min-width:30%;max-width:30%;flex:0 1 30%}.md-layout-item.md-medium-size-35{min-width:35%;max-width:35%;flex:0 1 35%}.md-layout-item.md-medium-size-40{min-width:40%;max-width:40%;flex:0 1 40%}.md-layout-item.md-medium-size-45{min-width:45%;max-width:45%;flex:0 1 45%}.md-layout-item.md-medium-size-50{min-width:50%;max-width:50%;flex:0 1 50%}.md-layout-item.md-medium-size-55{min-width:55%;max-width:55%;flex:0 1 55%}.md-layout-item.md-medium-size-60{min-width:60%;max-width:60%;flex:0 1 60%}.md-layout-item.md-medium-size-65{min-width:65%;max-width:65%;flex:0 1 65%}.md-layout-item.md-medium-size-70{min-width:70%;max-width:70%;flex:0 1 70%}.md-layout-item.md-medium-size-75{min-width:75%;max-width:75%;flex:0 1 75%}.md-layout-item.md-medium-size-80{min-width:80%;max-width:80%;flex:0 1 80%}.md-layout-item.md-medium-size-85{min-width:85%;max-width:85%;flex:0 1 85%}.md-layout-item.md-medium-size-90{min-width:90%;max-width:90%;flex:0 1 90%}.md-layout-item.md-medium-size-95{min-width:95%;max-width:95%;flex:0 1 95%}.md-layout-item.md-medium-size-33{min-width:33.3333%;max-width:33.3333%;flex:0 1 33.3333%}.md-layout-item.md-medium-size-66{min-width:66.6666%;max-width:66.6666%;flex:0 1 66.6666%}.md-layout-item.md-medium-size-100{min-width:100%;max-width:100%;margin-left:0!important;flex:1 1 100%}}@media (max-width:944px){.md-layout-item.md-small-size{flex:1 1}.md-layout-item.md-small-size-5{min-width:5%;max-width:5%;flex:0 1 5%}.md-layout-item.md-small-size-10{min-width:10%;max-width:10%;flex:0 1 10%}.md-layout-item.md-small-size-15{min-width:15%;max-width:15%;flex:0 1 15%}.md-layout-item.md-small-size-20{min-width:20%;max-width:20%;flex:0 1 20%}.md-layout-item.md-small-size-25{min-width:25%;max-width:25%;flex:0 1 25%}.md-layout-item.md-small-size-30{min-width:30%;max-width:30%;flex:0 1 30%}.md-layout-item.md-small-size-35{min-width:35%;max-width:35%;flex:0 1 35%}.md-layout-item.md-small-size-40{min-width:40%;max-width:40%;flex:0 1 40%}.md-layout-item.md-small-size-45{min-width:45%;max-width:45%;flex:0 1 45%}.md-layout-item.md-small-size-50{min-width:50%;max-width:50%;flex:0 1 50%}.md-layout-item.md-small-size-55{min-width:55%;max-width:55%;flex:0 1 55%}.md-layout-item.md-small-size-60{min-width:60%;max-width:60%;flex:0 1 60%}.md-layout-item.md-small-size-65{min-width:65%;max-width:65%;flex:0 1 65%}.md-layout-item.md-small-size-70{min-width:70%;max-width:70%;flex:0 1 70%}.md-layout-item.md-small-size-75{min-width:75%;max-width:75%;flex:0 1 75%}.md-layout-item.md-small-size-80{min-width:80%;max-width:80%;flex:0 1 80%}.md-layout-item.md-small-size-85{min-width:85%;max-width:85%;flex:0 1 85%}.md-layout-item.md-small-size-90{min-width:90%;max-width:90%;flex:0 1 90%}.md-layout-item.md-small-size-95{min-width:95%;max-width:95%;flex:0 1 95%}.md-layout-item.md-small-size-33{min-width:33.3333%;max-width:33.3333%;flex:0 1 33.3333%}.md-layout-item.md-small-size-66{min-width:66.6666%;max-width:66.6666%;flex:0 1 66.6666%}.md-layout-item.md-small-size-100{min-width:100%;max-width:100%;margin-left:0!important;flex:1 1 100%}}@media (max-width:600px){.md-layout-item.md-xsmall-size{flex:1 1}.md-layout-item.md-xsmall-size-5{min-width:5%;max-width:5%;flex:0 1 5%}.md-layout-item.md-xsmall-size-10{min-width:10%;max-width:10%;flex:0 1 10%}.md-layout-item.md-xsmall-size-15{min-width:15%;max-width:15%;flex:0 1 15%}.md-layout-item.md-xsmall-size-20{min-width:20%;max-width:20%;flex:0 1 20%}.md-layout-item.md-xsmall-size-25{min-width:25%;max-width:25%;flex:0 1 25%}.md-layout-item.md-xsmall-size-30{min-width:30%;max-width:30%;flex:0 1 30%}.md-layout-item.md-xsmall-size-35{min-width:35%;max-width:35%;flex:0 1 35%}.md-layout-item.md-xsmall-size-40{min-width:40%;max-width:40%;flex:0 1 40%}.md-layout-item.md-xsmall-size-45{min-width:45%;max-width:45%;flex:0 1 45%}.md-layout-item.md-xsmall-size-50{min-width:50%;max-width:50%;flex:0 1 50%}.md-layout-item.md-xsmall-size-55{min-width:55%;max-width:55%;flex:0 1 55%}.md-layout-item.md-xsmall-size-60{min-width:60%;max-width:60%;flex:0 1 60%}.md-layout-item.md-xsmall-size-65{min-width:65%;max-width:65%;flex:0 1 65%}.md-layout-item.md-xsmall-size-70{min-width:70%;max-width:70%;flex:0 1 70%}.md-layout-item.md-xsmall-size-75{min-width:75%;max-width:75%;flex:0 1 75%}.md-layout-item.md-xsmall-size-80{min-width:80%;max-width:80%;flex:0 1 80%}.md-layout-item.md-xsmall-size-85{min-width:85%;max-width:85%;flex:0 1 85%}.md-layout-item.md-xsmall-size-90{min-width:90%;max-width:90%;flex:0 1 90%}.md-layout-item.md-xsmall-size-95{min-width:95%;max-width:95%;flex:0 1 95%}.md-layout-item.md-xsmall-size-33{min-width:33.3333%;max-width:33.3333%;flex:0 1 33.3333%}.md-layout-item.md-xsmall-size-66{min-width:66.6666%;max-width:66.6666%;flex:0 1 66.6666%}.md-layout-item.md-xsmall-size-100{min-width:100%;max-width:100%;margin-left:0!important;flex:1 1 100%}}.md-hide{display:none}@media (max-width:1264px){.md-medium-hide{display:none}}@media (max-width:944px){.md-small-hide{display:none}}@media (max-width:600px){.md-xsmall-hide{display:none}}.md-list-item{height:auto;position:relative;z-index:2}.md-list-item.md-inset .md-list-item-content{padding-left:72px}.md-list-item .md-icon{margin:0;transition-property:color,margin-right}.md-list-item-container{width:100%;font-size:16px;font-weight:400;text-align:left;text-transform:none}.md-list-item-container:not(.md-list-item-default):not([disabled]){-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.md-list-item-container.md-button-clean:hover{opacity:1;text-decoration:none}.md-list-item-content{min-height:48px;padding:4px 16px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between;transition:padding .4s cubic-bezier(.25,.8,.25,1);will-change:padding}.md-list.md-dense .md-list-item-content{min-height:40px;font-size:13px}.md-list.md-dense .md-list-item-content>.md-avatar{margin-top:0;margin-bottom:0}.md-list.md-dense .md-list-item-content>.md-avatar:not(.md-small){width:36px;min-width:36px;height:36px}.md-list.md-dense .md-list-item-content>.md-avatar:first-child{margin-right:20px}.md-list.md-double-line .md-list-item-content{min-height:72px}.md-list.md-double-line.md-dense .md-list-item-content{min-height:60px}.md-list.md-triple-line .md-list-item-content{min-height:88px}.md-list.md-triple-line.md-dense .md-list-item-content{min-height:76px}.md-list-item-content .md-list-action{margin:0 -10px 0 0}.md-list-item-content .md-list-action:last-of-type{margin:0 -10px 0 16px}.md-list.md-triple-line .md-list-item-content .md-list-action:last-of-type{align-self:flex-start}.md-list-item-content>.md-icon:first-child{margin-right:32px}.md-list-item-content>.md-icon:last-child{margin-left:16px}.md-list-item-content>.md-checkbox,.md-list-item-content>.md-radio{margin:0}.md-list-item-content>.md-checkbox:first-child,.md-list-item-content>.md-radio:first-child{margin-right:36px}.md-list-item-content>.md-switch{margin:0}.md-list-item-content>.md-switch:first-child{margin-right:22px}.md-list-item-content>.md-avatar{margin:4px 0}.md-list-item-content>.md-avatar:first-child{margin-right:16px}.md-list-item-text{-webkit-box-flex:1;flex:1;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:start;align-items:flex-start;overflow:hidden;line-height:1.25em;white-space:nowrap}.md-list.md-dense .md-list-item-text{font-size:13px}.md-list-item-text *{width:100%;margin:0;overflow:hidden;line-height:1.25em;text-overflow:ellipsis}.md-list-item-text :nth-child(2),.md-list-item-text :nth-child(3){font-size:14px}.md-list.md-dense .md-list-item-text *{font-size:13px}.md-list-item-expand{border-top:1px solid transparent;border-bottom:1px solid transparent;transition:border .4s cubic-bezier(.25,.8,.25,1);will-change:border}.md-list-item-expand.md-active .md-list-expand-icon{-webkit-perspective:1000px;perspective:1000px;-webkit-perspective-origin:50% 50%;perspective-origin:50% 50%;-webkit-transform:rotateX(180deg);transform:rotateX(180deg)}.md-list-item-expand.md-active .md-list-expand{opacity:1;-webkit-transform:translate3D(0,0,0);transform:translate3D(0,0,0)}.md-list-item-expand .md-list-expand{height:0;opacity:0;overflow:hidden;-webkit-transform:translate3D(0,-24px,0);transform:translate3D(0,-24px,0);transition:.4s cubic-bezier(.25,.8,.25,1);transition-property:opacity,-webkit-transform;transition-property:transform,opacity;transition-property:transform,opacity,-webkit-transform;will-change:transform,opacity}.md-list-item-expand .md-list-expand-icon{transition:-webkit-transform .4s cubic-bezier(.25,.8,.25,1);transition:transform .4s cubic-bezier(.25,.8,.25,1);transition:transform .4s cubic-bezier(.25,.8,.25,1),-webkit-transform .4s cubic-bezier(.25,.8,.25,1);will-change:transform}@-webkit-keyframes b{0%{-webkit-transform:translateX(0);transform:translateX(0)}20%{-webkit-animation-timing-function:cubic-bezier(.5,0,.7,.5);animation-timing-function:cubic-bezier(.5,0,.7,.5);-webkit-transform:translateX(0);transform:translateX(0)}60%{-webkit-animation-timing-function:cubic-bezier(.3,.38,.55,.96);animation-timing-function:cubic-bezier(.3,.38,.55,.96);-webkit-transform:translateX(83.67%);transform:translateX(83.67%)}to{-webkit-transform:translateX(200.61%);transform:translateX(200.61%)}}@keyframes b{0%{-webkit-transform:translateX(0);transform:translateX(0)}20%{-webkit-animation-timing-function:cubic-bezier(.5,0,.7,.5);animation-timing-function:cubic-bezier(.5,0,.7,.5);-webkit-transform:translateX(0);transform:translateX(0)}60%{-webkit-animation-timing-function:cubic-bezier(.3,.38,.55,.96);animation-timing-function:cubic-bezier(.3,.38,.55,.96);-webkit-transform:translateX(83.67%);transform:translateX(83.67%)}to{-webkit-transform:translateX(200.61%);transform:translateX(200.61%)}}@-webkit-keyframes c{0%{-webkit-transform:scaleX(.08);transform:scaleX(.08)}35%{-webkit-animation-timing-function:cubic-bezier(.33,.12,.79,1);animation-timing-function:cubic-bezier(.33,.12,.79,1);-webkit-transform:scaleX(.08);transform:scaleX(.08)}70%{-webkit-animation-timing-function:cubic-bezier(.06,.11,.6,1);animation-timing-function:cubic-bezier(.06,.11,.6,1);-webkit-transform:scaleX(.66);transform:scaleX(.66)}to{-webkit-transform:scaleX(.08);transform:scaleX(.08)}}@keyframes c{0%{-webkit-transform:scaleX(.08);transform:scaleX(.08)}35%{-webkit-animation-timing-function:cubic-bezier(.33,.12,.79,1);animation-timing-function:cubic-bezier(.33,.12,.79,1);-webkit-transform:scaleX(.08);transform:scaleX(.08)}70%{-webkit-animation-timing-function:cubic-bezier(.06,.11,.6,1);animation-timing-function:cubic-bezier(.06,.11,.6,1);-webkit-transform:scaleX(.66);transform:scaleX(.66)}to{-webkit-transform:scaleX(.08);transform:scaleX(.08)}}@-webkit-keyframes d{0%{-webkit-animation-timing-function:cubic-bezier(.15,0,.52,.41);animation-timing-function:cubic-bezier(.15,0,.52,.41);-webkit-transform:translateX(0);transform:translateX(0)}25%{-webkit-animation-timing-function:cubic-bezier(.31,.28,.8,.73);animation-timing-function:cubic-bezier(.31,.28,.8,.73);-webkit-transform:translateX(37.65%);transform:translateX(37.65%)}50%{-webkit-animation-timing-function:cubic-bezier(.4,.63,.6,.9);animation-timing-function:cubic-bezier(.4,.63,.6,.9);-webkit-transform:translateX(84.39%);transform:translateX(84.39%)}to{-webkit-transform:translateX(160.28%);transform:translateX(160.28%)}}@keyframes d{0%{-webkit-animation-timing-function:cubic-bezier(.15,0,.52,.41);animation-timing-function:cubic-bezier(.15,0,.52,.41);-webkit-transform:translateX(0);transform:translateX(0)}25%{-webkit-animation-timing-function:cubic-bezier(.31,.28,.8,.73);animation-timing-function:cubic-bezier(.31,.28,.8,.73);-webkit-transform:translateX(37.65%);transform:translateX(37.65%)}50%{-webkit-animation-timing-function:cubic-bezier(.4,.63,.6,.9);animation-timing-function:cubic-bezier(.4,.63,.6,.9);-webkit-transform:translateX(84.39%);transform:translateX(84.39%)}to{-webkit-transform:translateX(160.28%);transform:translateX(160.28%)}}@-webkit-keyframes e{0%{-webkit-animation-timing-function:cubic-bezier(.15,0,.52,.41);animation-timing-function:cubic-bezier(.15,0,.52,.41);-webkit-transform:scaleX(.08);transform:scaleX(.08)}20%{-webkit-animation-timing-function:cubic-bezier(.31,.28,.8,.73);animation-timing-function:cubic-bezier(.31,.28,.8,.73);-webkit-transform:scaleX(.46);transform:scaleX(.46)}45%{-webkit-animation-timing-function:cubic-bezier(.4,.63,.6,.9);animation-timing-function:cubic-bezier(.4,.63,.6,.9);-webkit-transform:scaleX(.73);transform:scaleX(.73)}to{-webkit-transform:scaleX(.08);transform:scaleX(.08)}}@keyframes e{0%{-webkit-animation-timing-function:cubic-bezier(.15,0,.52,.41);animation-timing-function:cubic-bezier(.15,0,.52,.41);-webkit-transform:scaleX(.08);transform:scaleX(.08)}20%{-webkit-animation-timing-function:cubic-bezier(.31,.28,.8,.73);animation-timing-function:cubic-bezier(.31,.28,.8,.73);-webkit-transform:scaleX(.46);transform:scaleX(.46)}45%{-webkit-animation-timing-function:cubic-bezier(.4,.63,.6,.9);animation-timing-function:cubic-bezier(.4,.63,.6,.9);-webkit-transform:scaleX(.73);transform:scaleX(.73)}to{-webkit-transform:scaleX(.08);transform:scaleX(.08)}}@-webkit-keyframes f{to{-webkit-transform:translate3D(-8px,0,0);transform:translate3D(-8px,0,0)}}@keyframes f{to{-webkit-transform:translate3D(-8px,0,0);transform:translate3D(-8px,0,0)}}.md-progress-bar{height:5px;overflow:hidden;position:relative;-webkit-transform:translateZ(0) scaleY(1);transform:translateZ(0) scaleY(1);-webkit-transform-origin:top center;transform-origin:top center;transition:opacity .3s cubic-bezier(.4,0,.2,1),-webkit-transform .4s cubic-bezier(.4,0,.2,1);transition:opacity .3s cubic-bezier(.4,0,.2,1),transform .4s cubic-bezier(.4,0,.2,1);transition:opacity .3s cubic-bezier(.4,0,.2,1),transform .4s cubic-bezier(.4,0,.2,1),-webkit-transform .4s cubic-bezier(.4,0,.2,1);will-change:opacity,transform}.md-progress-bar.md-indeterminate .md-progress-bar-track,.md-progress-bar.md-query .md-progress-bar-track{left:-150%;-webkit-animation:b 2s infinite linear;animation:b 2s infinite linear}.md-progress-bar.md-indeterminate .md-progress-bar-track:after,.md-progress-bar.md-query .md-progress-bar-track:after{-webkit-animation:c 2s infinite linear;animation:c 2s infinite linear}.md-progress-bar.md-indeterminate .md-progress-bar-fill,.md-progress-bar.md-query .md-progress-bar-fill{left:-55%;-webkit-animation:d 2s infinite linear;animation:d 2s infinite linear}.md-progress-bar.md-indeterminate .md-progress-bar-fill:after,.md-progress-bar.md-query .md-progress-bar-fill:after{-webkit-animation:e 2s infinite linear;animation:e 2s infinite linear}.md-progress-bar.md-buffer .md-progress-bar-buffer,.md-progress-bar.md-buffer .md-progress-bar-fill,.md-progress-bar.md-buffer .md-progress-bar-track,.md-progress-bar.md-determinate .md-progress-bar-buffer,.md-progress-bar.md-determinate .md-progress-bar-fill,.md-progress-bar.md-determinate .md-progress-bar-track{transition:.25s cubic-bezier(.25,.8,.25,1)}.md-progress-bar.md-determinate .md-progress-bar-track{display:none}.md-progress-bar.md-buffer .md-progress-bar-buffer{border-top:4px dotted;-webkit-animation:f .25s infinite linear;animation:f .25s infinite linear}.md-progress-bar.md-query{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.md-progress-bar-enter,.md-progress-bar-leave-active{opacity:.5;-webkit-transform:translateZ(0) scaleY(0);transform:translateZ(0) scaleY(0)}.md-progress-bar-buffer,.md-progress-bar-fill,.md-progress-bar-track{-webkit-transform-origin:top left;transform-origin:top left}.md-progress-bar-buffer,.md-progress-bar-buffer:after,.md-progress-bar-fill,.md-progress-bar-fill:after,.md-progress-bar-track,.md-progress-bar-track:after{width:100%;height:100%;position:absolute;will-change:transform}.md-progress-bar-buffer:after,.md-progress-bar-fill:after,.md-progress-bar-track:after{display:inline-block;left:0;content:\" \"}@-webkit-keyframes g{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes g{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@-webkit-keyframes h{0%{opacity:0;-webkit-transform:rotate(-90deg) translateZ(0);transform:rotate(-90deg) translateZ(0)}20%{opacity:1}to{-webkit-transform:rotate(270deg) translateZ(0);transform:rotate(270deg) translateZ(0)}}@keyframes h{0%{opacity:0;-webkit-transform:rotate(-90deg) translateZ(0);transform:rotate(-90deg) translateZ(0)}20%{opacity:1}to{-webkit-transform:rotate(270deg) translateZ(0);transform:rotate(270deg) translateZ(0)}}.md-progress-spinner{display:-webkit-inline-box;display:inline-flex;position:relative}.md-progress-spinner.md-indeterminate{-webkit-animation:g 2s linear infinite;animation:g 2s linear infinite}.md-progress-spinner.md-indeterminate.md-progress-spinner-enter,.md-progress-spinner.md-indeterminate.md-progress-spinner-leave-active{transition-duration:.4s}.md-progress-spinner.md-indeterminate.md-progress-spinner-enter .md-progress-spinner-draw,.md-progress-spinner.md-indeterminate.md-progress-spinner-leave-active .md-progress-spinner-draw{opacity:0;-webkit-transform:scale(.1);transform:scale(.1)}.md-progress-spinner.md-indeterminate .md-progress-spinner-circle{-webkit-animation:4s infinite cubic-bezier(.25,.8,.25,1);animation:4s infinite cubic-bezier(.25,.8,.25,1)}.md-progress-spinner.md-determinate.md-progress-spinner-enter-active,.md-progress-spinner.md-determinate.md-progress-spinner-leave-active{transition-duration:2s}.md-progress-spinner.md-determinate.md-progress-spinner-enter-active .md-progress-spinner-draw,.md-progress-spinner.md-determinate.md-progress-spinner-leave-active .md-progress-spinner-draw{-webkit-animation:h 1.98s cubic-bezier(.25,.8,.25,1) forwards;animation:h 1.98s cubic-bezier(.25,.8,.25,1) forwards}.md-progress-spinner.md-determinate .md-progress-spinner-draw{transition:none}.md-progress-spinner-draw{overflow:visible;-webkit-transform:scale(1) rotate(-90deg);transform:scale(1) rotate(-90deg);-webkit-transform-origin:center;transform-origin:center;transition:.4s cubic-bezier(.25,.8,.25,1);will-change:opacity,transform}.md-progress-spinner-circle{fill:none;-webkit-transform-origin:center;transform-origin:center;transition:stroke-dashoffset .25s cubic-bezier(.25,.8,.25,1);will-change:stroke-dashoffset,stroke-dasharray,stroke-width,animation-name,r}.md-radio{width:auto;margin:16px 16px 16px 0;display:-webkit-inline-box;display:inline-flex;position:relative}.md-radio:not(.md-disabled),.md-radio:not(.md-disabled) .md-radio-label{cursor:pointer}.md-radio .md-radio-container{width:20px;min-width:20px;height:20px;position:relative;border:2px solid transparent;border-radius:50%;transition:.4s cubic-bezier(.25,.8,.25,1)}.md-radio .md-radio-container:focus{outline:none}.md-radio .md-radio-container:after,.md-radio .md-radio-container:before{position:absolute;transition:.4s cubic-bezier(.55,0,.55,.2);content:\" \"}.md-radio .md-radio-container:before{width:48px;height:48px;top:50%;left:50%;z-index:5;border-radius:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.md-radio .md-radio-container:after{position:absolute;top:3px;right:3px;bottom:3px;left:3px;border-radius:50%;opacity:0;-webkit-transform:scale3D(.38,.38,1);transform:scale3D(.38,.38,1);content:\" \"}.md-radio .md-radio-container .md-ripple{width:48px!important;height:48px!important;top:50%!important;left:50%!important;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);border-radius:50%}.md-radio .md-radio-container input{position:absolute;left:-999em}.md-radio .md-radio-label{height:20px;padding-left:16px;position:relative;line-height:20px}.md-radio.md-checked .md-radio-container:after{opacity:1;-webkit-transform:scale3D(1,1,1);transform:scale3D(1,1,1);transition:.4s cubic-bezier(.25,.8,.25,1)}.md-radio.md-required label:after{position:absolute;top:2px;right:0;-webkit-transform:translateX(calc(100% + 2px));transform:translateX(calc(100% + 2px));content:\"*\";line-height:1em;vertical-align:top}.md-snackbar{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:288px;max-width:568px;min-height:48px;max-height:80px;padding:14px 24px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;position:fixed;z-index:12;border-radius:2px;transition:.4s cubic-bezier(.4,0,.2,1);will-change:background-color,color,opacity,transform}.md-snackbar.md-position-center{margin:0 auto;right:0;bottom:0;left:0}.md-snackbar.md-position-center.md-snackbar-enter,.md-snackbar.md-position-center.md-snackbar-leave-active{-webkit-transform:translate3D(0,calc(100% + 8px),0);transform:translate3D(0,calc(100% + 8px),0)}.md-snackbar.md-position-left{bottom:24px;left:24px}.md-snackbar.md-position-left.md-snackbar-enter,.md-snackbar.md-position-left.md-snackbar-leave-active{-webkit-transform:translate3D(0,calc(100% + 32px),0);transform:translate3D(0,calc(100% + 32px),0)}.md-snackbar-enter,.md-snackbar-enter .md-snackbar-content,.md-snackbar-leave-active,.md-snackbar-leave-active .md-snackbar-content{opacity:0}.md-snackbar-content{-webkit-box-flex:1;flex:1;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between;transition:opacity .38s cubic-bezier(.55,0,.55,.2)}.md-snackbar-content .md-button{min-width:0;margin:-8px -8px -8px 36px}.md-snackbar-content .md-button+.md-button{margin-left:16px}@media (max-width:600px){.md-snackbar{left:0;-webkit-transform:none;transform:none;border-radius:0}.md-snackbar-content .md-button{margin-left:12px}}.md-speed-dial{display:-webkit-inline-box;display:inline-flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.md-speed-dial.md-top-left,.md-speed-dial.md-top-right{position:absolute;top:24px}.md-speed-dial.md-bottom-left,.md-speed-dial.md-bottom-right{position:absolute;bottom:24px}.md-speed-dial.md-bottom-center,.md-speed-dial.md-top-center{position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.md-speed-dial.md-top-center{top:24px}.md-speed-dial.md-bottom-center{bottom:24px}.md-speed-dial.md-bottom-right,.md-speed-dial.md-top-right{right:24px}.md-speed-dial.md-bottom-left,.md-speed-dial.md-top-left{left:24px}.md-speed-dial.md-fixed{position:fixed}.md-speed-dial.md-direction-top.md-effect-fling .md-speed-dial-content .md-button{-webkit-transform:translate3d(0,50%,0) scale(.8);transform:translate3d(0,50%,0) scale(.8)}.md-speed-dial.md-direction-top .md-speed-dial-target{-webkit-box-ordinal-group:3;order:2;margin-bottom:0!important}.md-speed-dial.md-direction-top .md-speed-dial-content{-webkit-box-ordinal-group:2;order:1}.md-speed-dial.md-direction-top .md-speed-dial-content .md-button:first-child{margin-top:0}.md-speed-dial.md-direction-bottom.md-effect-fling .md-speed-dial-content .md-button{-webkit-transform:translate3d(0,-50%,0) scale(.8);transform:translate3d(0,-50%,0) scale(.8)}.md-speed-dial.md-direction-bottom .md-speed-dial-target{-webkit-box-ordinal-group:2;order:1;margin-top:0!important}.md-speed-dial.md-direction-bottom .md-speed-dial-content{-webkit-box-ordinal-group:3;order:2}.md-speed-dial.md-direction-bottom .md-speed-dial-content .md-button:last-child{margin-bottom:0}.md-speed-dial.md-effect-scale .md-speed-dial-content .md-button{-webkit-transform:scale(.3);transform:scale(.3)}.md-speed-dial.md-active .md-morph-initial,.md-speed-dial.md-with-hover:hover .md-morph-initial{opacity:0;-webkit-transform:translate3D(-50%,-50%,0) rotate(90deg) scale(.7);transform:translate3D(-50%,-50%,0) rotate(90deg) scale(.7)}.md-speed-dial.md-active .md-morph-final,.md-speed-dial.md-with-hover:hover .md-morph-final{opacity:1;-webkit-transform:translate3D(-50%,-50%,0) rotate(0deg) scale(1);transform:translate3D(-50%,-50%,0) rotate(0deg) scale(1)}.md-speed-dial.md-active .md-speed-dial-content .md-button,.md-speed-dial.md-with-hover:hover .md-speed-dial-content .md-button{pointer-events:auto;opacity:1;-webkit-transform:translateZ(0) scale(1)!important;transform:translateZ(0) scale(1)!important;transition:opacity .2s cubic-bezier(.4,0,.2,1),-webkit-transform .3s cubic-bezier(.25,.8,.25,1);transition:opacity .2s cubic-bezier(.4,0,.2,1),transform .3s cubic-bezier(.25,.8,.25,1);transition:opacity .2s cubic-bezier(.4,0,.2,1),transform .3s cubic-bezier(.25,.8,.25,1),-webkit-transform .3s cubic-bezier(.25,.8,.25,1)}.md-speed-dial.md-active .md-speed-dial-content .md-button[md-button-index=\"0\"],.md-speed-dial.md-with-hover:hover .md-speed-dial-content .md-button[md-button-index=\"0\"]{transition-delay:0s}.md-speed-dial.md-active .md-speed-dial-content .md-button[md-button-index=\"1\"],.md-speed-dial.md-with-hover:hover .md-speed-dial-content .md-button[md-button-index=\"1\"]{transition-delay:.1s}.md-speed-dial.md-active .md-speed-dial-content .md-button[md-button-index=\"2\"],.md-speed-dial.md-with-hover:hover .md-speed-dial-content .md-button[md-button-index=\"2\"]{transition-delay:.2s}.md-speed-dial.md-active .md-speed-dial-content .md-button[md-button-index=\"3\"],.md-speed-dial.md-with-hover:hover .md-speed-dial-content .md-button[md-button-index=\"3\"]{transition-delay:.3s}.md-speed-dial.md-active .md-speed-dial-content .md-button[md-button-index=\"4\"],.md-speed-dial.md-with-hover:hover .md-speed-dial-content .md-button[md-button-index=\"4\"]{transition-delay:.4s}.md-speed-dial.md-active .md-speed-dial-content .md-button[md-button-index=\"5\"],.md-speed-dial.md-with-hover:hover .md-speed-dial-content .md-button[md-button-index=\"5\"]{transition-delay:.5s}.md-speed-dial .md-button{margin:6px 0}.md-speed-dial .md-speed-dial-content .md-button{pointer-events:none;opacity:0;transition:opacity .3s cubic-bezier(.4,0,.2,1),-webkit-transform 0s cubic-bezier(.4,0,.2,1) .3s;transition:opacity .3s cubic-bezier(.4,0,.2,1),transform 0s cubic-bezier(.4,0,.2,1) .3s;transition:opacity .3s cubic-bezier(.4,0,.2,1),transform 0s cubic-bezier(.4,0,.2,1) .3s,-webkit-transform 0s cubic-bezier(.4,0,.2,1) .3s;will-change:opacity,transform}.md-speed-dial .md-morph-final,.md-speed-dial .md-morph-initial{position:absolute;top:50%;left:50%;-webkit-transform:translate3D(-50%,-50%,0);transform:translate3D(-50%,-50%,0);transition:.3s cubic-bezier(.25,.8,.25,1);transition-property:opacity,-webkit-transform;transition-property:opacity,transform;transition-property:opacity,transform,-webkit-transform;will-change:opacity,transform}.md-speed-dial .md-morph-final{opacity:0;-webkit-transform:translate3D(-50%,-50%,0) scale(.7) rotate(-90deg);transform:translate3D(-50%,-50%,0) scale(.7) rotate(-90deg)}.md-speed-dial-target{z-index:1}.md-speed-dial-content{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-align:center;align-items:center;position:relative;z-index:2}.md-speed-dial-content,.md-steppers{transition:.3s cubic-bezier(.4,0,.2,1)}.md-steppers{transition-property:color,background-color;will-change:color,background-color}.md-steppers.md-no-transition *{transition:none!important}.md-steppers.md-dynamic-height .md-steppers-wrapper{transition:height .3s cubic-bezier(.4,0,.2,1);will-change:height}.md-steppers.md-horizontal.md-alternative .md-stepper-header{height:104px}.md-steppers.md-horizontal.md-alternative .md-stepper-header:first-of-type .md-stepper-icon:before,.md-steppers.md-horizontal.md-alternative .md-stepper-header:first-of-type .md-stepper-number:before,.md-steppers.md-horizontal.md-alternative .md-stepper-header:last-of-type .md-stepper-icon:after,.md-steppers.md-horizontal.md-alternative .md-stepper-header:last-of-type .md-stepper-number:after{content:none}.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-ripple{-webkit-box-pack:center;justify-content:center}.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-button-content{padding-top:16px;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-button-content:after,.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-button-content:before{content:none}.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-stepper-text{height:32px;-webkit-box-pack:start;justify-content:flex-start;text-align:center}.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-stepper-icon,.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-stepper-number{margin:0 8px 8px;position:relative}.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-stepper-icon:after,.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-stepper-icon:before,.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-stepper-number:after,.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-stepper-number:before{width:9999%;height:1px;position:absolute;top:50%;z-index:2;transition:background-color .3s cubic-bezier(.4,0,.2,1);will-change:background-color;content:\" \"}.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-stepper-icon:after,.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-stepper-number:after{left:calc(100% + 8px)}.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-stepper-icon:before,.md-steppers.md-horizontal.md-alternative .md-stepper-header .md-stepper-number:before{right:32px}.md-steppers.md-vertical .md-stepper-header{height:56px}.md-steppers.md-vertical .md-stepper-header .md-ripple{padding:0 24px 0 16px}.md-steppers.md-vertical .md-steppers-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.md-steppers.md-vertical .md-button-content:after,.md-steppers.md-vertical .md-button-content:before{content:none}.md-steppers.md-vertical .md-stepper-icon,.md-steppers.md-vertical .md-stepper-number{margin-right:12px}.md-steppers.md-vertical .md-stepper{padding:0;position:relative}.md-steppers.md-vertical .md-stepper:last-of-type:after{content:none}.md-steppers.md-vertical .md-stepper:after{width:1px;position:absolute;top:48px;bottom:-8px;left:36px;z-index:2;transition:background-color .3s cubic-bezier(.4,0,.2,1);will-change:background-color;content:\" \"}.md-steppers-navigation{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);display:-webkit-box;display:flex}.md-steppers-navigation .md-stepper-header{width:auto}.md-stepper-header{width:100%;height:72px;margin:0;-webkit-box-flex:1;flex:1;border-radius:0;font-weight:400;text-align:left;text-transform:none}.md-stepper-header:first-of-type .md-button-content:before,.md-stepper-header:last-of-type .md-button-content:after{content:none}.md-stepper-header.md-active,.md-stepper-header.md-error{font-weight:500}.md-stepper-header .md-ripple{padding:0 16px;-webkit-box-pack:start;justify-content:flex-start}.md-stepper-header .md-button-content{padding:0 8px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;transition:color .3s cubic-bezier(.4,0,.2,1);will-change:color}.md-stepper-header .md-button-content:after,.md-stepper-header .md-button-content:before{height:1px;position:absolute;top:50%;transition:background-color .3s cubic-bezier(.4,0,.2,1);will-change:background-color;content:\" \"}.md-stepper-header .md-button-content:after{width:9999%;left:100%}.md-stepper-header .md-button-content:before{width:16px;left:-16px}.md-stepper-header .md-button-content svg{transition:.3s cubic-bezier(.4,0,.2,1);transition-property:color,fill;will-change:color,fill}.md-stepper-text{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;line-height:16px;white-space:nowrap}.md-stepper-icon,.md-stepper-number{margin-right:8px;transition:color .3s cubic-bezier(.4,0,.2,1);will-change:color}.md-stepper-number{width:24px;height:24px;border-radius:24px;transition:.3s cubic-bezier(.4,0,.2,1);transition-property:color,background-color;will-change:color,background-color;font-size:12px;line-height:24px;text-align:center}.md-stepper-done{width:20px;height:20px}.md-stepper-done,.md-stepper-editable{-webkit-transform:translateY(-1px);transform:translateY(-1px)}.md-stepper-editable{width:14px;height:14px}.md-stepper-description,.md-stepper-error{font-size:12px;font-weight:400;line-height:16px}.md-stepper-description{opacity:.54}.md-steppers-wrapper{overflow:hidden;transition:none;will-change:height}.md-steppers-container{display:-webkit-box;display:flex;-webkit-box-align:start;align-items:flex-start;flex-wrap:nowrap;-webkit-transform:translateZ(0);transform:translateZ(0);transition:-webkit-transform .35s cubic-bezier(.4,0,.2,1);transition:transform .35s cubic-bezier(.4,0,.2,1);transition:transform .35s cubic-bezier(.4,0,.2,1),-webkit-transform .35s cubic-bezier(.4,0,.2,1);will-change:transform}.md-stepper{width:100%;-webkit-box-flex:1;flex:1 0 100%;padding:16px 24px}@media (max-width:944px){.md-stepper{padding:8px 16px}}.md-steppers.md-vertical .md-stepper-content{padding:0 24px 0 60px;height:0;overflow:hidden;opacity:0;-webkit-transform:translate3D(0,-20px,0);transform:translate3D(0,-20px,0);transition:.35s cubic-bezier(.25,.8,.25,1);transition-property:opacity,height,padding-bottom,-webkit-transform;transition-property:opacity,transform,height,padding-bottom;transition-property:opacity,transform,height,padding-bottom,-webkit-transform;will-change:opacity,transform,height,padding-bottom}.md-steppers.md-vertical .md-stepper-content.md-active{height:auto;padding-bottom:40px;opacity:1;-webkit-transform:translate3D(0,0,0);transform:translate3D(0,0,0)}.md-subheader{min-height:48px;padding:0 16px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-flow:row wrap;font-size:14px;font-weight:500}.md-switch{width:auto;margin:16px 16px 16px 0;display:-webkit-inline-box;display:inline-flex;position:relative}.md-switch:not(.md-disabled),.md-switch:not(.md-disabled) .md-switch-label{cursor:pointer}.md-switch .md-switch-container{width:34px;min-width:34px;height:14px;margin:3px 0;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;position:relative;border-radius:14px;transition:.4s cubic-bezier(.25,.8,.25,1)}.md-switch .md-switch-thumb{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12);width:20px;height:20px;position:relative;border-radius:50%;transition:.4s cubic-bezier(.25,.8,.25,1)}.md-switch .md-switch-thumb:before{width:48px;height:48px;top:50%;left:50%;z-index:5;content:\" \"}.md-switch .md-switch-thumb .md-ripple,.md-switch .md-switch-thumb:before{position:absolute;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.md-switch .md-switch-thumb .md-ripple{width:48px!important;height:48px!important;top:50%!important;left:50%!important;border-radius:50%}.md-switch .md-switch-thumb input{position:absolute;left:-999em}.md-switch .md-switch-label{height:20px;padding-left:16px;position:relative;line-height:20px}.md-switch.md-checked .md-switch-thumb{-webkit-transform:translate3d(15px,0,0);transform:translate3d(15px,0,0)}.md-switch.md-required label:after{position:absolute;top:2px;right:0;-webkit-transform:translateX(calc(100% + 2px));transform:translateX(calc(100% + 2px));content:\"*\";line-height:1em;vertical-align:top}.md-table{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-flow:column wrap;overflow-x:auto}.md-table .md-table-fixed-header{position:relative}.md-table .md-table-fixed-header-active{border-bottom:1px solid}.md-table .md-table-content{-webkit-box-flex:1;flex:1;overflow-x:auto;transition:height .3s cubic-bezier(.4,0,.2,1)}.md-table .md-table-empty{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center}.md-table table{width:100%;border-spacing:0;border-collapse:collapse;overflow:hidden}.md-table-head{padding:0;position:relative;font-size:12px;line-height:16px;text-align:left}.md-table-head:last-child .md-table-head-label{padding-right:24px}.md-table-head.md-numeric{text-align:right}.md-table-head.md-sortable:first-of-type .md-table-sortable-icon,.md-table-head.md-table-cell-selection+.md-sortable .md-table-sortable-icon{right:8px;left:auto}.md-table-head .md-icon{width:16px;height:16px;font-size:16px}.md-table-head .md-icon:not(.md-sortable-icon){margin:0 4px}.md-table-head .md-icon:first-child{margin-left:0}.md-table-head .md-icon:last-child{margin-right:0}.md-sortable{cursor:pointer}.md-sortable.md-sorted .md-table-sortable-icon,.md-sortable:hover .md-table-sortable-icon{opacity:1}.md-sortable.md-sorted-desc .md-table-sortable-icon{-webkit-transform:translateY(-50%) rotate(180deg);transform:translateY(-50%) rotate(180deg)}.md-table-head-container{height:56px;padding:14px 0}.md-table-head-container,.md-table-head-label{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.md-table-head-label{height:28px;padding-right:32px;padding-left:24px;display:inline-block;position:relative;line-height:28px}.md-table-sortable-icon{position:absolute;top:50%;left:0;transition:.3s cubic-bezier(.4,0,.2,1);-webkit-transform:translateY(-50%);transform:translateY(-50%);opacity:0;color:rgba(0,0,0,.38)}.md-table-alternate-header{position:absolute;top:0;right:0;left:0;z-index:2;will-change:opacity,transform}.md-table-alternate-header-enter,.md-table-alternate-header-leave-active{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}.md-table-alternate-header-enter-active{transition:.3s cubic-bezier(.4,0,.2,1)}.md-table-alternate-header-leave-active{transition:.2s cubic-bezier(.4,0,1,1)}.md-table-row{transition:.3s cubic-bezier(.4,0,.2,1);transition-property:background-color,font-weight;will-change:background-color,font-weight}.md-table-row.md-has-selection{cursor:pointer}.md-table-row.md-selected-single{font-weight:500}tbody .md-table-row td{border-top:1px solid}.md-table-cell-selection{width:66px}.md-table-cell-selection+td .md-table-cell-container,.md-table-cell-selection+th .md-table-head-label{padding-left:0}.md-table-cell-selection .md-table-cell-container,.md-table-cell-selection .md-table-cell-label,.md-table-cell-selection .md-table-head-container,.md-table-cell-selection .md-table-head-label{padding:0;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;overflow:visible}.md-table-cell-selection .md-checkbox{margin:0}.md-table-cell-selection .md-checkbox .md-checkbox-container{width:18px;min-width:18px;height:18px}.md-table-cell-selection .md-checkbox .md-checkbox-container:after{top:-1px;left:4px}.md-table-toolbar{padding-left:24px}.md-table-toolbar .md-title{-webkit-box-flex:1;flex:1;font-size:20px}.md-toolbar,.md-toolbar-row{width:100%;min-height:64px;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;align-content:center;transition:.3s cubic-bezier(.4,0,.2,1);transition-property:opacity,background-color,box-shadow,color,min-height,-webkit-transform;transition-property:opacity,background-color,box-shadow,transform,color,min-height;transition-property:opacity,background-color,box-shadow,transform,color,min-height,-webkit-transform;will-change:opacity,background-color,box-shadow,transform,color,min-height}.md-toolbar{padding:0 16px;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-flow:row wrap;position:relative;z-index:2}.md-toolbar.md-dense{min-height:48px}.md-toolbar.md-large .md-toolbar-row,.md-toolbar.md-medium .md-toolbar-row{min-height:64px}.md-toolbar.md-medium{min-height:88px}.md-toolbar.md-large{min-height:128px;align-content:inherit}.md-toolbar.md-large.md-dense{min-height:96px}.md-toolbar.md-large.md-dense .md-toolbar-row+.md-toolbar-row{min-height:32px}.md-toolbar .md-toolbar-offset{margin-left:56px}.md-toolbar .md-button,.md-toolbar .md-icon{z-index:1}.md-toolbar .md-button~.md-title,.md-toolbar .md-icon~.md-title{margin-left:24px}.md-toolbar .md-button+.md-button,.md-toolbar .md-button:last-child{margin-right:0}.md-toolbar .md-button:first-child{margin-left:0}.md-toolbar .md-display-1,.md-toolbar .md-display-2,.md-toolbar .md-title{margin:0;margin-left:8px;overflow:hidden;font-weight:400;letter-spacing:.02em;text-overflow:ellipsis;white-space:nowrap;vertical-align:top}.md-toolbar .md-display-1{padding:12px 0}.md-toolbar .md-field{margin-top:2px;margin-bottom:14px;padding-top:16px}.md-toolbar-row{align-self:flex-start}.md-toolbar-section-end,.md-toolbar-section-start{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-flex:1;flex:1}.md-toolbar-section-start{-webkit-box-pack:start;justify-content:flex-start;-webkit-box-ordinal-group:1;order:0}.md-toolbar-section-end{-webkit-box-pack:end;justify-content:flex-end;-webkit-box-ordinal-group:11;order:10}@media (max-width:944px){.md-toolbar,.md-toolbar-row{min-height:48px}.md-toolbar{padding:0 8px}.md-toolbar .md-toolbar-offset{margin-left:48px}.md-toolbar .md-button~.md-title,.md-toolbar .md-icon~.md-title{margin-left:16px}}@media (max-width:600px){.md-toolbar,.md-toolbar-row{min-height:56px}}.md-table-empty-state{padding-left:24px}.md-table-cell{height:48px;position:relative;transition:.3s cubic-bezier(.4,0,.2,1);font-size:13px;line-height:18px}.md-table-cell.md-numeric{text-align:right}.md-table-cell:last-child .md-table-cell-container{padding-right:24px}.md-table-cell-container{padding:6px 32px 6px 24px}.md-table-pagination{height:56px;display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1;-webkit-box-align:center;align-items:center;-webkit-box-pack:end;justify-content:flex-end;border-top:1px solid;font-size:12px}.md-table-pagination .md-table-pagination-previous{margin-right:2px;margin-left:18px}.md-table-pagination .md-field{width:48px;min-width:36px;margin:-16px 24px 0 32px}.md-table-pagination .md-field:after,.md-table-pagination .md-field:before{display:none}.md-table-pagination .md-field .md-select-value{font-size:13px}.md-menu-content.md-pagination-select{max-width:82px;min-width:56px;margin-top:5px}.md-tabs{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.md-tabs.md-no-transition *{transition:none!important}.md-tabs.md-dynamic-height .md-tabs-content{transition:height .3s cubic-bezier(.4,0,.2,1);will-change:height}.md-tabs.md-transparent .md-tabs-navigation{background-color:transparent!important}.md-tabs.md-dynamic-height .md-tabs-content{transition:height .35s cubic-bezier(.25,.8,.25,1)}.md-tabs.md-alignment-left .md-tabs-navigation{-webkit-box-pack:start;justify-content:flex-start}.md-tabs.md-alignment-right .md-tabs-navigation{-webkit-box-pack:end;justify-content:flex-end}.md-tabs.md-alignment-centered .md-tabs-navigation,.md-tabs.md-alignment-fixed .md-tabs-navigation{-webkit-box-pack:center;justify-content:center}.md-tabs.md-alignment-fixed .md-tabs-navigation .md-button{max-width:264px;min-width:160px;-webkit-box-flex:1;flex:1}.md-toolbar .md-tabs{padding-left:48px}.md-tabs-navigation{display:-webkit-box;display:flex;position:relative}.md-tabs-navigation .md-button{max-width:264px;min-width:72px;height:48px;margin:0;cursor:pointer;border-radius:0;font-size:13px}.md-tabs-navigation .md-button-content{position:static}.md-tabs-navigation .md-icon-label{height:72px}.md-tabs-navigation .md-icon-label .md-button-content{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center}.md-tabs-navigation .md-icon-label .md-tab-icon+.md-tab-label{margin-top:10px}.md-tabs-navigation .md-ripple{padding:0 24px}.md-tabs-indicator{height:2px;position:absolute;bottom:0;left:0;-webkit-transform:translateZ(0);transform:translateZ(0);will-change:left,right}.md-tabs-indicator.md-tabs-indicator-left{transition:left .3s cubic-bezier(.4,0,.2,1),right .35s cubic-bezier(.4,0,.2,1)}.md-tabs-indicator.md-tabs-indicator-right{transition:right .3s cubic-bezier(.4,0,.2,1),left .35s cubic-bezier(.4,0,.2,1)}.md-tabs-content{overflow:hidden;transition:none;will-change:height}.md-tabs-container{display:-webkit-box;display:flex;-webkit-box-align:start;align-items:flex-start;flex-wrap:nowrap;-webkit-transform:translateZ(0);transform:translateZ(0);transition:-webkit-transform .35s cubic-bezier(.4,0,.2,1);transition:transform .35s cubic-bezier(.4,0,.2,1);transition:transform .35s cubic-bezier(.4,0,.2,1),-webkit-transform .35s cubic-bezier(.4,0,.2,1);will-change:transform}.md-tab{width:100%;-webkit-box-flex:1;flex:1 0 100%;padding:16px}@media (max-width:944px){.md-tabs.md-alignment-fixed .md-tabs-navigation .md-button{min-width:72px}.md-toolbar .md-tabs{margin:0 -8px;padding-left:0}.md-tabs-navigation .md-ripple{padding:0 12px}.md-tab{padding:8px}}.md-tooltip{height:22px;padding:0 8px;position:fixed;z-index:8;pointer-events:none;border-radius:2px;transition:.15s cubic-bezier(0,0,.2,1);transition-property:opacity,-webkit-transform;transition-property:opacity,transform;transition-property:opacity,transform,-webkit-transform;will-change:opacity,transform,top,left!important;font-size:10px;line-height:22px;text-transform:none;white-space:nowrap}.md-tooltip.md-tooltip-leave-active{transition-timing-function:cubic-bezier(.4,0,1,1)}.md-tooltip.md-tooltip-enter,.md-tooltip.md-tooltip-leave-active{opacity:0}.md-tooltip.md-tooltip-enter.md-tooltip-top,.md-tooltip.md-tooltip-leave-active.md-tooltip-top{-webkit-transform:translate3d(0,4px,0) scale(.95);transform:translate3d(0,4px,0) scale(.95)}.md-tooltip.md-tooltip-enter.md-tooltip-right,.md-tooltip.md-tooltip-leave-active.md-tooltip-right{-webkit-transform:translate3d(-4px,0,0) scale(.95);transform:translate3d(-4px,0,0) scale(.95)}.md-tooltip.md-tooltip-enter.md-tooltip-bottom,.md-tooltip.md-tooltip-leave-active.md-tooltip-bottom{-webkit-transform:translate3d(0,-4px,0) scale(.95);transform:translate3d(0,-4px,0) scale(.95)}.md-tooltip.md-tooltip-enter.md-tooltip-left,.md-tooltip.md-tooltip-leave-active.md-tooltip-left{-webkit-transform:translate3d(4px,0,0) scale(.95);transform:translate3d(4px,0,0) scale(.95)}@media (max-width:944px){.md-tooltip{height:32px;font-size:14px;line-height:32px}}", ""]);

	// exports


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}

	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}

	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;

		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = linkElement.href;

		linkElement.href = URL.createObjectURL(blob);

		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ })
/******/ ]);